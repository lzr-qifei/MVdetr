logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-04_19-06-39
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
pos_emb size:  [ 80 125]
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(3.5827, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.8842, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(4.0855, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0506, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.1440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(4.7116, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0484, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.4526, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(4.4250, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0436, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.2997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(4.3380, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.2546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(4.4888, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0498, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.3439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(3.8421, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.0158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(4.6717, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.4289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(4.1824, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0409, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.1729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(3.7686, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0475, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9793, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(4.3173, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0383, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.2353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(3.9144, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0452, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.0475, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(4.3108, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0411, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.2376, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.6843, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0525, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9472, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.5774, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.8911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(4.1048, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0429, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.1382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(3.6911, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0436, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.5790, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.8847, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(3.6114, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(3.6883, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0457, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(4.2722, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0480, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.2320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.2875, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0454, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7346, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(3.7398, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0432, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(3.2498, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0433, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(3.1877, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.6936, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(3.1790, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.6740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(3.2812, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0484, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(3.9756, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0480, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.0838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(3.2335, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.6996, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(3.1437, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0536, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.6791, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.3662, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7765, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(2.4249, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.3055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(3.0295, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0503, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.6153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(2.7505, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.4779, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(2.8898, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.5349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(2.7843, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0429, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.4780, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(2.0917, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(2.7884, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0477, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.4896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(2.3953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0451, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.2879, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(2.0516, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0454, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(2.2098, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0494, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(2.4567, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.3242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.9633, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0492, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0800, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.5841, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0495, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.8498, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0403, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(2.8941, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0583, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.5636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(2.1192, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0430, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.7446, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0556, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9836, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.9673, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.7200, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0501, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.6061, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0493, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(2.1185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0436, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1464, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.7787, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0469, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9831, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4579, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0484, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8258, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.8314, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.3600, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0432, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.5668, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0530, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8895, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.3550, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.2130, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0424, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4262, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.4609, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.4321, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0454, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.9688, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0566, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5975, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7587, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0409, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.1402, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.9109, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0528, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.5180, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8542, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7660, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0452, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4733, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8227, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0448, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.1277, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0472, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.9760, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8137, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0429, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4926, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8099, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6230, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0459, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.9207, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0430, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5464, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7391, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0498, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4691, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6723, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0486, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6743, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0458, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.5853, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6000, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0461, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3922, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7037, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.5966, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3912, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6273, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0441, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6298, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3726, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0459, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2780, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.5003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0406, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4562, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0402, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.5281, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3470, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4924, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3461, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3774, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3818, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0516, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2941, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3964, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3436, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.4051, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0594, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2984, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0486, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2463, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3929, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0371, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3772, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0484, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3113, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2527, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3592, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0427, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2649, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3141, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0457, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:100, loss: 0.002484, Time: 39.1
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3122, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0497, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3215, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3218, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0460, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3307, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0442, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3010, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0492, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3867, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2998, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3341, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0398, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2466, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3135, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0523, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3175, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0463, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2513, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3216, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3371, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0442, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3317, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0459, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3088, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0397, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3366, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0463, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3131, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3078, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2563, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.4558, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0490, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3259, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3103, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0495, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3373, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0493, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3022, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3194, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3421, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0442, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3267, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0448, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3443, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3637, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2789, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3266, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0494, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3134, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3494, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4048, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0507, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3246, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3536, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0477, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3557, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0503, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3396, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3031, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0491, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3365, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3548, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0406, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3336, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0401, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2469, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3652, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0495, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2817, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3293, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0419, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0405, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3197, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0477, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2552, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3431, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3320, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0519, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2698, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.4210, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2921, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3668, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3067, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0495, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3234, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2407, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3686, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2774, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.4126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3065, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0541, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3103, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0528, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3086, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0452, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2447, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3528, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3303, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0468, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3418, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3547, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2641, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3011, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0419, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3450, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0453, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3401, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3376, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0487, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3302, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0453, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2557, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3051, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0505, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3256, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0431, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3383, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0517, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3289, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0527, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3759, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2736, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3628, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3149, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0451, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3426, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2492, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3285, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3360, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2551, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3345, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0488, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2649, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3191, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3131, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0482, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2529, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3403, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3294, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0452, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2551, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0515, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3000, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2470, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3260, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0406, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3212, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0449, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2503, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3115, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0528, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3218, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0492, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3352, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0442, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2561, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3304, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3325, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2609, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3757, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0360, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3135, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0482, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3433, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3308, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2504, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3297, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2518, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3788, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0524, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3315, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3649, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0488, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2800, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3788, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3141, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0463, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2496, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3371, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0501, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2688, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3370, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2641, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3348, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0419, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:200, loss: 0.001256, Time: 74.2
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3466, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0500, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2734, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3323, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2571, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3104, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0429, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2409, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3268, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2527, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3088, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0472, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3281, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2511, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3439, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2744, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3187, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0454, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2502, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3018, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0452, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3049, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0445, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2415, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3239, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2459, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 33])
cost torch.Size([200, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3620, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0494, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2798, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3037, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2388, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3130, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0404, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2374, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3198, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0445, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3882, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3136, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3231, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0417, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3067, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0460, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2918, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0498, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2456, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0470, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3468, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0475, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2685, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3212, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0489, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3956, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0454, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2887, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3081, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2469, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3194, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3370, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0441, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3371, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0484, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3099, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3153, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2468, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3488, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0469, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3055, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0448, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3383, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0470, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3238, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3582, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3151, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2446, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3500, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0391, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3232, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2487, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3175, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0484, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3633, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3127, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0482, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3198, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0460, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2518, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3169, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3191, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3391, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2565, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3109, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0462, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2479, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3430, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4132, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3049, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0424, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2372, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3088, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0371, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3237, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0514, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3056, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0436, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2400, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3207, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2513, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3303, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0540, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2732, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4545, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3012, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2475, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3371, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3046, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0419, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3304, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0459, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3283, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3425, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0528, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2769, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3245, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0445, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3316, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3037, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3294, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3627, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0398, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2610, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3053, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0475, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2477, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3114, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2499, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3333, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2578, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4211, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0546, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3358, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3239, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3154, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2487, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3405, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3145, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0493, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2560, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3510, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3481, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0491, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3159, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0496, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2571, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2989, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2426, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3124, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0457, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3326, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4093, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0385, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2816, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3124, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2493, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3618, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0388, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3235, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0461, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3183, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2471, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3230, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0406, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3441, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2560, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3277, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2468, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3288, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0417, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2479, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3452, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0411, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3404, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3251, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0486, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3259, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0427, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2483, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3659, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0468, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2766, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3373, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0383, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2452, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4810, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3246, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3288, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0433, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2511, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:300, loss: 0.000837, Time: 109.5
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3491, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0413, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3668, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0448, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3397, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0493, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2686, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3125, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0483, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2529, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3627, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3486, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3024, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3426, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0437, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3253, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0493, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3204, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0453, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3417, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0459, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3305, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3301, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3473, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0413, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3255, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2964, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2441, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3152, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2525, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3177, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3152, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0431, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0451, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3343, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0415, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2502, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3032, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0462, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2441, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3194, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0384, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2365, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3102, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3181, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2433, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3270, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0391, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3249, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3888, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2820, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3132, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0445, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2456, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3206, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0429, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2461, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3326, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0432, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3243, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0402, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2426, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3359, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3672, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0457, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2750, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3220, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3031, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3217, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0448, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2504, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3069, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0385, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6394, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3302, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0481, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3393, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0453, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3195, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0385, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3501, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3268, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0461, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3099, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0475, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2499, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3408, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3076, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2370, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3416, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0419, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2545, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3758, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2848, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3511, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0475, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2706, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3148, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  42
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  42
gt_cnt:  38
gt_cnt:  43
gt_cnt:  39
gt_cnt:  36
gt_cnt:  40
gt_cnt:  41
gt_cnt:  43
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  42
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  36
gt_cnt:  38
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  35
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  44
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  38
gt_cnt:  35
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  40
gt_cnt:  36
gt_cnt:  42
gt_cnt:  41
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  41
gt_cnt:  42
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  37
gt_cnt:  42
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  35
gt_cnt:  44
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  43
gt_cnt:  37
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  33
gt_cnt:  35
gt_cnt:  44
gt_cnt:  34
gt_cnt:  38
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  42
gt_cnt:  35
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  42
gt_cnt:  35
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  44
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  35
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  42
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  35
gt_cnt:  41
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  43
gt_cnt:  35
gt_cnt:  41
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  34
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  44
gt_cnt:  42
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  36
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  35
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  35
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  36
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  43
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  35
gt_cnt:  36
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  43
gt_cnt:  40
gt_cnt:  36
gt_cnt:  42
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  41
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  42
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  43
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
tensor(0.2409, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3120, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2452, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3199, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0429, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2458, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3245, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0424, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2471, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3309, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0448, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4481, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3431, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0454, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3155, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:360, loss: 0.000682, Time: 130.0
Testing...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3527, device='cuda:0'), 'loss_center': tensor(0.0430, device='cuda:0')}
loss: tensor(0.2624, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3448, device='cuda:0'), 'loss_center': tensor(0.0395, device='cuda:0')}
loss: tensor(0.2515, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3425, device='cuda:0'), 'loss_center': tensor(0.0388, device='cuda:0')}
loss: tensor(0.2489, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3418, device='cuda:0'), 'loss_center': tensor(0.0428, device='cuda:0')}
loss: tensor(0.2565, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3464, device='cuda:0'), 'loss_center': tensor(0.0456, device='cuda:0')}
loss: tensor(0.2645, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3520, device='cuda:0'), 'loss_center': tensor(0.0384, device='cuda:0')}
loss: tensor(0.2528, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3627, device='cuda:0'), 'loss_center': tensor(0.0413, device='cuda:0')}
loss: tensor(0.2640, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3530, device='cuda:0'), 'loss_center': tensor(0.0427, device='cuda:0')}
loss: tensor(0.2619, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3438, device='cuda:0'), 'loss_center': tensor(0.0448, device='cuda:0')}
loss: tensor(0.2615, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3413, device='cuda:0'), 'loss_center': tensor(0.0379, device='cuda:0')}
loss: tensor(0.2465, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3550, device='cuda:0'), 'loss_center': tensor(0.0402, device='cuda:0')}
loss: tensor(0.2579, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3532, device='cuda:0'), 'loss_center': tensor(0.0366, device='cuda:0')}
loss: tensor(0.2499, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3524, device='cuda:0'), 'loss_center': tensor(0.0431, device='cuda:0')}
loss: tensor(0.2625, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3607, device='cuda:0'), 'loss_center': tensor(0.0441, device='cuda:0')}
loss: tensor(0.2685, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3495, device='cuda:0'), 'loss_center': tensor(0.0417, device='cuda:0')}
loss: tensor(0.2582, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3410, device='cuda:0'), 'loss_center': tensor(0.0451, device='cuda:0')}
loss: tensor(0.2606, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3455, device='cuda:0'), 'loss_center': tensor(0.0434, device='cuda:0')}
loss: tensor(0.2595, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3533, device='cuda:0'), 'loss_center': tensor(0.0476, device='cuda:0')}
loss: tensor(0.2718, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3494, device='cuda:0'), 'loss_center': tensor(0.0412, device='cuda:0')}
loss: tensor(0.2572, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3430, device='cuda:0'), 'loss_center': tensor(0.0388, device='cuda:0')}
loss: tensor(0.2491, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3474, device='cuda:0'), 'loss_center': tensor(0.0415, device='cuda:0')}
loss: tensor(0.2567, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3503, device='cuda:0'), 'loss_center': tensor(0.0345, device='cuda:0')}
loss: tensor(0.2441, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3534, device='cuda:0'), 'loss_center': tensor(0.0371, device='cuda:0')}
loss: tensor(0.2509, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3488, device='cuda:0'), 'loss_center': tensor(0.0442, device='cuda:0')}
loss: tensor(0.2629, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3553, device='cuda:0'), 'loss_center': tensor(0.0460, device='cuda:0')}
loss: tensor(0.2696, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3622, device='cuda:0'), 'loss_center': tensor(0.0436, device='cuda:0')}
loss: tensor(0.2683, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3594, device='cuda:0'), 'loss_center': tensor(0.0465, device='cuda:0')}
loss: tensor(0.2727, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3612, device='cuda:0'), 'loss_center': tensor(0.0458, device='cuda:0')}
loss: tensor(0.2722, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3555, device='cuda:0'), 'loss_center': tensor(0.0454, device='cuda:0')}
loss: tensor(0.2686, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3555, device='cuda:0'), 'loss_center': tensor(0.0423, device='cuda:0')}
loss: tensor(0.2623, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3599, device='cuda:0'), 'loss_center': tensor(0.0400, device='cuda:0')}
loss: tensor(0.2599, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3553, device='cuda:0'), 'loss_center': tensor(0.0438, device='cuda:0')}
loss: tensor(0.2653, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3570, device='cuda:0'), 'loss_center': tensor(0.0402, device='cuda:0')}
loss: tensor(0.2588, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3701, device='cuda:0'), 'loss_center': tensor(0.0400, device='cuda:0')}
loss: tensor(0.2651, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3512, device='cuda:0'), 'loss_center': tensor(0.0392, device='cuda:0')}
loss: tensor(0.2540, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost gt_cnt:  39
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  34
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  34
gt_cnt:  36
gt_cnt:  39
torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3541, device='cuda:0'), 'loss_center': tensor(0.0412, device='cuda:0')}
loss: tensor(0.2595, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3584, device='cuda:0'), 'loss_center': tensor(0.0374, device='cuda:0')}
loss: tensor(0.2540, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3487, device='cuda:0'), 'loss_center': tensor(0.0432, device='cuda:0')}
loss: tensor(0.2608, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3509, device='cuda:0'), 'loss_center': tensor(0.0395, device='cuda:0')}
loss: tensor(0.2545, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3414, device='cuda:0'), 'loss_center': tensor(0.0412, device='cuda:0')}
loss: tensor(0.2530, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
moda: 0.0%, modp: 35.0%, prec: 7.0%, recall: 9.3%
Test, loss: 0.259471, Time: 15.255
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3341, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3378, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3035, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0398, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2313, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3166, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0426, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2435, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0449, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3285, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0480, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3413, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0404, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3355, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2558, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3386, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2470, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0413, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2410, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3479, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2697, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3207, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0441, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2486, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3110, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3231, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3315, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2502, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3278, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0407, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3715, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3370, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2574, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3293, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2478, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3934, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3274, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0546, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2730, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3084, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2497, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3608, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3309, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3233, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2492, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3276, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2509, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3103, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2444, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3094, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0399, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2345, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3595, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0415, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3236, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0442, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2502, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3176, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0433, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3474, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2526, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3317, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0445, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2547, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3237, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2409, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3011, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3286, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2444, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3127, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0426, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2416, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3254, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3040, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2467, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3293, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0361, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3345, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0452, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2983, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3406, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0436, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3209, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0436, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2477, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3303, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0382, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2415, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3368, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0441, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3698, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0355, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2559, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3300, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3362, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0375, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2951, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0431, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3095, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0398, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3141, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0401, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2372, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3389, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2580, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3708, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3429, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0419, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3292, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0468, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0452, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3228, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0409, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2433, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3312, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0371, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3066, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3342, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0365, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2401, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2992, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2367, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3266, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3081, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3376, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3359, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0382, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2444, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3085, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2386, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3195, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0379, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2924, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2389, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3131, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2415, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3562, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0427, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3076, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0409, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3299, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3415, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2539, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3142, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0394, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3190, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0403, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2401, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3108, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2445, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3044, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3358, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0341, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3364, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0359, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2401, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3075, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0344, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2226, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3652, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3471, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2571, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3446, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3123, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0433, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3268, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0430, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2494, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3080, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2453, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3279, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0491, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3242, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2471, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3377, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0426, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3215, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0376, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3280, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0449, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3299, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0391, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3316, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2421, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2993, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0411, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3231, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0442, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2499, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3233, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2508, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3161, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0391, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3257, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0337, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 2, Batch:100, loss: 0.002303, Time: 37.6
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3073, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2436, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3305, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0393, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.5308, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0352, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3312, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3248, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2416, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3362, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0419, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2518, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0343, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2205, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3305, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2497, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3391, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0417, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2529, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3236, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2463, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3160, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2415, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3493, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3282, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0501, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2643, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3069, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0445, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2425, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3246, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2468, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2408, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3321, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3134, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2391, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3010, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3210, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0457, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2518, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3166, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2452, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3494, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0457, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3352, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0401, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2479, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3092, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0405, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3732, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0365, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3155, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2421, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3207, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3076, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0430, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3174, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3388, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0405, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2504, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3106, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3175, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2487, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3361, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0445, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3306, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0427, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3478, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0403, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3235, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2457, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3273, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0411, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2458, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3575, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0394, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3140, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2370, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3137, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3517, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0359, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2477, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3178, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0480, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2550, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3280, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0374, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2389, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3218, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0377, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3476, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3799, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0439, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2778, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3322, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0403, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2467, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3125, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0402, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3148, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0361, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3309, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0402, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2459, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3129, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3221, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0353, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3122, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3209, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0426, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2458, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3210, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2396, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3083, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0398, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3369, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0367, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3390, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0388, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2471, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3226, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0376, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2364, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3164, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0356, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4294, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2983, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3119, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0451, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2462, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3071, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0419, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2374, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3298, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0371, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2391, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3191, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2376, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3592, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2620, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3065, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0417, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3401, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0391, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2482, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3107, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0417, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2388, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3048, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3256, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0375, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3247, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0361, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2346, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3424, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3151, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0392, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3249, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3318, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0382, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3611, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3055, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0413, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3070, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2404, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3095, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0367, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3070, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3032, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3192, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0344, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3230, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0342, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3107, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0392, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3198, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0402, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.4361, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.5231, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0460, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3103, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3252, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2418, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3248, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0458, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2539, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3307, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0383, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3371, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3030, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2335, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3364, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0347, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2377, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3180, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3114, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3245, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3008, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 2, Batch:200, loss: 0.001201, Time: 72.9
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3027, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3171, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2479, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2997, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0339, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3274, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2513, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3662, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0415, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3180, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0383, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3261, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0430, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3116, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3215, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0362, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3383, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 33])
cost torch.Size([200, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3348, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0379, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2433, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3427, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3556, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3411, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2574, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3514, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0403, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3625, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2559, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3358, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0427, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3489, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0398, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2539, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3473, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2587, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3131, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)}
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  36
gt_cnt:  40
gt_cnt:  37
gt_cnt:  35
gt_cnt:  43
gt_cnt:  36
gt_cnt:  38
gt_cnt:  44
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  35
gt_cnt:  35
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  43
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  36
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  41
gt_cnt:  40
gt_cnt:  38
gt_cnt:  36
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  39
gt_cnt:  34
gt_cnt:  37
gt_cnt:  39
gt_cnt:  43
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  38
gt_cnt:  35
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  35
gt_cnt:  41
gt_cnt:  41
gt_cnt:  35
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  44
gt_cnt:  40
gt_cnt:  44
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  40
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  36
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  35
gt_cnt:  39
gt_cnt:  44
gt_cnt:  35
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  42
gt_cnt:  35
gt_cnt:  35
gt_cnt:  42
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  35
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  34
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  43
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  42
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  43
gt_cnt:  41
gt_cnt:  36
gt_cnt:  33
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
tensor(0.2398, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3094, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3608, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0387, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
