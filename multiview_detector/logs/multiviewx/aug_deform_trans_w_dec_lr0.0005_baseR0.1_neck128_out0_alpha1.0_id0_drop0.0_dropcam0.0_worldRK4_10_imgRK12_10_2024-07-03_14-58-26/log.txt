logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-03_14-58-26
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out:  {'pred_logits': tensor([[-4.3991, -4.3383],
        [-4.4732, -4.2987],
        [-4.5504, -4.1790],
        [-4.1986, -4.2534],
        [-4.4997, -4.3927],
        [-4.7119, -4.2134],
        [-4.4216, -4.1850],
        [-4.6136, -4.2184],
        [-4.4675, -4.3044],
        [-4.3331, -4.3164],
        [-4.5538, -4.1710],
        [-4.4379, -4.1502],
        [-4.4618, -4.3154],
        [-4.6723, -4.3278],
        [-4.3971, -4.2680],
        [-4.3811, -4.3682],
        [-4.4389, -4.2801],
        [-4.5601, -4.2930],
        [-4.5439, -4.3997],
        [-4.4789, -4.2669],
        [-4.5807, -4.2154],
        [-4.4187, -4.3926],
        [-4.4481, -4.3233],
        [-4.4044, -4.2677],
        [-4.6817, -4.2469],
        [-4.4621, -4.0024],
        [-4.5762, -4.2689],
        [-4.4177, -4.0995],
        [-4.3791, -4.3723],
        [-4.4746, -4.1885],
        [-4.5942, -4.2959],
        [-4.4338, -4.3084],
        [-4.6885, -4.1545],
        [-4.4847, -4.4329],
        [-4.5639, -4.3276],
        [-4.6907, -4.3471],
        [-4.5466, -4.3431],
        [-4.6007, -4.3728],
        [-4.3633, -4.2578],
        [-4.4199, -4.2820],
        [-4.3224, -4.2159],
        [-4.4442, -4.2118],
        [-4.7577, -4.3084],
        [-4.5835, -4.2163],
        [-4.3991, -4.4042],
        [-4.5063, -4.4359],
        [-4.3155, -4.2142],
        [-4.4720, -4.2509],
        [-4.3915, -4.3914],
        [-4.5996, -4.3142],
        [-4.5058, -4.2989],
        [-4.4780, -4.3764],
        [-4.4816, -4.3036],
        [-4.2995, -4.2312],
        [-4.3855, -4.0765],
        [-4.3870, -4.3576],
        [-4.3622, -4.3272],
        [-4.6897, -4.2878],
        [-4.4259, -4.5202],
        [-4.3530, -4.2604],
        [-4.5082, -4.1492],
        [-4.2820, -4.3492],
        [-4.3829, -4.1936],
        [-4.3888, -4.2635],
        [-4.3259, -4.2389],
        [-4.4202, -4.4062],
        [-4.5381, -4.1293],
        [-4.2850, -4.1808],
        [-4.5137, -4.3049],
        [-4.3708, -4.2298],
        [-4.7972, -4.4988],
        [-4.5723, -4.3964],
        [-4.6118, -4.3095],
        [-4.4683, -4.2895],
        [-4.3717, -4.3521],
        [-4.5351, -4.4294],
        [-4.5441, -4.3166],
        [-4.4671, -4.1594],
        [-4.4347, -4.2879],
        [-4.3265, -4.3377],
        [-4.4552, -4.3199],
        [-4.4982, -4.4256],
        [-4.4540, -4.4293],
        [-4.4692, -4.4461],
        [-4.4144, -3.9934],
        [-4.5420, -4.2239],
        [-4.5393, -4.2302],
        [-4.5642, -4.1947],
        [-4.7579, -4.4810],
        [-4.2971, -4.0863],
        [-4.5423, -4.3946],
        [-4.5051, -4.2331],
        [-4.5724, -3.9955],
        [-4.6082, -4.3551],
        [-4.3819, -4.2939],
        [-4.4855, -4.3598],
        [-4.6782, -4.3496],
        [-4.6373, -4.3787],
        [-4.2879, -4.3370],
        [-4.4436, -4.1455]], device='cuda:0', grad_fn=<SelectBackward0>), 'pred_ct_pts': tensor([[0.9098, 0.6621],
        [0.6495, 0.0675],
        [0.3256, 0.8131],
        [0.2987, 0.0602],
        [0.8851, 0.6143],
        [0.4906, 0.1183],
        [0.8262, 0.8770],
        [0.1918, 0.5798],
        [0.7989, 0.2239],
        [0.9055, 0.1589],
        [0.2308, 0.9834],
        [0.8509, 0.4878],
        [0.3967, 0.2557],
        [0.3409, 0.5541],
        [0.3384, 0.7548],
        [0.0898, 0.4111],
        [0.9301, 0.7930],
        [0.8472, 0.8439],
        [0.7361, 0.4104],
        [0.8414, 0.3285],
        [0.1889, 0.5955],
        [0.4346, 0.1960],
        [0.8033, 0.8425],
        [0.1808, 0.7202],
        [0.8216, 0.4242],
        [0.5911, 0.9296],
        [0.5682, 0.4092],
        [0.2896, 0.0672],
        [0.1580, 0.1578],
        [0.7421, 0.7328],
        [0.8771, 0.3972],
        [0.9429, 0.8408],
        [0.6632, 0.1744],
        [0.9175, 0.5416],
        [0.8495, 0.8354],
        [0.7145, 0.4337],
        [0.2661, 0.4237],
        [0.2734, 0.1467],
        [0.0369, 0.4945],
        [0.8616, 0.5894],
        [0.1150, 0.1354],
        [0.8154, 0.3939],
        [0.5058, 0.5063],
        [0.4277, 0.0917],
        [0.0670, 0.2196],
        [0.8223, 0.8550],
        [0.8468, 0.3356],
        [0.4471, 0.7771],
        [0.4284, 0.7687],
        [0.7541, 0.2700],
        [0.7467, 0.2565],
        [0.4971, 0.7767],
        [0.7404, 0.6857],
        [0.5246, 0.7402],
        [0.0718, 0.5670],
        [0.1252, 0.7550],
        [0.7359, 0.0405],
        [0.4081, 0.7218],
        [0.2289, 0.2163],
        [0.7169, 0.5307],
        [0.4147, 0.1197],
        [0.4608, 0.4761],
        [0.2506, 0.8703],
        [0.3432, 0.4751],
        [0.9086, 0.4969],
        [0.7075, 0.0234],
        [0.3899, 0.3088],
        [0.0402, 0.7313],
        [0.5928, 0.3534],
        [0.3186, 0.3118],
        [0.9203, 0.2464],
        [0.8788, 0.8599],
        [0.2135, 0.7519],
        [0.1179, 0.8403],
        [0.5113, 0.1891],
        [0.5792, 0.3305],
        [0.8252, 0.6165],
        [0.5131, 0.7837],
        [0.2646, 0.5938],
        [0.5486, 0.1916],
        [0.7619, 0.6459],
        [0.5215, 0.4000],
        [0.6438, 0.5039],
        [0.6287, 0.7652],
        [0.9656, 0.6371],
        [0.5856, 0.1501],
        [0.0806, 0.8341],
        [0.1227, 0.5074],
        [0.8654, 0.3126],
        [0.2417, 0.5268],
        [0.9366, 0.4692],
        [0.7875, 0.8813],
        [0.3796, 0.4783],
        [0.0854, 0.1546],
        [0.2050, 0.3082],
        [0.6175, 0.2005],
        [0.1915, 0.4070],
        [0.7198, 0.5783],
        [0.8621, 0.7147],
        [0.1910, 0.6298]], device='cuda:0', grad_fn=<SelectBackward0>), 'pred_offsets': tensor([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], device='cuda:0', grad_fn=<SelectBackward0>)}
cost_class shape:  torch.Size([100, 100])
cost_pts shape:  torch.Size([100, 100])
cost torch.Size([2, 5000])
sizes:  100
