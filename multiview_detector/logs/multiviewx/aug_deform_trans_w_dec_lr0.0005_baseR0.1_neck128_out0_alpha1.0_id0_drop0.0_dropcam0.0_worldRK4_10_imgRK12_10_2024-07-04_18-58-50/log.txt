logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-04_18-58-50
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
pos_emb size:  [ 80 125]
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(4.7706, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0464, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.4317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(4.8057, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0504, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.4533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(5.1046, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0481, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.6004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(5.0430, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0439, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.5654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(4.4286, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0439, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.2582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.9472, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.0235, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(3.8351, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0484, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(5.3988, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.7467, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(4.2841, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0413, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.1833, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(3.6941, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.8943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(4.0884, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0375, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.0817, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(3.4405, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0451, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7654, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(3.7726, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0402, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.9633, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.0349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.4506, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0511, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7764, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(3.8784, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9826, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(3.3473, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(3.4087, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7499, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(3.5235, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0509, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.8127, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(3.3283, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0439, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.7081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(2.8621, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.4781, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(2.9930, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.5432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(2.9666, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.5276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(2.9836, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0453, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.5371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(2.8536, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.4753, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(2.8714, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0427, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.4784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(2.6652, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.3793, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(2.5540, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.3246, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(2.0910, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0893, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(2.4342, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0523, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.2694, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(2.0661, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0482, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.8855, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0482, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9910, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(2.5096, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0498, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.3046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.6768, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0500, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8884, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.6699, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8789, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.5768, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8340, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.9681, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.9922, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0490, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0451, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.6662, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.9178, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0489, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.5466, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0489, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8222, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4783, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0475, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7866, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.2572, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0483, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6769, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.3030, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0500, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.3004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.4350, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.3193, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0463, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.0813, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0538, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5945, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.3209, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0420, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.0265, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0491, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8418, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0494, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8609, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4782, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.9753, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0480, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7566, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0480, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4263, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6950, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0477, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7310, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7641, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0502, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6369, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.9477, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0439, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.5496, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0470, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.5604, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.5849, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3400, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.5460, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.4233, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6283, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0482, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.5731, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0497, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4833, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2861, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3925, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2409, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4380, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0449, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3715, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2334, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3895, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3661, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3892, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0417, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3529, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0458, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2222, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3400, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3837, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3802, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2367, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3339, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3037, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3172, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1998, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3318, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2223, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3334, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3188, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3226, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0486, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3436, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0429, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3420, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0459, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2169, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3406, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0453, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3396, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0475, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3161, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3420, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3501, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2225, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3323, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3280, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3272, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0480, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3342, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0367, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3410, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0535, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2240, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3071, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0497, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3282, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0424, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3192, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0445, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:100, loss: 0.002041, Time: 40.2
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3152, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0533, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3438, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3282, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0470, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3492, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0437, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3144, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2974, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0545, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3365, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3025, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3616, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0461, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3227, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0438, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3269, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3173, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0435, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3044, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0441, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3441, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3116, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3568, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3244, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0524, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3235, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0524, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2996, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3224, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0496, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3373, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3102, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0486, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3337, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0448, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3286, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0461, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3448, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0453, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2982, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0472, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3168, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3483, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0468, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3203, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0489, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3230, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0431, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3370, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3503, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  35
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  35
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  36
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  43
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  35
tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3272, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0492, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  35
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
