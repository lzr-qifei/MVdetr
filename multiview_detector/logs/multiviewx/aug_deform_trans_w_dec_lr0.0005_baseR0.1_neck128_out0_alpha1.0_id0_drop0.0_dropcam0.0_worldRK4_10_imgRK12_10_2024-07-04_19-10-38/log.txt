logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-04_19-10-38
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
pos_emb size:  [ 80 125]
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(2.0792, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0750, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1897, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(2.2163, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.2448, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.8874, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0809, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.9778, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.7343, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0806, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.8084, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0721, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.9801, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0721, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.9680, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0672, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.5343, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0689, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.4309, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0738, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.7886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0654, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.5765, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0741, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9364, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.8459, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0627, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.6939, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0697, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4130, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0822, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.5085, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0677, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8897, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.5185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8721, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.5053, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0652, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8831, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.5288, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0722, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.2963, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0674, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7830, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0710, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.6288, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0736, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.4794, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0726, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8848, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.8052, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0724, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.3471, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0807, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.4908, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0719, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8892, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.2772, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7724, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.6531, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0831, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9927, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.2177, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0794, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.2921, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1778, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0738, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7365, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.3019, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7925, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.2931, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7697, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.1592, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0632, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.0517, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0738, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.0744, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0652, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6676, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.9459, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.0414, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0745, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.2841, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0670, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7760, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.9936, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0827, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.2434, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0726, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.0094, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0766, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.5286, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8909, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.0374, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0701, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6589, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.2862, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0639, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.2506, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0763, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7780, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.1412, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0812, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.2456, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0622, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.5104, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0608, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8768, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.4418, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1343, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0829, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.4363, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8480, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1828, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0707, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.2031, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0783, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.0474, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0693, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.1607, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.0296, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0796, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.2824, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0725, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.3780, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0721, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.1457, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.0260, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0534, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.0749, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0686, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6746, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.9286, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.9932, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0650, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7821, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0701, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.0097, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0584, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6216, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8072, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0713, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5463, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.1598, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0796, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7391, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.5040, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0709, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.0353, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0747, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6671, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.2286, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0732, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7607, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8177, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0704, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5496, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.2919, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0716, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7893, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.0586, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0645, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.9010, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0574, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.0199, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0630, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6739, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0680, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.9283, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0727, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8872, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8714, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0710, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5777, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.9608, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.0384, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6608, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.9324, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0673, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.9469, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0761, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6256, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8202, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0686, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5472, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8502, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7278, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0686, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7218, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0747, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5103, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.8146, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0801, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6579, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0836, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6254, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0836, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4799, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.5413, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0678, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7095, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4823, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8840, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0696, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7891, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0736, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6547, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0803, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4879, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.5805, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0759, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7404, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0637, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4976, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6444, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0684, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4591, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6412, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:100, loss: 0.004532, Time: 39.2
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7106, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0709, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4971, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6539, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0784, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6701, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0724, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4799, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.5357, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0739, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7545, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.4452, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3539, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6497, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4575, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4746, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0670, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3713, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6164, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4391, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0876, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3947, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4445, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0758, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3738, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3434, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0731, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3180, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.4304, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0716, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6319, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0715, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4590, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3276, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0752, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.5846, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0758, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.5305, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0715, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3733, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0726, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4773, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0715, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3816, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4428, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0700, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3850, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0703, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.4452, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0607, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4023, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0753, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4431, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0673, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3562, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3539, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3095, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0599, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2745, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3603, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0699, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2646, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0664, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3549, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0703, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3180, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4463, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2628, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2581, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.4505, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0711, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3675, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.5327, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0725, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2806, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0676, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3286, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0764, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3657, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0710, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3248, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3241, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0771, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3162, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0655, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2795, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3977, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3259, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3495, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0677, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2664, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0679, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2414, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0835, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2876, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2652, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0730, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2786, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3375, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0716, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2344, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0676, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2322, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0744, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2648, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3289, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0680, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2832, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0695, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1829, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0757, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2429, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2353, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0734, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2045, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0872, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2767, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3166, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2466, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2514, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2200, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2125, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0606, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2060, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0665, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1903, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0763, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2477, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2043, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0823, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2151, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0725, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2525, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1862, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0695, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0618, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2820, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1900, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1896, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0652, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2493, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1881, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0722, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2152, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0725, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2526, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1821, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0677, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2264, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2388, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2425, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1985, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0725, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2265, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0665, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2463, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2457, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0647, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1907, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0722, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2398, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2043, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0844, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1942, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0691, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0511, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1958, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0601, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1893, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1822, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0862, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1962, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0588, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1892, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0780, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 33])
cost torch.Size([100, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2162, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0697, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1880, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0696, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1954, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0765, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1888, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0792, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1921, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1803, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0719, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2340, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1829, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0679, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0724, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1951, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0665, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1876, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0680, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1934, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2249, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2053, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0612, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1957, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0690, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2118, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0678, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2415, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2299, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0648, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2445, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2181, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0694, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2478, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1841, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0692, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2281, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0611, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2049, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0701, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2426, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:200, loss: 0.001213, Time: 73.5
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2063, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1871, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0647, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1885, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0730, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1995, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2071, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1954, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0709, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2395, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2194, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0764, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1890, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2326, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1819, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0610, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2192, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0682, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2459, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1788, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0881, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1844, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1858, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0693, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2252, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2275, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2190, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0719, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2159, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0733, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2310, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2492, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1979, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0642, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1668, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0687, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2147, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2155, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0739, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2243, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1999, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0618, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2236, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2084, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0598, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2100, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0739, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1773, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0576, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2225, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0655, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1798, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0685, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1854, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0636, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1925, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0589, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1851, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0752, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2430, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2402, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0685, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1984, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1853, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0721, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1826, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0508, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1783, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0601, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1983, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0718, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2429, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1952, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1863, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0636, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1907, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1920, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1929, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0588, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1954, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0696, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0720, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2128, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0605, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1739, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0790, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1687, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1832, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0667, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2220, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0702, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1892, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0647, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0576, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2250, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0602, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1870, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0577, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1899, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2049, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0720, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2464, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0728, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2433, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1828, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0659, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2232, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1926, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0713, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2390, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2030, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0584, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1963, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0690, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2142, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0642, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2027, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0705, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2424, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2041, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0600, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2221, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1936, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0571, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1854, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2087, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2418, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2514, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0653, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1981, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0594, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2178, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1991, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0554, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1922, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1966, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0612, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1970, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2157, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1965, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0632, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1899, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0682, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1908, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0717, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2387, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1902, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0642, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2236, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2066, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0729, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2492, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1836, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0706, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2069, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1866, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0694, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2320, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1802, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0752, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2404, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1924, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1924, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0770, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1988, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0549, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2076, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0700, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1858, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2049, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0694, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1845, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0627, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1787, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0713, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1712, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2068, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0701, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2435, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1878, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0827, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2592, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2027, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0621, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2085, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:300, loss: 0.000793, Time: 107.6
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2882, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0549, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2539, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1889, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0720, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1824, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0726, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2074, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0653, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2344, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2296, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0696, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2541, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2070, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0672, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2137, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1861, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0662, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2274, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0621, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1908, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0654, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1754, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0721, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2096, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0648, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2344, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1900, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2033, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0567, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1955, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0698, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2402, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1990, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0575, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1913, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0723, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2038, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0703, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2424, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0628, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1898, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0660, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2026, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0601, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2216, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2120, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0621, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1785, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0618, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1852, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2217, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2165, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1944, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0572, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2061, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0520, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1997, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2300, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2043, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0579, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2180, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2082, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0621, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1931, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0561, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1901, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2057, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0618, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2145, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0679, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1960, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0613, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2206, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2045, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1858, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0661, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2018, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0647, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1977, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0672, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2080, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0617, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1877, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0678, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2057, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0469, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2092, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0691, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1981, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0697, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2135, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0660, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2388, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1947, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2049, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0629, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1855, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2267, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1950, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0540, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  43
gt_cnt:  38
gt_cnt:  35
gt_cnt:  38
gt_cnt:  40
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  43
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  35
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  43
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  35
gt_cnt:  34
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  35
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  42
gt_cnt:  36
gt_cnt:  40
gt_cnt:  36
gt_cnt:  43
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  42
gt_cnt:  43
gt_cnt:  35
gt_cnt:  35
gt_cnt:  39
gt_cnt:  37
gt_cnt:  44
gt_cnt:  42
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  44
gt_cnt:  39
gt_cnt:  37
gt_cnt:  35
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  36
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  41
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  42
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  35
gt_cnt:  39
gt_cnt:  37
gt_cnt:  35
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  36
gt_cnt:  42
gt_cnt:  42
gt_cnt:  36
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  35
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  35
gt_cnt:  39
gt_cnt:  36
gt_cnt:  40
gt_cnt:  38
gt_cnt:  42
gt_cnt:  36
gt_cnt:  39
gt_cnt:  42
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  42
gt_cnt:  40
gt_cnt:  35
gt_cnt:  41
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  33
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  34
gt_cnt:  38
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  42
gt_cnt:  40
gt_cnt:  37
gt_cnt:  43
gt_cnt:  36
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  37
gt_cnt:  36
gt_cnt:  44
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  42
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  36
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  38
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  42
gt_cnt:  37
gt_cnt:  38
gt_cnt:  42
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  37
gt_cnt:  35
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  44
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  38
gt_cnt:  43
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  44
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1885, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0622, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0560, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1970, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0696, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2376, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2049, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0655, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2335, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2023, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2240, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2153, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0693, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2463, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1931, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0678, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:360, loss: 0.000645, Time: 128.5
Testing...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2350, device='cuda:0'), 'loss_center': tensor(0.0640, device='cuda:0')}
loss: tensor(0.2455, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2043, device='cuda:0'), 'loss_center': tensor(0.0665, device='cuda:0')}
loss: tensor(0.2352, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2219, device='cuda:0'), 'loss_center': tensor(0.0624, device='cuda:0')}
loss: tensor(0.2357, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2376, device='cuda:0'), 'loss_center': tensor(0.0613, device='cuda:0')}
loss: tensor(0.2414, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2301, device='cuda:0'), 'loss_center': tensor(0.0559, device='cuda:0')}
loss: tensor(0.2267, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2426, device='cuda:0'), 'loss_center': tensor(0.0602, device='cuda:0')}
loss: tensor(0.2416, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2376, device='cuda:0'), 'loss_center': tensor(0.0616, device='cuda:0')}
loss: tensor(0.2420, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2185, device='cuda:0'), 'loss_center': tensor(0.0672, device='cuda:0')}
loss: tensor(0.2436, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2234, device='cuda:0'), 'loss_center': tensor(0.0682, device='cuda:0')}
loss: tensor(0.2481, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2417, device='cuda:0'), 'loss_center': tensor(0.0590, device='cuda:0')}
loss: tensor(0.2389, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2171, device='cuda:0'), 'loss_center': tensor(0.0589, device='cuda:0')}
loss: tensor(0.2264, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2143, device='cuda:0'), 'loss_center': tensor(0.0592, device='cuda:0')}
loss: tensor(0.2255, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2234, device='cuda:0'), 'loss_center': tensor(0.0563, device='cuda:0')}
loss: tensor(0.2242, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2171, device='cuda:0'), 'loss_center': tensor(0.0565, device='cuda:0')}
loss: tensor(0.2216, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2314, device='cuda:0'), 'loss_center': tensor(0.0589, device='cuda:0')}
loss: tensor(0.2335, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2058, device='cuda:0'), 'loss_center': tensor(0.0623, device='cuda:0')}
loss: tensor(0.2274, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2369, device='cuda:0'), 'loss_center': tensor(0.0563, device='cuda:0')}
loss: tensor(0.2309, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2178, device='cuda:0'), 'loss_center': tensor(0.0641, device='cuda:0')}
loss: tensor(0.2371, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2400, device='cuda:0'), 'loss_center': tensor(0.0627, device='cuda:0')}
loss: tensor(0.2454, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2655, device='cuda:0'), 'loss_center': tensor(0.0623, device='cuda:0')}
loss: tensor(0.2573, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2300, device='cuda:0'), 'loss_center': tensor(0.0645, device='cuda:0')}
loss: tensor(0.2439, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2451, device='cuda:0'), 'loss_center': tensor(0.0626, device='cuda:0')}
loss: tensor(0.2478, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2515, device='cuda:0'), 'loss_center': tensor(0.0635, device='cuda:0')}
loss: tensor(0.2527, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2662, device='cuda:0'), 'loss_center': tensor(0.0623, device='cuda:0')}
loss: tensor(0.2578, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2538, device='cuda:0'), 'loss_center': tensor(0.0628, device='cuda:0')}
loss: tensor(0.2524, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2467, device='cuda:0'), 'loss_center': tensor(0.0573, device='cuda:0')}
loss: tensor(0.2379, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2350, device='cuda:0'), 'loss_center': tensor(0.0607, device='cuda:0')}
loss: tensor(0.2390, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2339, device='cuda:0'), 'loss_center': tensor(0.0624, device='cuda:0')}
loss: tensor(0.2417, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2440, device='cuda:0'), 'loss_center': tensor(0.0647, device='cuda:0')}
loss: tensor(0.2513, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2389, device='cuda:0'), 'loss_center': tensor(0.0680, device='cuda:0')}
loss: tensor(0.2554, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2385, device='cuda:0'), 'loss_center': tensor(0.0615, device='cuda:0')}
loss: tensor(0.2423, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2213, device='cuda:0'), 'loss_center': tensor(0.0703, device='cuda:0')}
loss: tensor(0.2513, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2373, device='cuda:0'), 'loss_center': tensor(0.0641, device='cuda:0')}
loss: tensor(0.2469, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2453, device='cuda:0'), 'loss_center': tensor(0.0605, device='cuda:0')}
loss: tensor(0.2436, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2261, device='cuda:0'), 'loss_center': tensor(0.0579, device='cuda:0')}
loss: tensor(0.2289, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  34
gt_cnt:  36
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  34
gt_cnt:  39
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  40
torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2334, device='cuda:0'), 'loss_center': tensor(0.0581, device='cuda:0')}
loss: tensor(0.2330, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2423, device='cuda:0'), 'loss_center': tensor(0.0622, device='cuda:0')}
loss: tensor(0.2456, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2360, device='cuda:0'), 'loss_center': tensor(0.0637, device='cuda:0')}
loss: tensor(0.2453, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2202, device='cuda:0'), 'loss_center': tensor(0.0626, device='cuda:0')}
loss: tensor(0.2352, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2189, device='cuda:0'), 'loss_center': tensor(0.0667, device='cuda:0')}
loss: tensor(0.2428, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
moda: 0.0%, modp: 32.2%, prec: 8.4%, recall: 11.2%
Test, loss: 0.240578, Time: 14.440
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2149, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2441, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1821, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0673, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2383, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0625, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2141, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0655, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1997, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0645, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2127, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0594, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2252, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1897, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0704, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2138, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2751, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0627, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1914, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0578, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2286, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0677, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2496, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1790, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0680, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2256, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2139, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2169, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2047, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0600, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1960, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0648, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1850, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0622, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1867, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0639, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2296, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1729, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0709, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2195, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0597, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1880, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0652, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2056, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0619, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1952, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0607, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0650, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2253, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2396, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0619, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1930, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0594, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1853, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1979, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0675, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2339, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1914, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1901, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0589, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2063, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0665, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2361, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2344, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0666, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1945, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0603, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1843, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0618, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1829, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0636, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2406, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0666, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2536, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2481, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0615, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2471, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2015, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1897, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0563, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2163, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2347, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1982, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1915, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0685, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2196, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2258, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2274, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2406, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2293, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0653, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2452, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2915, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2774, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1955, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1867, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2222, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2038, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0552, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2068, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0625, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2058, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0589, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2152, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0578, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2232, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2265, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0571, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2275, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1947, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0606, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2185, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1973, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0598, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2067, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0659, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2108, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0603, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2260, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2061, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0612, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2255, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1840, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0680, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1996, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2336, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1828, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0636, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1887, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0590, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2064, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0682, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0552, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2077, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0598, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2234, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1813, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0613, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1943, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0611, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2050, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0677, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2064, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0581, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1805, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0591, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1938, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0578, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1892, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0483, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1862, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0602, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2031, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1996, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0681, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2272, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0585, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2034, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0615, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1948, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1849, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0605, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2135, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0571, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2097, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2216, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0509, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2010, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0615, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2235, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1959, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0578, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1995, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2216, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2182, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0544, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2178, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1937, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0583, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2134, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1975, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0639, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2266, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1883, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0611, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2066, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0662, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2271, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0583, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2493, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0642, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2448, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0565, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2355, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2657, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0531, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2390, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1923, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0560, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2067, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0519, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1845, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0677, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 2, Batch:100, loss: 0.002276, Time: 36.7
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1986, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1968, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0565, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1946, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0602, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1866, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0594, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1957, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0518, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0568, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1828, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0595, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1925, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0538, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1922, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2015, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2172, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0629, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0588, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2034, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0590, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1892, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0583, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1979, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0569, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2141, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0508, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1952, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0567, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2259, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0517, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2198, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0617, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1960, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2142, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0629, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2107, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0509, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2063, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0582, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2405, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1966, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0595, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1864, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0579, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2063, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0608, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2682, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2525, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2116, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2052, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1856, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0569, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2021, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0540, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2030, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0682, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2017, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0570, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1994, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2274, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1868, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0542, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2051, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0562, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2024, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0509, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1934, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0601, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2169, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2026, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0599, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1839, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0621, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2162, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1862, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0628, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2087, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1945, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2213, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2351, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0569, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1939, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0608, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1854, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1910, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0599, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1905, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0516, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1985, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2178, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0597, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1860, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0554, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1785, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0582, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2045, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0537, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1849, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0565, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1852, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0562, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0579, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2210, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2556, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0606, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2025, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0586, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1919, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0497, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1825, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0713, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1902, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1866, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0628, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1903, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0666, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1901, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0491, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1933, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2702, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2181, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0576, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1878, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0631, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2200, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2236, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0589, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1990, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0556, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2389, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2761, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2693, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2266, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0588, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1840, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1858, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2211, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1797, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0554, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1930, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2197, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2116, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0539, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2028, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0602, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2022, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0515, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2227, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0530, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1767, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0610, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2220, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1897, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0533, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2015, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2019, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1928, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0576, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1920, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0521, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1939, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2010, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1969, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0538, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1909, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0695, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2345, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1751, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0754, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2384, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2143, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0618, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2188, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0507, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0601, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0660, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2322, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1925, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0510, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1983, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2237, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0529, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1981, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2014, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0604, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1944, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0611, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 2, Batch:200, loss: 0.001097, Time: 71.1
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1918, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0664, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2125, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2130, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0545, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2132, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1700, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0677, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2100, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2017, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0557, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1968, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0622, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1945, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0615, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1868, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0584, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1828, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0575, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2205, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1880, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0537, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1766, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0694, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1861, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1957, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1812, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0581, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2015, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0606, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2219, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2080, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0565, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1760, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0567, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1818, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0558, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1980, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0546, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0518, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0528, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1813, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0591, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2051, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0482, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1928, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0612, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2052, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2133, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0582, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2230, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1918, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0611, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2180, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1876, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2092, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0568, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1843, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1884, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2178, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0624, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1937, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0637, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1840, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0539, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2059, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0560, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1829, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0583, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1873, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2168, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1888, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1910, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2241, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1998, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0585, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2055, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0605, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1889, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0607, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2224, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0529, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2006, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0541, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1909, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2236, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1783, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0639, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2169, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2016, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0529, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1900, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0520, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2106, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0504, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1774, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2226, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2524, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0589, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2052, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0657, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2340, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2272, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0545, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2225, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2509, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2052, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0545, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2197, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0577, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2114, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0585, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1926, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1986, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1873, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0597, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2156, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0524, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2039, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0584, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2088, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0579, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1875, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0569, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1923, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0591, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2900, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0582, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1984, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1922, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0585, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2124, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0652, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1822, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0561, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1983, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0575, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2104, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0556, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1908, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1993, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0540, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1794, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1925, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0570, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1778, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0615, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1857, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2006, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0586, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1832, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0625, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2164, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0544, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2084, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1944, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2170, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0518, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1745, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0577, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1875, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1813, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0626, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2159, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1864, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0530, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1823, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0559, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2380, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0519, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2229, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1907, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0599, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1820, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0627, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0535, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2021, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0581, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1921, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0518, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1996, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2101, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0568, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 2, Batch:300, loss: 0.000729, Time: 103.4
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2335, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2273, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1940, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0494, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1958, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1935, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0575, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2074, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0536, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2111, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0583, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2220, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1922, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0593, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1972, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0661, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1891, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0630, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1986, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0546, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1932, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0603, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2068, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0541, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2138, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1906, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0543, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1907, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2072, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0515, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1956, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0500, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0529, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 33])
cost torch.Size([100, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2170, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0488, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1930, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0570, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2106, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1979, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2094, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0536, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2033, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0590, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0540, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1927, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2114, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0621, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2298, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1964, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0586, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2154, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1963, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2222, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2043, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0558, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2138, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1981, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2111, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1931, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1987, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0540, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1909, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0535, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1842, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2247, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2199, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1930, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0516, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1998, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2196, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0617, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1846, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1885, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0503, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1948, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2054, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0511, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1900, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0556, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1988, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1952, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2018, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0555, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1804, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0568, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1968, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0601, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2148, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0539, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1829, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0601, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2100, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0529, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2033, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0487, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1820, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0637, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1814, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0579, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  36
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  41
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  41
gt_cnt:  42
gt_cnt:  38
gt_cnt:  40
gt_cnt:  42
gt_cnt:  39
gt_cnt:  39
gt_cnt:  42
gt_cnt:  37
gt_cnt:  37
gt_cnt:  44
gt_cnt:  43
gt_cnt:  36
gt_cnt:  38
gt_cnt:  38
gt_cnt:  36
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  35
gt_cnt:  41
gt_cnt:  38
gt_cnt:  42
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  33
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  35
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  35
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  43
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  35
gt_cnt:  39
gt_cnt:  44
gt_cnt:  40
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  35
gt_cnt:  36
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  38
gt_cnt:  44
gt_cnt:  36
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  38
gt_cnt:  41
gt_cnt:  35
gt_cnt:  41
gt_cnt:  40
gt_cnt:  34
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  42
gt_cnt:  43
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  43
gt_cnt:  41
gt_cnt:  38
gt_cnt:  44
gt_cnt:  42
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  36
gt_cnt:  35
gt_cnt:  36
gt_cnt:  41
gt_cnt:  42
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  44
gt_cnt:  35
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  42
gt_cnt:  37
gt_cnt:  39
gt_cnt:  42
gt_cnt:  42
gt_cnt:  43
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  35
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  36
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  35
gt_cnt:  38
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  42
gt_cnt:  40
gt_cnt:  36
gt_cnt:  38
gt_cnt:  35
gt_cnt:  35
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  36
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  34
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  43
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  41
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  43
gt_cnt:  41
gt_cnt:  39
gt_cnt:  36
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1911, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0526, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2162, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0598, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1845, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0631, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1925, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0565, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1915, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0460, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0543, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2071, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1908, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0551, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2057, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 2, Batch:360, loss: 0.000571, Time: 124.0
Testing...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2273, device='cuda:0'), 'loss_center': tensor(0.0540, device='cuda:0')}
loss: tensor(0.2216, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2068, device='cuda:0'), 'loss_center': tensor(0.0559, device='cuda:0')}
loss: tensor(0.2153, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2154, device='cuda:0'), 'loss_center': tensor(0.0521, device='cuda:0')}
loss: tensor(0.2120, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2044, device='cuda:0'), 'loss_center': tensor(0.0506, device='cuda:0')}
loss: tensor(0.2034, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2186, device='cuda:0'), 'loss_center': tensor(0.0515, device='cuda:0')}
loss: tensor(0.2123, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2165, device='cuda:0'), 'loss_center': tensor(0.0525, device='cuda:0')}
loss: tensor(0.2132, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2226, device='cuda:0'), 'loss_center': tensor(0.0538, device='cuda:0')}
loss: tensor(0.2189, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2231, device='cuda:0'), 'loss_center': tensor(0.0536, device='cuda:0')}
loss: tensor(0.2188, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2360, device='cuda:0'), 'loss_center': tensor(0.0592, device='cuda:0')}
loss: tensor(0.2364, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2312, device='cuda:0'), 'loss_center': tensor(0.0570, device='cuda:0')}
loss: tensor(0.2295, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2163, device='cuda:0'), 'loss_center': tensor(0.0497, device='cuda:0')}
loss: tensor(0.2076, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2355, device='cuda:0'), 'loss_center': tensor(0.0479, device='cuda:0')}
loss: tensor(0.2135, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2183, device='cuda:0'), 'loss_center': tensor(0.0519, device='cuda:0')}
loss: tensor(0.2130, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2128, device='cuda:0'), 'loss_center': tensor(0.0495, device='cuda:0')}
loss: tensor(0.2054, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2132, device='cuda:0'), 'loss_center': tensor(0.0525, device='cuda:0')}
loss: tensor(0.2116, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2060, device='cuda:0'), 'loss_center': tensor(0.0576, device='cuda:0')}
loss: tensor(0.2182, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2075, device='cuda:0'), 'loss_center': tensor(0.0508, device='cuda:0')}
loss: tensor(0.2054, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2093, device='cuda:0'), 'loss_center': tensor(0.0589, device='cuda:0')}
loss: tensor(0.2224, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2270, device='cuda:0'), 'loss_center': tensor(0.0550, device='cuda:0')}
loss: tensor(0.2234, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2300, device='cuda:0'), 'loss_center': tensor(0.0528, device='cuda:0')}
loss: tensor(0.2207, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2076, device='cuda:0'), 'loss_center': tensor(0.0539, device='cuda:0')}
loss: tensor(0.2116, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2152, device='cuda:0'), 'loss_center': tensor(0.0558, device='cuda:0')}
loss: tensor(0.2191, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2121, device='cuda:0'), 'loss_center': tensor(0.0525, device='cuda:0')}
loss: tensor(0.2110, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2331, device='cuda:0'), 'loss_center': tensor(0.0508, device='cuda:0')}
loss: tensor(0.2182, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2340, device='cuda:0'), 'loss_center': tensor(0.0510, device='cuda:0')}
loss: tensor(0.2190, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2205, device='cuda:0'), 'loss_center': tensor(0.0499, device='cuda:0')}
loss: tensor(0.2101, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2287, device='cuda:0'), 'loss_center': tensor(0.0529, device='cuda:0')}
loss: tensor(0.2201, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2136, device='cuda:0'), 'loss_center': tensor(0.0620, device='cuda:0')}
loss: tensor(0.2307, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2122, device='cuda:0'), 'loss_center': tensor(0.0621, device='cuda:0')}
loss: tensor(0.2304, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2081, device='cuda:0'), 'loss_center': tensor(0.0654, device='cuda:0')}
loss: tensor(0.2349, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2205, device='cuda:0'), 'loss_center': tensor(0.0581, device='cuda:0')}
loss: tensor(0.2264, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2215, device='cuda:0'), 'loss_center': tensor(0.0549, device='cuda:0')}
loss: tensor(0.2206, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2205, device='cuda:0'), 'loss_center': tensor(0.0485, device='cuda:0')}
loss: tensor(0.2073, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2222, device='cuda:0'), 'loss_center': tensor(0.0493, device='cuda:0')}
loss: tensor(0.2098, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2213, device='cuda:0'), 'loss_center': tensor(0.0477, device='cuda:0')}
loss: tensor(0.2062, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost gt_cnt:  39
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  40
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  34
gt_cnt:  36
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  34
torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2222, device='cuda:0'), 'loss_center': tensor(0.0524, device='cuda:0')}
loss: tensor(0.2159, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2232, device='cuda:0'), 'loss_center': tensor(0.0553, device='cuda:0')}
loss: tensor(0.2223, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2206, device='cuda:0'), 'loss_center': tensor(0.0565, device='cuda:0')}
loss: tensor(0.2234, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2148, device='cuda:0'), 'loss_center': tensor(0.0565, device='cuda:0')}
loss: tensor(0.2205, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2206, device='cuda:0'), 'loss_center': tensor(0.0551, device='cuda:0')}
loss: tensor(0.2205, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([100, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
moda: 0.0%, modp: 35.4%, prec: 8.9%, recall: 11.9%
Test, loss: 0.217512, Time: 14.388
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1897, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0600, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 33])
cost torch.Size([100, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2184, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0500, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1973, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1942, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0540, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1869, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0554, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0549, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1906, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0518, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1763, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0575, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1982, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2175, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0537, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2161, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1963, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0492, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2389, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0569, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1988, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0586, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0544, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1984, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0562, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1863, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0577, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1999, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0510, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2348, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0593, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0493, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1943, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2026, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0543, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2099, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1883, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0510, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1902, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0510, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1971, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1868, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1960, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2210, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0454, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1904, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0546, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1808, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0527, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1958, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1798, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1813, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0478, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1892, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0449, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1912, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1870, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0560, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2020, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0484, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1979, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1851, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0460, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1846, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1896, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0593, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2033, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0511, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1901, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0567, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1697, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2314, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0488, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1870, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0473, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1999, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1940, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0603, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2030, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0468, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1933, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0558, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1876, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0576, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2198, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0542, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2184, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1951, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0493, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0578, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1949, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0595, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2016, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0572, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2153, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1803, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0505, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1870, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0541, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1882, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1890, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1935, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0571, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2014, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1819, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2101, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1982, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0579, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2231, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2243, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1802, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0574, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1933, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2327, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0515, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1850, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0528, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1980, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2123, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0530, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1919, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0538, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0486, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1973, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1911, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0599, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2154, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1884, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0530, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1822, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0606, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2123, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1807, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0494, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1890, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1865, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0557, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2200, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0528, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1806, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0501, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1906, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2758, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0492, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1872, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0576, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1839, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0530, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1980, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1926, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0549, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2062, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1880, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0527, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1868, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0572, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1905, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2127, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1979, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0545, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1928, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1874, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0501, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2060, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0510, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1964, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0549, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2113, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0534, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1797, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0505, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1910, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1879, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0572, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1921, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0515, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2221, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0533, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1927, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0569, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2059, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0502, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2182, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2023, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2129, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0486, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1917, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2716, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0494, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2346, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1982, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0563, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2054, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0493, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0537, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2101, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 3, Batch:100, loss: 0.002147, Time: 37.8
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1955, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0538, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2130, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0534, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2133, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2014, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0521, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2011, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0551, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2076, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1891, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1974, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0506, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1998, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1982, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0516, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1948, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0530, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2155, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0584, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2245, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1797, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0626, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1932, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0483, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2268, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1836, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0468, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1975, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0566, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1924, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0501, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1991, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0516, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1876, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2092, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0581, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1954, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0525, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2026, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1830, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0566, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2064, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0531, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1922, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1892, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0581, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2109, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1902, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0523, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1873, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0575, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1811, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0575, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1973, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0632, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2250, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0509, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2100, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1928, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0531, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1892, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0537, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1879, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1759, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0560, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1835, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1711, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0602, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2143, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0503, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1943, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0539, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1995, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0590, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2092, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0496, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1834, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0521, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1915, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1916, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2301, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0497, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1785, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0529, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1793, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1843, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0496, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2047, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0595, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2213, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1843, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0549, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2060, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1764, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1926, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0535, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1969, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1982, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0535, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1777, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0559, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0526, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1846, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0534, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2171, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0504, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2024, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0537, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1969, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0502, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1988, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2009, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0571, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0495, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2155, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0498, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1791, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0515, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1925, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1985, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0494, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1981, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1754, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0521, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1919, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1927, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0483, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1929, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1944, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0581, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1928, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0589, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2142, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1808, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0512, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1905, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0538, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1947, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0553, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2080, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1854, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0542, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1872, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0617, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1740, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0574, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1944, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1949, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0590, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2154, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1734, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0522, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1912, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1812, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0511, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1928, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1899, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0505, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1879, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0507, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1954, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1859, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1927, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1976, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0536, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2035, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0559, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1864, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2146, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0517, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1990, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0520, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2028, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1918, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0508, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1974, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1945, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0532, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2041, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0526, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0520, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2015, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0560, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1929, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0519, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1973, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0546, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2079, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2143, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2444, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0522, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1992, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0502, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1999, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
gt_cnt:  33
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  42
gt_cnt:  40
gt_cnt:  44
gt_cnt:  41
gt_cnt:  36
gt_cnt:  39
gt_cnt:  44
gt_cnt:  41
gt_cnt:  41
gt_cnt:  40
gt_cnt:  43
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  42
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  41
gt_cnt:  42
gt_cnt:  37
gt_cnt:  35
gt_cnt:  35
gt_cnt:  40
gt_cnt:  43
gt_cnt:  42
gt_cnt:  39
gt_cnt:  42
gt_cnt:  40
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  36
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  36
gt_cnt:  41
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  43
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  43
gt_cnt:  37
gt_cnt:  41
gt_cnt:  36
gt_cnt:  40
gt_cnt:  36
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  36
gt_cnt:  42
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  42
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  42
gt_cnt:  42
gt_cnt:  41
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  37
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  44
gt_cnt:  35
gt_cnt:  37
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  37
gt_cnt:  35
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  42
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1912, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0572, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1813, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0496, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 3, Batch:200, loss: 0.000949, Time: 71.6
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2031, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0531, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1760, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1905, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1951, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0520, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2016, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0599, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
