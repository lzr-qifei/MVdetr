logs/multiviewx/aug_deform_trans_w_dec_lr0.0001_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-11_10-49-01
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 100, 'lr': 0.0001, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX', 'two_stage': False}
Training...
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  43
{'labels': tensor(24.5439, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(22.3581, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(124.9554, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(26.7374, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(29.6272, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(136.6499, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(28.6703, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(27.5987, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(146.1113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(25.5691, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.3109, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(130.1764, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(27.1194, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(24.4826, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(138.0453, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  34
{'labels': tensor(29.3248, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(31.9298, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(149.8172, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(24.4022, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(35.2814, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(125.5393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(25.5884, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(37.3174, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(131.6735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(23.8318, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.0918, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(121.0684, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  43
{'labels': tensor(21.9241, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(29.1210, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(112.5328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(26.8737, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.1477, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(136.2831, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(25.3074, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(30.2946, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(129.5665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(22.3410, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.1240, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(114.0176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(22.3723, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(27.5047, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(114.6120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(22.7940, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.9240, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(116.0622, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(23.3504, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(36.2924, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(120.3812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(21.8000, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(31.3946, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(112.1393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(22.6548, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(26.2641, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(115.9002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(23.6641, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.9519, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(119.9158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(21.8034, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(26.5379, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(111.6709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(20.5049, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(28.9640, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(105.4209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(20.0039, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6251, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(101.7822, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  44
{'labels': tensor(18.5453, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.6146, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(94.7881, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(20.2593, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(25.9063, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(103.8872, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(21.6274, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(26.0583, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(110.7427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(19.7998, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.1238, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(101.1112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(21.2867, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(28.4141, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(109.2749, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(19.4350, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(31.6013, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(100.3350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(18.6372, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.5436, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(95.3403, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(18.6126, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(24.4385, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(95.5068, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(20.5191, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(33.7542, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(105.9711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(18.3272, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(26.2675, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(94.2629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(20.8183, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(30.7819, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(107.1699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(19.2875, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(24.2148, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(98.8589, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(17.7432, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(29.9287, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(91.7091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(19.3905, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.5497, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(98.9077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(18.3015, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.0986, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(93.0174, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(18.7174, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.8548, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(94.9725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  44
{'labels': tensor(15.9462, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(22.6954, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(82.0005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(18.4010, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.0694, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(93.5121, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(19.7958, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.5806, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(100.7372, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(19.1393, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.9552, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(97.4920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(18.2780, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(30.1778, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(94.4076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(17.3688, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(27.1260, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(89.5564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(17.1476, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.2003, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(87.4581, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(18.1032, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(34.6063, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(93.9768, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(15.5150, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(29.1194, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(80.4869, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(17.1045, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.4793, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(87.5704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(17.9912, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.0339, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(92.2595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(16.1933, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.2460, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(82.8911, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(17.8230, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(28.7552, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(91.9907, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(17.1688, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.7720, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(87.6215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(17.3104, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.5982, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(88.4118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(16.2148, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(31.6748, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(84.2416, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  43
{'labels': tensor(14.0330, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.9476, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(72.0599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(14.9815, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.0377, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(77.0113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(14.6971, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.6383, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(75.4494, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(15.2603, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(28.1233, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(79.1136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(15.2055, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.0865, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(78.3360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(15.7057, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.4325, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(80.5720, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(15.3741, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(24.4659, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(79.3171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(13.6071, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(27.9032, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(70.8257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(14.1320, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.3850, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(72.0984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(14.9290, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.8789, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(76.6330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(13.9299, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(22.0431, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(71.8536, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(13.1435, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.7332, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(67.4908, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(15.2695, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.8311, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(78.5306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(14.3772, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.5238, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(73.8386, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(13.6084, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.6467, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(70.1064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(14.4388, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.9135, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(74.3854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(14.6990, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(22.8492, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(75.7799, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(13.1999, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.4961, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(67.8490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(13.8819, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.8613, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(71.3956, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(13.3774, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.3722, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(68.7244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(13.1233, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.4340, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(67.9597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(12.4016, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.5286, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(64.1606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(14.3227, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.5187, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(73.6655, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(12.9029, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.8885, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(66.3032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(14.1560, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(26.2206, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(73.4021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(12.5189, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.8234, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(64.5766, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(12.8479, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.9524, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(65.7345, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(12.3575, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.8438, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(63.9718, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(11.9954, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(29.5291, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(62.9297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(12.1396, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.2973, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(62.7275, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(12.1635, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.2756, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(62.8449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(12.0188, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(24.2571, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(62.5198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(11.6360, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.6853, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(60.3483, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(12.3461, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.4159, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(63.6719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(12.2911, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.3636, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(63.3920, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(11.0340, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.3405, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(56.9040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(11.7143, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.6920, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(60.7405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(10.8640, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.3235, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(56.3523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(12.2681, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6751, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(63.1082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(10.5269, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(24.3257, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(55.0670, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  34
{'labels': tensor(12.7122, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.7466, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(65.4357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(10.9675, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.4800, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(56.6853, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(10.5165, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.9550, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(54.9778, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(11.3244, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.7022, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(58.0923, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(10.6535, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.0408, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(55.5714, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(10.7266, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.1281, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(55.7458, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:100, loss: 0.557458, Time: 39.1
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  43
{'labels': tensor(9.6134, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(22.6198, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(50.3292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(10.1153, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(24.7569, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(53.0523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(10.4056, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.5043, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(53.7786, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(10.9656, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.4599, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(56.4740, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  44
{'labels': tensor(8.9564, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.4879, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(46.9310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(10.1316, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.8284, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(52.5407, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(11.1485, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.4570, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(57.5883, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(9.3259, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.1309, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(48.6427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(10.5362, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.1250, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(54.1935, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(9.2629, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.4730, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(47.8618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(9.6070, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.5469, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(49.7896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(9.9232, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(22.4737, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(51.8633, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(9.5403, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.2870, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(49.6301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  33
{'labels': tensor(11.3085, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.8612, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(58.7286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(8.7077, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.6493, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(44.9033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(9.3767, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.6883, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(48.2521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(9.4399, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.2872, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(49.2280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(8.9410, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.9151, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(46.2965, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(9.6087, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.1995, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(49.4635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(9.6625, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.7736, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(49.4898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(8.2869, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.2221, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(43.3566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(9.6260, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.9082, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(49.5208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(8.1830, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.8382, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(42.2990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(8.6094, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.6154, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(44.7086, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(8.5006, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.5026, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(43.9532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(8.5092, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(29.6683, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(45.5128, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(7.8390, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.4435, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(40.6392, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(8.2280, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.3421, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(42.8741, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(8.3458, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.3571, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(42.9646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(9.0877, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.0943, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(47.2480, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(7.7417, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.9910, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(40.5076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(7.6551, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.4653, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(40.1221, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(8.7943, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.6206, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(45.5338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(7.5953, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.4457, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(39.3212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(7.4954, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.3920, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(38.8163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(8.3282, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.9374, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(42.9348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(7.9024, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.5904, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(41.3710, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(7.8704, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6522, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(41.1173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(7.9664, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6646, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(41.5984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(8.0532, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.6077, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(42.3267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(7.1765, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.2644, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(37.6089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(7.5437, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.9272, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(39.5114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(8.0246, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.0507, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(41.8280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(7.2291, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.3559, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(37.6811, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(7.6632, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.1884, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(40.3350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(7.8307, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.6652, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(41.0198, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(7.2905, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.6132, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(37.9137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(7.0767, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.7131, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(37.2548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(7.4554, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.4614, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(39.1233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(7.1399, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.9956, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(37.7993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(6.8530, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.8338, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(35.8484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(6.9447, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.3032, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(36.3538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(7.0629, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.3466, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(36.8490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(6.5121, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.2543, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(34.6861, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(6.3891, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.5350, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(33.1991, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(7.0862, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.6933, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(36.9005, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(6.3175, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.4195, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(32.7292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(6.7006, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.9388, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(35.1970, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(6.0903, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.6609, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(32.4176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(7.3364, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(25.6324, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(39.2451, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(6.4871, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.1952, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(34.2551, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(6.2456, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.8849, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(33.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(6.2741, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.4425, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(32.7149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(6.1183, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.2960, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(31.7213, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  44
{'labels': tensor(5.4978, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.4265, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(29.8317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(6.3968, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.4126, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(34.0251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  43
{'labels': tensor(5.6169, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6451, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(29.8491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(6.2812, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.4978, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(32.8557, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(5.9895, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.8746, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(31.4352, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(6.2357, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.2975, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(32.6082, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(6.3967, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6963, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(33.7531, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(6.3411, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.0733, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(34.0131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(5.9570, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.6084, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(31.4459, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(5.7167, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.6477, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(30.6485, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(5.8965, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.6605, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(30.7484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(5.9604, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.3466, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(30.9368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(5.5248, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.4964, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(29.2737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(5.6159, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.6576, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(29.7450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(5.9885, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.6095, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(31.6033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(6.3001, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.3609, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(33.6368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(6.0336, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.9038, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(31.6581, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(5.8932, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.9770, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(30.8638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(5.6001, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.8242, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(29.2828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(6.1411, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.3415, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(32.7396, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(5.2410, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6262, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(27.9677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(5.5765, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.2944, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(29.3119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(4.9882, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.2573, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(26.9669, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(5.7751, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.1769, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(30.3934, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(5.7421, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.3817, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(30.0489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(5.4479, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.0183, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(28.9413, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(5.3975, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.2421, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(28.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(4.9445, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.3192, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.9545, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(4.8915, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.9141, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(26.0491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(5.3362, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.6612, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(28.2469, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(4.7920, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.0582, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.6660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(4.8675, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.6835, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(26.3058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(5.0408, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.2649, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(26.4303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(4.7034, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.7474, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(24.6916, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(4.7759, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.2079, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.9003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(4.6203, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.6791, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(24.2696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:200, loss: 0.121348, Time: 73.1
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(5.1036, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.2948, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(26.9476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(4.8418, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6262, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.9716, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(4.5303, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.8419, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(24.3356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(4.8488, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.2285, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.3666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(4.6695, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6741, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.1149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(4.4450, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.7611, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(24.0014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(4.7329, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6925, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.4337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(4.7527, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.9089, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.1544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(4.5984, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(10.8041, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(24.0724, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(4.3916, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.7990, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(23.2381, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(4.7673, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.9829, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(25.2348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(4.3170, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(10.7434, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(22.6596, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(4.3497, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.9342, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(23.3417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(4.1629, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.7515, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(22.1897, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(4.9219, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.5581, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(26.4653, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(4.0028, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.4758, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(21.2614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(4.0153, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.3805, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(21.4146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(4.5690, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.3944, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(23.9844, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(4.1763, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.9735, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(22.5787, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(3.8712, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.5592, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(21.5122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(4.1189, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.1406, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(22.0088, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(4.6614, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.3642, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(24.9434, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(4.3958, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.7218, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(23.3510, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(4.2948, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.4253, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(23.2164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(4.1320, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.4145, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(22.1013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(3.9523, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.6691, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(21.5282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(3.8658, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(9.8279, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.3119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(4.0889, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.5162, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(21.7963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(3.7575, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.5651, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.9440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(4.0799, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.4672, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(22.0460, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(4.1898, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.6074, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(23.3097, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.8558, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.5248, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.9317, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  43
{'labels': tensor(3.5553, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.2187, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(19.2984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(3.6618, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(24.4099, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.7498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(4.0898, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(25.8846, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(23.0373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.7300, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.7896, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.1290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(3.6725, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.0108, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.1634, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(3.9736, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.9450, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(21.2627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(3.9996, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.8852, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(21.4863, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.6774, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.1121, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(19.6981, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(3.7787, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.7729, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.1709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.5751, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.6554, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(19.2410, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(3.6585, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.1163, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(19.8041, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.5505, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(30.1998, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.7725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(3.3379, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.3177, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.8215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.5003, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.0522, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(19.2069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(3.3273, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.1280, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.1493, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.4641, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.1389, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.6344, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(3.7289, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.9610, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.2404, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(3.9203, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.1980, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(21.1214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(3.5953, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(22.2596, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(20.2023, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(3.6548, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.2285, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(19.3970, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.3228, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.3097, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.7450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(3.2633, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.9903, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.6157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.3455, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.9832, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.2256, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(3.4283, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.0594, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.6476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(3.4208, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.8222, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.5861, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(3.3327, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.1737, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.2808, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.1828, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.9682, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.3107, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(3.4772, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.0271, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(19.4887, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(3.3853, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.0034, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.5268, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(3.5237, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.3035, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.8488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(3.3489, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.1527, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.6595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(3.1334, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.2896, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.5961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(3.4119, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.1062, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.4700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(3.2076, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(25.7294, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.6112, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(3.2145, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.5765, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.2303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(2.8848, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(9.8209, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.4059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(3.1341, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.1244, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.1828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(3.3544, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.1720, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.1892, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(3.0437, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.6770, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.8864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(3.3855, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.6696, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(18.1947, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(3.0888, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.9744, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.7413, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(2.8395, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.7036, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.3678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.9130, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.8599, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.0512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.9175, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.2373, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.8113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.8351, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(22.1623, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.3918, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(3.1354, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.1894, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.3962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.9764, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.1861, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.9008, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.8746, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(10.6339, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.4364, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(3.2138, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.1359, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(17.2825, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(3.0599, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.9572, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.6953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.9271, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.2827, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.7636, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.9132, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.3968, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.2058, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.9278, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.5567, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.8946, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.8272, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.2721, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.7633, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.7403, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.9999, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.5013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(2.6379, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.4883, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.5382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.7546, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.5500, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.9282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.9887, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.2926, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.6730, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.9948, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.3635, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.6104, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.6784, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.8898, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.2811, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.8781, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.4231, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.9326, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.8824, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.1696, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.0289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.7141, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.1509, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.2854, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.8711, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.2004, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.5754, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(2.5475, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.5594, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.0933, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.7182, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.4869, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.5395, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.7016, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.8868, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.8968, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(2.9628, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.9738, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.3116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:300, loss: 0.054372, Time: 108.3
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.5168, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.7524, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.2593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(2.9481, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.1144, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.1522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.5153, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.4441, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.9207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.6429, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.3399, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(15.1486, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.5162, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.0541, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.4862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.5257, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.3538, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.9638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.7026, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.6453, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.7776, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.6586, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.5700, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.7501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.4333, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.8418, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.3505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(2.8314, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(23.4753, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(16.5044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(2.3031, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.4625, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.9616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.3752, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.7598, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.2522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.4170, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.0076, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.6856, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.5031, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.2988, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.5452, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(2.3511, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(10.8138, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.8369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  43
{'labels': tensor(2.2417, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.0584, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.1145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.5376, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.7695, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.5650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.5648, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.1902, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.9432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(2.5900, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.8516, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.5350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.3652, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.5950, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.2857, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(2.2914, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.6010, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.7173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.4264, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.4848, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.2804, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.3194, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.7134, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.0681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(2.5390, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.8631, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.1812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.3660, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.0247, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.9323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(2.6082, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.4936, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.3904, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.2781, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.5002, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.1408, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.3116, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.8761, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.3455, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.4380, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(10.7464, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.2645, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.4402, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.5632, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.3576, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  44
{'labels': tensor(2.0033, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.5682, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.0735, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.1997, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.9049, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.6889, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.4164, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.0642, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.3887, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.2435, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.5005, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.8677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.2735, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.6557, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.7333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.2361, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.3388, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.8146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.2235, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.2454, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.9423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  42
{'labels': tensor(2.0442, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.7095, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(11.6919, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.3150, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.3631, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.4113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.3045, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.7424, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.0968, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.3193, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.7354, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.3699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(2.3389, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.5842, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.8528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.2103, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.0860, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.8602, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.1192, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.6894, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.5652, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  36
{'labels': tensor(2.3329, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(11.8395, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.8484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.3394, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(12.8044, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.9772, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.1937, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.6307, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.6314, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(2.3263, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.7421, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.0055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.1224, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.1175, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.4236, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.1615, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.2318, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.3309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.0819, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.9853, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(11.9081, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.0676, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(18.0940, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.1472, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.1452, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(17.1356, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.4396, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(2.0105, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(15.4944, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(11.6021, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.0935, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.5361, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.5213, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.1250, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.8670, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.3116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  39
{'labels': tensor(2.1005, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(10.4141, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(11.5442, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.1788, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(28.8448, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(13.7782, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
gt_cnt:  39
gt_cnt:  34
gt_cnt:  43
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  42
gt_cnt:  42
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  33
gt_cnt:  40
gt_cnt:  36
gt_cnt:  39
gt_cnt:  36
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  35
gt_cnt:  41
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  41
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  37
gt_cnt:  42
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  36
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  35
gt_cnt:  39
gt_cnt:  36
gt_cnt:  44
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  44
gt_cnt:  37
gt_cnt:  42
gt_cnt:  35
gt_cnt:  43
gt_cnt:  39
gt_cnt:  40
gt_cnt:  36
gt_cnt:  36
gt_cnt:  39
gt_cnt:  35
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  34
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  42
gt_cnt:  37
gt_cnt:  42
gt_cnt:  42
gt_cnt:  41
gt_cnt:  42
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  43
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  35
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  42
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  42
gt_cnt:  42
gt_cnt:  36
gt_cnt:  39
gt_cnt:  40
gt_cnt:  44
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  35
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  35
gt_cnt:  35
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  42
gt_cnt:  42
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  41
gt_cnt:  42
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  42
gt_cnt:  41
gt_cnt:  37
gt_cnt:  35
gt_cnt:  38
gt_cnt:  37
gt_cnt:  41
gt_cnt:  43
gt_cnt:  40
gt_cnt:  35
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  35
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  43
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  36
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  36
gt_cnt:  36
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  35
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  43
gt_cnt:  44
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  44
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  36
gt_cnt:  40
gt_cnt:  36
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  43
gt_cnt:  41
gt_cnt:  39
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  36
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
{'labels': tensor(2.1446, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(20.4454, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.7677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(1.9438, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(13.2115, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(11.0399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:360, loss: 0.030666, Time: 129.2
Testing...
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7689, 0.7512, 0.7510, 0.7480, 0.7461, 0.7444, 0.7433, 0.7423, 0.7397,
         0.7386, 0.7381, 0.7380, 0.7380, 0.7376, 0.7375, 0.7365, 0.7357, 0.7351,
         0.7344, 0.7340, 0.7334, 0.7325, 0.7324, 0.7324, 0.7322, 0.7320, 0.7317,
         0.7312, 0.7312, 0.7312, 0.7310, 0.7309, 0.7299, 0.7297, 0.7296, 0.7281,
         0.7277, 0.7273, 0.7273, 0.7273, 0.7272, 0.7269, 0.7266, 0.7266, 0.7263,
         0.7256, 0.7254, 0.7253, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7684, 0.7509, 0.7499, 0.7462, 0.7457, 0.7448, 0.7421, 0.7415, 0.7394,
         0.7394, 0.7388, 0.7382, 0.7381, 0.7379, 0.7376, 0.7364, 0.7359, 0.7356,
         0.7354, 0.7346, 0.7337, 0.7335, 0.7327, 0.7326, 0.7325, 0.7322, 0.7321,
         0.7311, 0.7310, 0.7308, 0.7307, 0.7303, 0.7301, 0.7295, 0.7293, 0.7292,
         0.7288, 0.7286, 0.7282, 0.7277, 0.7275, 0.7274, 0.7274, 0.7273, 0.7272,
         0.7271, 0.7266, 0.7265, 0.7263, 0.7261]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7649, 0.7511, 0.7470, 0.7461, 0.7459, 0.7444, 0.7423, 0.7422, 0.7404,
         0.7382, 0.7381, 0.7379, 0.7375, 0.7370, 0.7365, 0.7357, 0.7352, 0.7347,
         0.7347, 0.7345, 0.7339, 0.7335, 0.7329, 0.7324, 0.7323, 0.7321, 0.7320,
         0.7317, 0.7317, 0.7315, 0.7305, 0.7300, 0.7295, 0.7292, 0.7290, 0.7285,
         0.7285, 0.7282, 0.7278, 0.7275, 0.7271, 0.7268, 0.7263, 0.7260, 0.7259,
         0.7256, 0.7255, 0.7254, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7658, 0.7514, 0.7495, 0.7471, 0.7463, 0.7448, 0.7444, 0.7417, 0.7409,
         0.7394, 0.7391, 0.7388, 0.7387, 0.7382, 0.7377, 0.7376, 0.7367, 0.7350,
         0.7337, 0.7333, 0.7330, 0.7329, 0.7325, 0.7324, 0.7320, 0.7316, 0.7314,
         0.7313, 0.7311, 0.7310, 0.7307, 0.7301, 0.7297, 0.7294, 0.7286, 0.7280,
         0.7280, 0.7278, 0.7276, 0.7275, 0.7274, 0.7269, 0.7267, 0.7265, 0.7257,
         0.7257, 0.7252, 0.7252, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7656, 0.7510, 0.7492, 0.7483, 0.7460, 0.7454, 0.7437, 0.7431, 0.7388,
         0.7383, 0.7381, 0.7378, 0.7369, 0.7369, 0.7368, 0.7366, 0.7364, 0.7358,
         0.7350, 0.7344, 0.7343, 0.7332, 0.7316, 0.7314, 0.7314, 0.7311, 0.7310,
         0.7309, 0.7305, 0.7305, 0.7304, 0.7299, 0.7295, 0.7294, 0.7294, 0.7293,
         0.7288, 0.7286, 0.7286, 0.7283, 0.7271, 0.7270, 0.7269, 0.7265, 0.7263,
         0.7260, 0.7258, 0.7258, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7637, 0.7530, 0.7498, 0.7489, 0.7458, 0.7444, 0.7418, 0.7416, 0.7391,
         0.7391, 0.7379, 0.7378, 0.7376, 0.7372, 0.7371, 0.7369, 0.7340, 0.7333,
         0.7327, 0.7322, 0.7318, 0.7313, 0.7313, 0.7313, 0.7309, 0.7309, 0.7306,
         0.7305, 0.7301, 0.7299, 0.7297, 0.7296, 0.7291, 0.7289, 0.7287, 0.7285,
         0.7279, 0.7275, 0.7275, 0.7274, 0.7272, 0.7272, 0.7265, 0.7264, 0.7264,
         0.7255, 0.7254, 0.7252, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7516, 0.7488, 0.7484, 0.7474, 0.7461, 0.7437, 0.7413, 0.7389,
         0.7388, 0.7387, 0.7386, 0.7380, 0.7378, 0.7375, 0.7371, 0.7367, 0.7358,
         0.7356, 0.7349, 0.7342, 0.7336, 0.7329, 0.7325, 0.7323, 0.7322, 0.7321,
         0.7316, 0.7314, 0.7309, 0.7302, 0.7302, 0.7300, 0.7298, 0.7298, 0.7293,
         0.7284, 0.7284, 0.7283, 0.7281, 0.7280, 0.7271, 0.7266, 0.7265, 0.7262,
         0.7261, 0.7258, 0.7258, 0.7258, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7628, 0.7519, 0.7505, 0.7470, 0.7462, 0.7459, 0.7429, 0.7404, 0.7398,
         0.7393, 0.7382, 0.7381, 0.7376, 0.7371, 0.7369, 0.7368, 0.7365, 0.7356,
         0.7351, 0.7329, 0.7328, 0.7323, 0.7322, 0.7319, 0.7317, 0.7316, 0.7309,
         0.7302, 0.7300, 0.7298, 0.7296, 0.7292, 0.7290, 0.7290, 0.7287, 0.7279,
         0.7277, 0.7277, 0.7276, 0.7274, 0.7273, 0.7268, 0.7257, 0.7256, 0.7255,
         0.7255, 0.7252, 0.7252, 0.7251, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7617, 0.7547, 0.7478, 0.7455, 0.7454, 0.7449, 0.7425, 0.7415, 0.7396,
         0.7390, 0.7387, 0.7380, 0.7373, 0.7372, 0.7367, 0.7359, 0.7356, 0.7353,
         0.7333, 0.7328, 0.7328, 0.7327, 0.7322, 0.7322, 0.7321, 0.7321, 0.7318,
         0.7301, 0.7300, 0.7297, 0.7284, 0.7283, 0.7277, 0.7277, 0.7273, 0.7272,
         0.7270, 0.7268, 0.7268, 0.7263, 0.7262, 0.7261, 0.7261, 0.7259, 0.7257,
         0.7249, 0.7249, 0.7246, 0.7245, 0.7244]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7664, 0.7534, 0.7483, 0.7471, 0.7466, 0.7445, 0.7421, 0.7414, 0.7392,
         0.7388, 0.7383, 0.7376, 0.7375, 0.7374, 0.7369, 0.7365, 0.7362, 0.7360,
         0.7346, 0.7342, 0.7335, 0.7335, 0.7333, 0.7327, 0.7318, 0.7310, 0.7310,
         0.7308, 0.7307, 0.7301, 0.7301, 0.7296, 0.7293, 0.7289, 0.7289, 0.7287,
         0.7286, 0.7286, 0.7280, 0.7280, 0.7280, 0.7276, 0.7268, 0.7267, 0.7263,
         0.7260, 0.7258, 0.7255, 0.7254, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7503, 0.7471, 0.7454, 0.7452, 0.7452, 0.7439, 0.7434, 0.7402,
         0.7389, 0.7383, 0.7382, 0.7374, 0.7372, 0.7370, 0.7370, 0.7369, 0.7364,
         0.7345, 0.7334, 0.7334, 0.7330, 0.7320, 0.7317, 0.7314, 0.7314, 0.7314,
         0.7312, 0.7307, 0.7302, 0.7299, 0.7298, 0.7286, 0.7285, 0.7285, 0.7277,
         0.7276, 0.7272, 0.7271, 0.7269, 0.7269, 0.7269, 0.7266, 0.7264, 0.7263,
         0.7257, 0.7255, 0.7254, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7658, 0.7539, 0.7488, 0.7461, 0.7460, 0.7453, 0.7441, 0.7427, 0.7394,
         0.7391, 0.7389, 0.7386, 0.7376, 0.7373, 0.7373, 0.7372, 0.7354, 0.7348,
         0.7347, 0.7338, 0.7330, 0.7328, 0.7320, 0.7319, 0.7317, 0.7315, 0.7314,
         0.7310, 0.7309, 0.7306, 0.7303, 0.7297, 0.7291, 0.7291, 0.7289, 0.7289,
         0.7288, 0.7284, 0.7279, 0.7276, 0.7275, 0.7272, 0.7269, 0.7269, 0.7268,
         0.7266, 0.7266, 0.7252, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7494, 0.7466, 0.7465, 0.7452, 0.7435, 0.7431, 0.7430, 0.7400,
         0.7397, 0.7388, 0.7381, 0.7376, 0.7372, 0.7367, 0.7347, 0.7347, 0.7346,
         0.7334, 0.7334, 0.7332, 0.7328, 0.7322, 0.7321, 0.7321, 0.7318, 0.7317,
         0.7312, 0.7311, 0.7309, 0.7309, 0.7307, 0.7302, 0.7302, 0.7302, 0.7282,
         0.7281, 0.7280, 0.7273, 0.7271, 0.7266, 0.7264, 0.7263, 0.7256, 0.7253,
         0.7252, 0.7251, 0.7250, 0.7248, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7646, 0.7503, 0.7494, 0.7460, 0.7451, 0.7438, 0.7433, 0.7432, 0.7392,
         0.7392, 0.7387, 0.7378, 0.7375, 0.7374, 0.7372, 0.7366, 0.7365, 0.7355,
         0.7335, 0.7334, 0.7331, 0.7328, 0.7328, 0.7328, 0.7315, 0.7314, 0.7313,
         0.7312, 0.7305, 0.7305, 0.7300, 0.7297, 0.7294, 0.7293, 0.7290, 0.7284,
         0.7282, 0.7277, 0.7276, 0.7276, 0.7272, 0.7271, 0.7267, 0.7265, 0.7263,
         0.7261, 0.7259, 0.7258, 0.7255, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7528, 0.7495, 0.7477, 0.7455, 0.7436, 0.7434, 0.7429, 0.7397,
         0.7393, 0.7390, 0.7389, 0.7385, 0.7385, 0.7373, 0.7361, 0.7354, 0.7347,
         0.7342, 0.7326, 0.7325, 0.7324, 0.7322, 0.7319, 0.7314, 0.7313, 0.7309,
         0.7307, 0.7303, 0.7302, 0.7300, 0.7300, 0.7298, 0.7294, 0.7294, 0.7291,
         0.7290, 0.7285, 0.7278, 0.7276, 0.7270, 0.7267, 0.7267, 0.7264, 0.7263,
         0.7261, 0.7256, 0.7254, 0.7254, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7631, 0.7518, 0.7498, 0.7466, 0.7464, 0.7439, 0.7438, 0.7427, 0.7396,
         0.7391, 0.7381, 0.7380, 0.7380, 0.7375, 0.7375, 0.7373, 0.7370, 0.7367,
         0.7351, 0.7328, 0.7327, 0.7324, 0.7322, 0.7318, 0.7314, 0.7313, 0.7311,
         0.7311, 0.7309, 0.7304, 0.7303, 0.7300, 0.7295, 0.7290, 0.7282, 0.7279,
         0.7278, 0.7276, 0.7274, 0.7273, 0.7273, 0.7265, 0.7263, 0.7261, 0.7258,
         0.7258, 0.7258, 0.7255, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7633, 0.7515, 0.7474, 0.7470, 0.7449, 0.7446, 0.7433, 0.7412, 0.7392,
         0.7390, 0.7387, 0.7382, 0.7374, 0.7363, 0.7363, 0.7353, 0.7352, 0.7349,
         0.7349, 0.7346, 0.7344, 0.7331, 0.7326, 0.7324, 0.7314, 0.7312, 0.7312,
         0.7311, 0.7307, 0.7306, 0.7304, 0.7302, 0.7301, 0.7299, 0.7297, 0.7294,
         0.7289, 0.7287, 0.7281, 0.7280, 0.7280, 0.7267, 0.7266, 0.7260, 0.7260,
         0.7260, 0.7259, 0.7257, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7527, 0.7482, 0.7465, 0.7464, 0.7443, 0.7429, 0.7419, 0.7393,
         0.7381, 0.7375, 0.7374, 0.7365, 0.7363, 0.7360, 0.7357, 0.7351, 0.7349,
         0.7342, 0.7342, 0.7334, 0.7327, 0.7316, 0.7315, 0.7314, 0.7312, 0.7309,
         0.7308, 0.7306, 0.7305, 0.7290, 0.7285, 0.7284, 0.7278, 0.7278, 0.7278,
         0.7275, 0.7271, 0.7268, 0.7267, 0.7266, 0.7263, 0.7262, 0.7262, 0.7258,
         0.7257, 0.7257, 0.7256, 0.7256, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7661, 0.7518, 0.7479, 0.7479, 0.7460, 0.7442, 0.7421, 0.7418, 0.7386,
         0.7382, 0.7373, 0.7371, 0.7367, 0.7363, 0.7361, 0.7353, 0.7349, 0.7347,
         0.7337, 0.7336, 0.7335, 0.7331, 0.7329, 0.7323, 0.7319, 0.7312, 0.7309,
         0.7309, 0.7307, 0.7305, 0.7302, 0.7299, 0.7293, 0.7292, 0.7285, 0.7285,
         0.7275, 0.7274, 0.7273, 0.7272, 0.7270, 0.7270, 0.7268, 0.7262, 0.7254,
         0.7252, 0.7250, 0.7247, 0.7247, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7641, 0.7523, 0.7487, 0.7483, 0.7455, 0.7448, 0.7423, 0.7405, 0.7404,
         0.7404, 0.7400, 0.7384, 0.7380, 0.7376, 0.7373, 0.7372, 0.7369, 0.7355,
         0.7334, 0.7325, 0.7325, 0.7315, 0.7315, 0.7311, 0.7310, 0.7309, 0.7309,
         0.7305, 0.7303, 0.7300, 0.7291, 0.7284, 0.7281, 0.7279, 0.7279, 0.7272,
         0.7272, 0.7271, 0.7270, 0.7270, 0.7267, 0.7265, 0.7265, 0.7264, 0.7261,
         0.7257, 0.7256, 0.7253, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7695, 0.7523, 0.7481, 0.7474, 0.7449, 0.7438, 0.7436, 0.7436, 0.7388,
         0.7385, 0.7379, 0.7378, 0.7375, 0.7372, 0.7370, 0.7354, 0.7340, 0.7339,
         0.7338, 0.7338, 0.7333, 0.7328, 0.7327, 0.7319, 0.7316, 0.7315, 0.7312,
         0.7312, 0.7311, 0.7308, 0.7303, 0.7298, 0.7297, 0.7286, 0.7281, 0.7276,
         0.7274, 0.7268, 0.7266, 0.7262, 0.7260, 0.7259, 0.7258, 0.7256, 0.7256,
         0.7255, 0.7254, 0.7253, 0.7249, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7643, 0.7503, 0.7482, 0.7474, 0.7463, 0.7437, 0.7437, 0.7418, 0.7395,
         0.7383, 0.7381, 0.7380, 0.7380, 0.7380, 0.7373, 0.7362, 0.7359, 0.7359,
         0.7351, 0.7346, 0.7344, 0.7336, 0.7331, 0.7323, 0.7318, 0.7318, 0.7317,
         0.7314, 0.7314, 0.7311, 0.7306, 0.7304, 0.7294, 0.7289, 0.7287, 0.7283,
         0.7280, 0.7275, 0.7275, 0.7271, 0.7268, 0.7267, 0.7266, 0.7265, 0.7265,
         0.7257, 0.7256, 0.7252, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7641, 0.7503, 0.7498, 0.7474, 0.7460, 0.7450, 0.7436, 0.7417, 0.7399,
         0.7385, 0.7384, 0.7383, 0.7383, 0.7380, 0.7369, 0.7356, 0.7352, 0.7351,
         0.7332, 0.7330, 0.7323, 0.7322, 0.7321, 0.7317, 0.7313, 0.7313, 0.7311,
         0.7308, 0.7306, 0.7305, 0.7304, 0.7300, 0.7292, 0.7291, 0.7289, 0.7285,
         0.7284, 0.7279, 0.7273, 0.7270, 0.7267, 0.7265, 0.7264, 0.7261, 0.7255,
         0.7254, 0.7253, 0.7252, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7612, 0.7525, 0.7487, 0.7480, 0.7471, 0.7457, 0.7437, 0.7400, 0.7393,
         0.7388, 0.7388, 0.7387, 0.7372, 0.7367, 0.7365, 0.7361, 0.7360, 0.7348,
         0.7334, 0.7332, 0.7309, 0.7308, 0.7305, 0.7304, 0.7303, 0.7303, 0.7295,
         0.7294, 0.7293, 0.7293, 0.7289, 0.7289, 0.7284, 0.7282, 0.7282, 0.7282,
         0.7271, 0.7269, 0.7268, 0.7267, 0.7266, 0.7262, 0.7260, 0.7259, 0.7254,
         0.7252, 0.7251, 0.7249, 0.7248, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7605, 0.7509, 0.7488, 0.7472, 0.7464, 0.7446, 0.7433, 0.7394, 0.7392,
         0.7383, 0.7382, 0.7379, 0.7374, 0.7370, 0.7367, 0.7366, 0.7353, 0.7344,
         0.7324, 0.7322, 0.7317, 0.7317, 0.7316, 0.7313, 0.7311, 0.7310, 0.7310,
         0.7309, 0.7300, 0.7294, 0.7293, 0.7291, 0.7288, 0.7285, 0.7279, 0.7275,
         0.7272, 0.7272, 0.7271, 0.7267, 0.7266, 0.7264, 0.7262, 0.7261, 0.7258,
         0.7257, 0.7257, 0.7254, 0.7248, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7526, 0.7493, 0.7482, 0.7457, 0.7451, 0.7443, 0.7438, 0.7402,
         0.7390, 0.7389, 0.7379, 0.7378, 0.7374, 0.7370, 0.7362, 0.7362, 0.7353,
         0.7347, 0.7343, 0.7339, 0.7338, 0.7336, 0.7330, 0.7325, 0.7323, 0.7320,
         0.7318, 0.7314, 0.7309, 0.7309, 0.7302, 0.7301, 0.7300, 0.7297, 0.7291,
         0.7284, 0.7282, 0.7280, 0.7274, 0.7271, 0.7271, 0.7270, 0.7270, 0.7264,
         0.7259, 0.7257, 0.7254, 0.7254, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7682, 0.7527, 0.7500, 0.7476, 0.7469, 0.7460, 0.7437, 0.7419, 0.7412,
         0.7393, 0.7384, 0.7381, 0.7379, 0.7369, 0.7362, 0.7358, 0.7357, 0.7351,
         0.7342, 0.7340, 0.7335, 0.7335, 0.7335, 0.7329, 0.7328, 0.7327, 0.7322,
         0.7317, 0.7315, 0.7312, 0.7309, 0.7307, 0.7304, 0.7293, 0.7282, 0.7279,
         0.7278, 0.7277, 0.7277, 0.7276, 0.7271, 0.7265, 0.7265, 0.7263, 0.7258,
         0.7257, 0.7256, 0.7255, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7526, 0.7507, 0.7466, 0.7458, 0.7458, 0.7454, 0.7438, 0.7398,
         0.7393, 0.7387, 0.7376, 0.7368, 0.7366, 0.7361, 0.7357, 0.7351, 0.7350,
         0.7332, 0.7330, 0.7329, 0.7329, 0.7327, 0.7324, 0.7322, 0.7321, 0.7320,
         0.7314, 0.7302, 0.7300, 0.7297, 0.7296, 0.7290, 0.7290, 0.7287, 0.7280,
         0.7275, 0.7273, 0.7272, 0.7270, 0.7268, 0.7265, 0.7265, 0.7262, 0.7260,
         0.7258, 0.7254, 0.7254, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7502, 0.7491, 0.7468, 0.7462, 0.7439, 0.7424, 0.7423, 0.7383,
         0.7378, 0.7377, 0.7374, 0.7366, 0.7364, 0.7362, 0.7361, 0.7354, 0.7348,
         0.7346, 0.7342, 0.7336, 0.7332, 0.7330, 0.7324, 0.7321, 0.7320, 0.7317,
         0.7312, 0.7308, 0.7306, 0.7305, 0.7305, 0.7304, 0.7299, 0.7299, 0.7284,
         0.7277, 0.7271, 0.7267, 0.7266, 0.7257, 0.7257, 0.7257, 0.7256, 0.7254,
         0.7254, 0.7254, 0.7253, 0.7253, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7510, 0.7503, 0.7488, 0.7450, 0.7447, 0.7434, 0.7421, 0.7386,
         0.7383, 0.7379, 0.7378, 0.7373, 0.7373, 0.7372, 0.7370, 0.7359, 0.7350,
         0.7343, 0.7343, 0.7341, 0.7339, 0.7330, 0.7324, 0.7318, 0.7313, 0.7313,
         0.7311, 0.7308, 0.7308, 0.7308, 0.7306, 0.7304, 0.7290, 0.7285, 0.7280,
         0.7279, 0.7271, 0.7270, 0.7269, 0.7268, 0.7265, 0.7261, 0.7253, 0.7252,
         0.7252, 0.7251, 0.7251, 0.7248, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7533, 0.7503, 0.7474, 0.7472, 0.7439, 0.7436, 0.7424, 0.7410,
         0.7386, 0.7380, 0.7378, 0.7373, 0.7373, 0.7369, 0.7343, 0.7341, 0.7341,
         0.7336, 0.7329, 0.7326, 0.7318, 0.7316, 0.7313, 0.7313, 0.7313, 0.7310,
         0.7308, 0.7304, 0.7303, 0.7299, 0.7298, 0.7295, 0.7295, 0.7292, 0.7288,
         0.7283, 0.7277, 0.7277, 0.7275, 0.7270, 0.7267, 0.7263, 0.7263, 0.7261,
         0.7260, 0.7258, 0.7258, 0.7254, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7688, 0.7516, 0.7471, 0.7470, 0.7446, 0.7435, 0.7422, 0.7418, 0.7408,
         0.7399, 0.7385, 0.7380, 0.7374, 0.7368, 0.7364, 0.7355, 0.7354, 0.7348,
         0.7339, 0.7336, 0.7332, 0.7329, 0.7321, 0.7320, 0.7319, 0.7319, 0.7314,
         0.7314, 0.7311, 0.7305, 0.7302, 0.7297, 0.7290, 0.7289, 0.7273, 0.7273,
         0.7272, 0.7269, 0.7269, 0.7265, 0.7263, 0.7258, 0.7258, 0.7257, 0.7255,
         0.7252, 0.7252, 0.7249, 0.7249, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7645, 0.7515, 0.7488, 0.7476, 0.7473, 0.7451, 0.7426, 0.7405, 0.7397,
         0.7391, 0.7389, 0.7385, 0.7381, 0.7381, 0.7376, 0.7364, 0.7364, 0.7348,
         0.7333, 0.7332, 0.7327, 0.7325, 0.7325, 0.7323, 0.7319, 0.7315, 0.7314,
         0.7314, 0.7300, 0.7298, 0.7296, 0.7292, 0.7291, 0.7290, 0.7285, 0.7282,
         0.7281, 0.7280, 0.7280, 0.7274, 0.7273, 0.7271, 0.7269, 0.7258, 0.7257,
         0.7255, 0.7251, 0.7249, 0.7249, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7645, 0.7496, 0.7481, 0.7474, 0.7455, 0.7452, 0.7450, 0.7430, 0.7395,
         0.7393, 0.7383, 0.7382, 0.7381, 0.7380, 0.7379, 0.7376, 0.7368, 0.7353,
         0.7353, 0.7347, 0.7344, 0.7343, 0.7322, 0.7318, 0.7317, 0.7317, 0.7315,
         0.7313, 0.7311, 0.7305, 0.7304, 0.7300, 0.7298, 0.7297, 0.7294, 0.7294,
         0.7292, 0.7281, 0.7279, 0.7277, 0.7275, 0.7271, 0.7266, 0.7266, 0.7262,
         0.7261, 0.7259, 0.7259, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7676, 0.7521, 0.7482, 0.7461, 0.7460, 0.7452, 0.7445, 0.7433, 0.7394,
         0.7391, 0.7390, 0.7390, 0.7379, 0.7372, 0.7371, 0.7359, 0.7358, 0.7354,
         0.7353, 0.7336, 0.7330, 0.7328, 0.7322, 0.7319, 0.7317, 0.7317, 0.7316,
         0.7310, 0.7310, 0.7308, 0.7307, 0.7305, 0.7303, 0.7303, 0.7298, 0.7296,
         0.7287, 0.7278, 0.7276, 0.7274, 0.7267, 0.7263, 0.7260, 0.7255, 0.7254,
         0.7254, 0.7254, 0.7250, 0.7250, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7529, 0.7502, 0.7484, 0.7452, 0.7452, 0.7431, 0.7424, 0.7404,
         0.7404, 0.7399, 0.7391, 0.7389, 0.7370, 0.7363, 0.7362, 0.7357, 0.7352,
         0.7351, 0.7351, 0.7342, 0.7335, 0.7334, 0.7330, 0.7326, 0.7325, 0.7325,
         0.7320, 0.7317, 0.7316, 0.7312, 0.7306, 0.7301, 0.7300, 0.7289, 0.7286,
         0.7284, 0.7284, 0.7279, 0.7273, 0.7269, 0.7268, 0.7268, 0.7268, 0.7266,
         0.7265, 0.7262, 0.7260, 0.7260, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7522, 0.7497, 0.7482, 0.7457, 0.7448, 0.7432, 0.7422, 0.7404,
         0.7398, 0.7388, 0.7386, 0.7368, 0.7359, 0.7356, 0.7356, 0.7352, 0.7342,
         0.7342, 0.7342, 0.7341, 0.7338, 0.7328, 0.7319, 0.7319, 0.7315, 0.7314,
         0.7312, 0.7308, 0.7307, 0.7307, 0.7305, 0.7303, 0.7299, 0.7297, 0.7288,
         0.7279, 0.7279, 0.7275, 0.7275, 0.7260, 0.7257, 0.7257, 0.7256, 0.7252,
         0.7250, 0.7249, 0.7249, 0.7248, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7664, 0.7525, 0.7491, 0.7487, 0.7467, 0.7456, 0.7453, 0.7435, 0.7408,
         0.7387, 0.7386, 0.7384, 0.7384, 0.7376, 0.7370, 0.7370, 0.7369, 0.7356,
         0.7350, 0.7347, 0.7345, 0.7342, 0.7338, 0.7330, 0.7327, 0.7317, 0.7316,
         0.7315, 0.7313, 0.7309, 0.7306, 0.7303, 0.7295, 0.7295, 0.7289, 0.7288,
         0.7283, 0.7282, 0.7282, 0.7275, 0.7272, 0.7272, 0.7272, 0.7270, 0.7270,
         0.7269, 0.7269, 0.7259, 0.7257, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7681, 0.7515, 0.7494, 0.7458, 0.7447, 0.7446, 0.7436, 0.7419, 0.7392,
         0.7388, 0.7388, 0.7373, 0.7373, 0.7370, 0.7364, 0.7356, 0.7351, 0.7347,
         0.7345, 0.7341, 0.7335, 0.7329, 0.7320, 0.7318, 0.7309, 0.7308, 0.7304,
         0.7303, 0.7298, 0.7296, 0.7295, 0.7294, 0.7293, 0.7286, 0.7285, 0.7285,
         0.7278, 0.7273, 0.7271, 0.7266, 0.7263, 0.7263, 0.7257, 0.7257, 0.7256,
         0.7252, 0.7252, 0.7251, 0.7250, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7502, 0.7481, 0.7449, 0.7447, 0.7443, 0.7431, 0.7426, 0.7401,
         0.7396, 0.7386, 0.7385, 0.7384, 0.7383, 0.7371, 0.7371, 0.7367, 0.7352,
         0.7345, 0.7344, 0.7340, 0.7328, 0.7323, 0.7322, 0.7317, 0.7315, 0.7314,
         0.7311, 0.7311, 0.7310, 0.7300, 0.7300, 0.7292, 0.7289, 0.7281, 0.7277,
         0.7275, 0.7270, 0.7269, 0.7267, 0.7264, 0.7263, 0.7262, 0.7260, 0.7260,
         0.7255, 0.7254, 0.7254, 0.7252, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7653, 0.7508, 0.7498, 0.7467, 0.7463, 0.7460, 0.7428, 0.7422, 0.7392,
         0.7389, 0.7387, 0.7384, 0.7384, 0.7379, 0.7376, 0.7370, 0.7367, 0.7354,
         0.7349, 0.7342, 0.7333, 0.7332, 0.7327, 0.7327, 0.7323, 0.7322, 0.7320,
         0.7315, 0.7314, 0.7311, 0.7310, 0.7306, 0.7305, 0.7293, 0.7291, 0.7290,
         0.7288, 0.7281, 0.7278, 0.7277, 0.7274, 0.7269, 0.7268, 0.7260, 0.7255,
         0.7255, 0.7254, 0.7251, 0.7251, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7604, 0.7531, 0.7484, 0.7474, 0.7455, 0.7453, 0.7433, 0.7397, 0.7391,
         0.7389, 0.7387, 0.7383, 0.7382, 0.7372, 0.7364, 0.7363, 0.7361, 0.7359,
         0.7351, 0.7348, 0.7343, 0.7327, 0.7324, 0.7324, 0.7321, 0.7318, 0.7317,
         0.7315, 0.7311, 0.7310, 0.7304, 0.7303, 0.7296, 0.7294, 0.7291, 0.7290,
         0.7283, 0.7283, 0.7280, 0.7279, 0.7278, 0.7277, 0.7277, 0.7274, 0.7272,
         0.7267, 0.7265, 0.7260, 0.7258, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7662, 0.7519, 0.7486, 0.7460, 0.7451, 0.7442, 0.7433, 0.7420, 0.7403,
         0.7400, 0.7391, 0.7389, 0.7387, 0.7382, 0.7376, 0.7371, 0.7364, 0.7363,
         0.7350, 0.7344, 0.7344, 0.7341, 0.7334, 0.7329, 0.7325, 0.7314, 0.7312,
         0.7312, 0.7310, 0.7304, 0.7303, 0.7301, 0.7299, 0.7291, 0.7288, 0.7286,
         0.7286, 0.7281, 0.7280, 0.7280, 0.7275, 0.7274, 0.7274, 0.7273, 0.7267,
         0.7264, 0.7263, 0.7259, 0.7258, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7519, 0.7463, 0.7460, 0.7457, 0.7450, 0.7449, 0.7423, 0.7394,
         0.7386, 0.7383, 0.7383, 0.7379, 0.7379, 0.7365, 0.7349, 0.7346, 0.7345,
         0.7340, 0.7333, 0.7333, 0.7331, 0.7328, 0.7325, 0.7324, 0.7319, 0.7318,
         0.7312, 0.7310, 0.7308, 0.7308, 0.7306, 0.7305, 0.7302, 0.7288, 0.7283,
         0.7283, 0.7282, 0.7280, 0.7280, 0.7279, 0.7278, 0.7271, 0.7265, 0.7259,
         0.7259, 0.7257, 0.7254, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7648, 0.7512, 0.7478, 0.7477, 0.7465, 0.7445, 0.7441, 0.7432, 0.7390,
         0.7389, 0.7385, 0.7381, 0.7368, 0.7365, 0.7357, 0.7356, 0.7355, 0.7350,
         0.7341, 0.7338, 0.7338, 0.7337, 0.7335, 0.7329, 0.7327, 0.7317, 0.7315,
         0.7313, 0.7305, 0.7303, 0.7302, 0.7291, 0.7289, 0.7280, 0.7276, 0.7274,
         0.7271, 0.7269, 0.7268, 0.7266, 0.7266, 0.7260, 0.7255, 0.7253, 0.7251,
         0.7251, 0.7251, 0.7251, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7520, 0.7473, 0.7465, 0.7451, 0.7451, 0.7444, 0.7430, 0.7394,
         0.7390, 0.7384, 0.7384, 0.7364, 0.7357, 0.7357, 0.7353, 0.7351, 0.7344,
         0.7338, 0.7336, 0.7335, 0.7333, 0.7327, 0.7322, 0.7319, 0.7319, 0.7316,
         0.7314, 0.7311, 0.7310, 0.7308, 0.7308, 0.7303, 0.7297, 0.7296, 0.7290,
         0.7282, 0.7274, 0.7270, 0.7267, 0.7265, 0.7262, 0.7262, 0.7261, 0.7260,
         0.7258, 0.7253, 0.7251, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7532, 0.7478, 0.7474, 0.7454, 0.7442, 0.7441, 0.7411, 0.7388,
         0.7383, 0.7382, 0.7380, 0.7374, 0.7370, 0.7369, 0.7364, 0.7362, 0.7342,
         0.7339, 0.7337, 0.7332, 0.7330, 0.7324, 0.7321, 0.7318, 0.7318, 0.7317,
         0.7317, 0.7316, 0.7312, 0.7310, 0.7309, 0.7307, 0.7301, 0.7301, 0.7300,
         0.7299, 0.7296, 0.7285, 0.7284, 0.7283, 0.7283, 0.7278, 0.7278, 0.7276,
         0.7274, 0.7264, 0.7264, 0.7262, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7657, 0.7517, 0.7485, 0.7481, 0.7453, 0.7443, 0.7439, 0.7431, 0.7404,
         0.7399, 0.7397, 0.7383, 0.7375, 0.7363, 0.7357, 0.7357, 0.7356, 0.7353,
         0.7353, 0.7350, 0.7348, 0.7340, 0.7329, 0.7322, 0.7322, 0.7321, 0.7318,
         0.7313, 0.7312, 0.7308, 0.7307, 0.7300, 0.7295, 0.7294, 0.7288, 0.7288,
         0.7286, 0.7278, 0.7276, 0.7270, 0.7269, 0.7266, 0.7266, 0.7264, 0.7262,
         0.7260, 0.7259, 0.7258, 0.7257, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7547, 0.7513, 0.7462, 0.7462, 0.7446, 0.7434, 0.7416, 0.7406,
         0.7403, 0.7384, 0.7380, 0.7372, 0.7366, 0.7362, 0.7361, 0.7351, 0.7341,
         0.7338, 0.7336, 0.7335, 0.7323, 0.7315, 0.7314, 0.7313, 0.7310, 0.7309,
         0.7308, 0.7307, 0.7302, 0.7299, 0.7296, 0.7295, 0.7294, 0.7293, 0.7293,
         0.7293, 0.7289, 0.7288, 0.7286, 0.7286, 0.7277, 0.7275, 0.7266, 0.7262,
         0.7261, 0.7258, 0.7255, 0.7255, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7662, 0.7541, 0.7486, 0.7478, 0.7447, 0.7439, 0.7434, 0.7418, 0.7382,
         0.7381, 0.7378, 0.7375, 0.7374, 0.7374, 0.7373, 0.7364, 0.7359, 0.7359,
         0.7358, 0.7340, 0.7338, 0.7338, 0.7324, 0.7323, 0.7318, 0.7316, 0.7315,
         0.7313, 0.7313, 0.7312, 0.7310, 0.7295, 0.7294, 0.7293, 0.7290, 0.7289,
         0.7287, 0.7283, 0.7276, 0.7274, 0.7269, 0.7267, 0.7267, 0.7265, 0.7261,
         0.7260, 0.7253, 0.7251, 0.7249, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7666, 0.7527, 0.7487, 0.7472, 0.7462, 0.7446, 0.7431, 0.7415, 0.7389,
         0.7384, 0.7384, 0.7382, 0.7379, 0.7373, 0.7365, 0.7363, 0.7355, 0.7344,
         0.7338, 0.7335, 0.7331, 0.7326, 0.7325, 0.7318, 0.7315, 0.7312, 0.7312,
         0.7308, 0.7305, 0.7302, 0.7300, 0.7296, 0.7295, 0.7281, 0.7281, 0.7280,
         0.7278, 0.7277, 0.7277, 0.7272, 0.7267, 0.7264, 0.7258, 0.7258, 0.7258,
         0.7255, 0.7255, 0.7255, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7526, 0.7478, 0.7458, 0.7458, 0.7453, 0.7453, 0.7426, 0.7403,
         0.7396, 0.7394, 0.7388, 0.7387, 0.7382, 0.7379, 0.7374, 0.7369, 0.7347,
         0.7342, 0.7340, 0.7338, 0.7337, 0.7331, 0.7328, 0.7323, 0.7319, 0.7314,
         0.7314, 0.7314, 0.7313, 0.7311, 0.7300, 0.7299, 0.7298, 0.7292, 0.7276,
         0.7274, 0.7273, 0.7273, 0.7268, 0.7267, 0.7265, 0.7265, 0.7260, 0.7260,
         0.7258, 0.7257, 0.7256, 0.7254, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7527, 0.7507, 0.7474, 0.7460, 0.7444, 0.7437, 0.7434, 0.7407,
         0.7398, 0.7396, 0.7394, 0.7389, 0.7386, 0.7375, 0.7368, 0.7358, 0.7356,
         0.7344, 0.7341, 0.7335, 0.7334, 0.7330, 0.7327, 0.7319, 0.7319, 0.7309,
         0.7305, 0.7304, 0.7302, 0.7302, 0.7301, 0.7301, 0.7300, 0.7298, 0.7287,
         0.7282, 0.7274, 0.7273, 0.7272, 0.7272, 0.7271, 0.7270, 0.7266, 0.7262,
         0.7262, 0.7260, 0.7259, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7643, 0.7532, 0.7508, 0.7469, 0.7451, 0.7448, 0.7438, 0.7436, 0.7407,
         0.7406, 0.7397, 0.7396, 0.7394, 0.7386, 0.7382, 0.7380, 0.7363, 0.7342,
         0.7333, 0.7332, 0.7332, 0.7329, 0.7328, 0.7326, 0.7322, 0.7316, 0.7313,
         0.7311, 0.7311, 0.7306, 0.7305, 0.7303, 0.7302, 0.7302, 0.7296, 0.7295,
         0.7283, 0.7281, 0.7274, 0.7269, 0.7268, 0.7265, 0.7265, 0.7259, 0.7258,
         0.7256, 0.7255, 0.7254, 0.7254, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7649, 0.7512, 0.7495, 0.7473, 0.7462, 0.7454, 0.7442, 0.7415, 0.7404,
         0.7402, 0.7401, 0.7393, 0.7383, 0.7380, 0.7377, 0.7376, 0.7374, 0.7366,
         0.7350, 0.7341, 0.7339, 0.7331, 0.7328, 0.7327, 0.7324, 0.7320, 0.7320,
         0.7319, 0.7314, 0.7312, 0.7310, 0.7299, 0.7297, 0.7296, 0.7290, 0.7289,
         0.7280, 0.7279, 0.7279, 0.7278, 0.7275, 0.7271, 0.7267, 0.7266, 0.7266,
         0.7265, 0.7258, 0.7257, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7652, 0.7504, 0.7480, 0.7465, 0.7464, 0.7456, 0.7427, 0.7401, 0.7395,
         0.7394, 0.7390, 0.7387, 0.7373, 0.7369, 0.7367, 0.7366, 0.7366, 0.7345,
         0.7344, 0.7338, 0.7332, 0.7330, 0.7328, 0.7325, 0.7325, 0.7324, 0.7318,
         0.7314, 0.7313, 0.7312, 0.7308, 0.7306, 0.7304, 0.7298, 0.7289, 0.7283,
         0.7274, 0.7272, 0.7271, 0.7270, 0.7268, 0.7267, 0.7262, 0.7261, 0.7261,
         0.7260, 0.7257, 0.7256, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7602, 0.7538, 0.7480, 0.7469, 0.7454, 0.7445, 0.7435, 0.7412, 0.7389,
         0.7382, 0.7380, 0.7378, 0.7374, 0.7370, 0.7368, 0.7363, 0.7353, 0.7346,
         0.7342, 0.7331, 0.7330, 0.7328, 0.7324, 0.7321, 0.7320, 0.7319, 0.7312,
         0.7310, 0.7310, 0.7306, 0.7305, 0.7304, 0.7303, 0.7301, 0.7292, 0.7288,
         0.7287, 0.7283, 0.7280, 0.7279, 0.7277, 0.7277, 0.7273, 0.7270, 0.7270,
         0.7266, 0.7264, 0.7263, 0.7259, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7661, 0.7520, 0.7495, 0.7473, 0.7446, 0.7445, 0.7444, 0.7427, 0.7405,
         0.7391, 0.7387, 0.7375, 0.7371, 0.7365, 0.7364, 0.7362, 0.7358, 0.7356,
         0.7355, 0.7345, 0.7341, 0.7339, 0.7335, 0.7334, 0.7333, 0.7331, 0.7323,
         0.7317, 0.7317, 0.7314, 0.7313, 0.7307, 0.7307, 0.7302, 0.7300, 0.7292,
         0.7285, 0.7282, 0.7276, 0.7271, 0.7269, 0.7265, 0.7263, 0.7263, 0.7257,
         0.7255, 0.7254, 0.7254, 0.7252, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7653, 0.7545, 0.7469, 0.7459, 0.7456, 0.7451, 0.7434, 0.7413, 0.7401,
         0.7381, 0.7380, 0.7377, 0.7376, 0.7369, 0.7364, 0.7359, 0.7354, 0.7344,
         0.7340, 0.7337, 0.7336, 0.7333, 0.7333, 0.7322, 0.7319, 0.7309, 0.7309,
         0.7308, 0.7307, 0.7307, 0.7302, 0.7299, 0.7295, 0.7294, 0.7294, 0.7292,
         0.7280, 0.7270, 0.7267, 0.7267, 0.7263, 0.7263, 0.7261, 0.7261, 0.7259,
         0.7259, 0.7257, 0.7255, 0.7255, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7532, 0.7483, 0.7469, 0.7462, 0.7443, 0.7424, 0.7424, 0.7390,
         0.7389, 0.7382, 0.7374, 0.7373, 0.7367, 0.7361, 0.7360, 0.7353, 0.7350,
         0.7347, 0.7342, 0.7336, 0.7335, 0.7326, 0.7322, 0.7321, 0.7319, 0.7314,
         0.7309, 0.7306, 0.7306, 0.7298, 0.7291, 0.7289, 0.7288, 0.7287, 0.7285,
         0.7284, 0.7271, 0.7266, 0.7263, 0.7263, 0.7262, 0.7261, 0.7259, 0.7259,
         0.7258, 0.7252, 0.7252, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7654, 0.7527, 0.7477, 0.7470, 0.7466, 0.7452, 0.7428, 0.7412, 0.7409,
         0.7384, 0.7383, 0.7378, 0.7372, 0.7362, 0.7362, 0.7362, 0.7359, 0.7346,
         0.7340, 0.7333, 0.7327, 0.7325, 0.7325, 0.7324, 0.7322, 0.7319, 0.7318,
         0.7318, 0.7317, 0.7312, 0.7310, 0.7308, 0.7298, 0.7295, 0.7292, 0.7290,
         0.7290, 0.7281, 0.7273, 0.7271, 0.7269, 0.7268, 0.7267, 0.7264, 0.7261,
         0.7260, 0.7257, 0.7255, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7681, 0.7518, 0.7478, 0.7471, 0.7455, 0.7445, 0.7426, 0.7422, 0.7401,
         0.7381, 0.7380, 0.7377, 0.7370, 0.7369, 0.7364, 0.7361, 0.7358, 0.7344,
         0.7344, 0.7339, 0.7324, 0.7319, 0.7316, 0.7315, 0.7310, 0.7310, 0.7308,
         0.7306, 0.7302, 0.7301, 0.7298, 0.7297, 0.7294, 0.7293, 0.7291, 0.7289,
         0.7285, 0.7283, 0.7278, 0.7275, 0.7268, 0.7265, 0.7262, 0.7260, 0.7259,
         0.7258, 0.7257, 0.7257, 0.7252, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7682, 0.7508, 0.7482, 0.7470, 0.7469, 0.7450, 0.7447, 0.7415, 0.7399,
         0.7397, 0.7373, 0.7372, 0.7370, 0.7369, 0.7366, 0.7366, 0.7355, 0.7348,
         0.7342, 0.7335, 0.7327, 0.7323, 0.7318, 0.7315, 0.7315, 0.7309, 0.7307,
         0.7306, 0.7304, 0.7304, 0.7300, 0.7298, 0.7297, 0.7296, 0.7293, 0.7293,
         0.7284, 0.7280, 0.7275, 0.7273, 0.7270, 0.7268, 0.7267, 0.7264, 0.7263,
         0.7255, 0.7253, 0.7253, 0.7251, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7648, 0.7524, 0.7484, 0.7480, 0.7452, 0.7441, 0.7428, 0.7421, 0.7413,
         0.7402, 0.7389, 0.7387, 0.7369, 0.7367, 0.7367, 0.7362, 0.7360, 0.7359,
         0.7355, 0.7346, 0.7327, 0.7326, 0.7319, 0.7313, 0.7313, 0.7313, 0.7311,
         0.7310, 0.7307, 0.7303, 0.7299, 0.7297, 0.7295, 0.7287, 0.7287, 0.7285,
         0.7281, 0.7280, 0.7279, 0.7276, 0.7273, 0.7272, 0.7270, 0.7270, 0.7268,
         0.7262, 0.7261, 0.7257, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7619, 0.7493, 0.7491, 0.7488, 0.7469, 0.7442, 0.7424, 0.7423, 0.7398,
         0.7388, 0.7383, 0.7372, 0.7369, 0.7366, 0.7354, 0.7352, 0.7346, 0.7336,
         0.7336, 0.7334, 0.7328, 0.7326, 0.7326, 0.7322, 0.7314, 0.7311, 0.7311,
         0.7311, 0.7307, 0.7307, 0.7299, 0.7296, 0.7293, 0.7289, 0.7287, 0.7287,
         0.7281, 0.7278, 0.7277, 0.7272, 0.7269, 0.7269, 0.7266, 0.7265, 0.7264,
         0.7260, 0.7259, 0.7257, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7526, 0.7508, 0.7464, 0.7462, 0.7448, 0.7447, 0.7417, 0.7396,
         0.7389, 0.7382, 0.7381, 0.7365, 0.7362, 0.7361, 0.7354, 0.7352, 0.7351,
         0.7344, 0.7343, 0.7334, 0.7332, 0.7330, 0.7324, 0.7322, 0.7321, 0.7317,
         0.7315, 0.7311, 0.7309, 0.7307, 0.7303, 0.7303, 0.7300, 0.7294, 0.7293,
         0.7290, 0.7289, 0.7279, 0.7277, 0.7276, 0.7274, 0.7268, 0.7265, 0.7265,
         0.7258, 0.7257, 0.7255, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7516, 0.7478, 0.7477, 0.7472, 0.7454, 0.7436, 0.7406, 0.7392,
         0.7388, 0.7387, 0.7381, 0.7378, 0.7373, 0.7372, 0.7363, 0.7361, 0.7359,
         0.7350, 0.7339, 0.7338, 0.7328, 0.7327, 0.7326, 0.7322, 0.7321, 0.7318,
         0.7315, 0.7309, 0.7308, 0.7301, 0.7297, 0.7296, 0.7293, 0.7291, 0.7290,
         0.7285, 0.7278, 0.7277, 0.7275, 0.7270, 0.7270, 0.7269, 0.7269, 0.7266,
         0.7262, 0.7255, 0.7253, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7686, 0.7517, 0.7492, 0.7475, 0.7464, 0.7455, 0.7439, 0.7417, 0.7391,
         0.7382, 0.7380, 0.7371, 0.7371, 0.7366, 0.7365, 0.7365, 0.7353, 0.7348,
         0.7346, 0.7341, 0.7335, 0.7334, 0.7328, 0.7323, 0.7315, 0.7314, 0.7311,
         0.7307, 0.7304, 0.7303, 0.7303, 0.7302, 0.7301, 0.7301, 0.7297, 0.7297,
         0.7293, 0.7291, 0.7274, 0.7272, 0.7270, 0.7269, 0.7269, 0.7268, 0.7267,
         0.7263, 0.7262, 0.7261, 0.7259, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7674, 0.7513, 0.7498, 0.7476, 0.7470, 0.7450, 0.7444, 0.7420, 0.7410,
         0.7390, 0.7381, 0.7381, 0.7376, 0.7372, 0.7371, 0.7370, 0.7369, 0.7365,
         0.7350, 0.7339, 0.7339, 0.7335, 0.7330, 0.7327, 0.7323, 0.7321, 0.7319,
         0.7313, 0.7312, 0.7309, 0.7303, 0.7301, 0.7301, 0.7290, 0.7289, 0.7289,
         0.7281, 0.7275, 0.7272, 0.7264, 0.7263, 0.7262, 0.7262, 0.7262, 0.7261,
         0.7260, 0.7259, 0.7258, 0.7252, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7644, 0.7519, 0.7515, 0.7483, 0.7446, 0.7440, 0.7427, 0.7406, 0.7403,
         0.7399, 0.7394, 0.7394, 0.7389, 0.7373, 0.7371, 0.7369, 0.7359, 0.7352,
         0.7346, 0.7344, 0.7344, 0.7338, 0.7333, 0.7328, 0.7323, 0.7323, 0.7321,
         0.7320, 0.7317, 0.7315, 0.7312, 0.7308, 0.7303, 0.7292, 0.7289, 0.7287,
         0.7281, 0.7281, 0.7279, 0.7272, 0.7272, 0.7270, 0.7269, 0.7267, 0.7264,
         0.7263, 0.7263, 0.7262, 0.7259, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7628, 0.7525, 0.7464, 0.7461, 0.7460, 0.7426, 0.7423, 0.7408, 0.7394,
         0.7392, 0.7389, 0.7376, 0.7376, 0.7375, 0.7374, 0.7367, 0.7363, 0.7353,
         0.7346, 0.7342, 0.7339, 0.7338, 0.7334, 0.7333, 0.7328, 0.7316, 0.7314,
         0.7314, 0.7310, 0.7307, 0.7303, 0.7302, 0.7295, 0.7295, 0.7289, 0.7286,
         0.7279, 0.7278, 0.7275, 0.7275, 0.7274, 0.7270, 0.7269, 0.7269, 0.7269,
         0.7267, 0.7260, 0.7260, 0.7260, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7673, 0.7541, 0.7465, 0.7461, 0.7451, 0.7445, 0.7434, 0.7416, 0.7399,
         0.7390, 0.7374, 0.7370, 0.7367, 0.7364, 0.7364, 0.7362, 0.7353, 0.7350,
         0.7349, 0.7348, 0.7336, 0.7332, 0.7330, 0.7319, 0.7319, 0.7317, 0.7317,
         0.7315, 0.7315, 0.7313, 0.7310, 0.7294, 0.7293, 0.7292, 0.7283, 0.7281,
         0.7281, 0.7279, 0.7278, 0.7277, 0.7276, 0.7275, 0.7271, 0.7269, 0.7268,
         0.7260, 0.7259, 0.7255, 0.7253, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7498, 0.7492, 0.7478, 0.7464, 0.7452, 0.7435, 0.7423, 0.7400,
         0.7390, 0.7385, 0.7379, 0.7373, 0.7373, 0.7371, 0.7356, 0.7355, 0.7343,
         0.7343, 0.7338, 0.7334, 0.7326, 0.7318, 0.7311, 0.7309, 0.7304, 0.7304,
         0.7304, 0.7304, 0.7303, 0.7303, 0.7300, 0.7300, 0.7297, 0.7292, 0.7289,
         0.7287, 0.7280, 0.7276, 0.7275, 0.7273, 0.7266, 0.7263, 0.7256, 0.7250,
         0.7248, 0.7248, 0.7247, 0.7247, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7518, 0.7481, 0.7463, 0.7454, 0.7436, 0.7425, 0.7412, 0.7402,
         0.7395, 0.7395, 0.7391, 0.7377, 0.7376, 0.7370, 0.7363, 0.7356, 0.7351,
         0.7348, 0.7340, 0.7339, 0.7338, 0.7337, 0.7324, 0.7323, 0.7318, 0.7317,
         0.7315, 0.7314, 0.7314, 0.7310, 0.7305, 0.7301, 0.7293, 0.7289, 0.7287,
         0.7283, 0.7279, 0.7277, 0.7275, 0.7273, 0.7270, 0.7268, 0.7260, 0.7260,
         0.7258, 0.7258, 0.7257, 0.7253, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7683, 0.7509, 0.7482, 0.7479, 0.7459, 0.7449, 0.7428, 0.7416, 0.7393,
         0.7391, 0.7388, 0.7385, 0.7382, 0.7378, 0.7377, 0.7375, 0.7374, 0.7352,
         0.7350, 0.7335, 0.7333, 0.7325, 0.7324, 0.7322, 0.7321, 0.7314, 0.7313,
         0.7311, 0.7309, 0.7308, 0.7299, 0.7299, 0.7295, 0.7291, 0.7289, 0.7288,
         0.7285, 0.7285, 0.7283, 0.7275, 0.7269, 0.7268, 0.7265, 0.7264, 0.7261,
         0.7258, 0.7258, 0.7257, 0.7256, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7654, 0.7541, 0.7470, 0.7464, 0.7455, 0.7441, 0.7430, 0.7391, 0.7389,
         0.7388, 0.7385, 0.7382, 0.7379, 0.7378, 0.7377, 0.7373, 0.7360, 0.7343,
         0.7335, 0.7332, 0.7329, 0.7325, 0.7325, 0.7325, 0.7321, 0.7320, 0.7313,
         0.7313, 0.7309, 0.7308, 0.7304, 0.7303, 0.7303, 0.7301, 0.7296, 0.7294,
         0.7293, 0.7290, 0.7290, 0.7287, 0.7283, 0.7279, 0.7276, 0.7274, 0.7271,
         0.7270, 0.7267, 0.7263, 0.7259, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7649, 0.7511, 0.7471, 0.7451, 0.7449, 0.7446, 0.7441, 0.7433, 0.7390,
         0.7386, 0.7381, 0.7381, 0.7375, 0.7373, 0.7370, 0.7366, 0.7355, 0.7343,
         0.7337, 0.7337, 0.7333, 0.7331, 0.7328, 0.7322, 0.7322, 0.7312, 0.7309,
         0.7308, 0.7307, 0.7307, 0.7306, 0.7303, 0.7301, 0.7297, 0.7286, 0.7284,
         0.7282, 0.7281, 0.7277, 0.7274, 0.7272, 0.7271, 0.7270, 0.7268, 0.7267,
         0.7267, 0.7266, 0.7261, 0.7257, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7518, 0.7483, 0.7476, 0.7459, 0.7443, 0.7436, 0.7423, 0.7403,
         0.7389, 0.7387, 0.7383, 0.7380, 0.7376, 0.7374, 0.7371, 0.7370, 0.7357,
         0.7351, 0.7348, 0.7342, 0.7335, 0.7335, 0.7332, 0.7319, 0.7314, 0.7314,
         0.7313, 0.7309, 0.7309, 0.7302, 0.7299, 0.7292, 0.7283, 0.7280, 0.7278,
         0.7278, 0.7276, 0.7272, 0.7271, 0.7270, 0.7266, 0.7263, 0.7262, 0.7261,
         0.7259, 0.7256, 0.7255, 0.7251, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7628, 0.7532, 0.7495, 0.7466, 0.7448, 0.7442, 0.7428, 0.7409, 0.7392,
         0.7382, 0.7377, 0.7375, 0.7375, 0.7369, 0.7368, 0.7362, 0.7354, 0.7354,
         0.7352, 0.7345, 0.7343, 0.7343, 0.7335, 0.7335, 0.7329, 0.7318, 0.7312,
         0.7306, 0.7304, 0.7304, 0.7302, 0.7301, 0.7300, 0.7294, 0.7289, 0.7287,
         0.7282, 0.7281, 0.7281, 0.7280, 0.7276, 0.7273, 0.7271, 0.7271, 0.7270,
         0.7269, 0.7268, 0.7267, 0.7265, 0.7263]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7683, 0.7533, 0.7501, 0.7477, 0.7458, 0.7456, 0.7456, 0.7429, 0.7392,
         0.7389, 0.7387, 0.7386, 0.7380, 0.7374, 0.7374, 0.7372, 0.7364, 0.7354,
         0.7347, 0.7332, 0.7330, 0.7328, 0.7326, 0.7326, 0.7320, 0.7317, 0.7314,
         0.7304, 0.7304, 0.7303, 0.7300, 0.7293, 0.7291, 0.7284, 0.7284, 0.7281,
         0.7280, 0.7278, 0.7277, 0.7274, 0.7273, 0.7272, 0.7268, 0.7268, 0.7267,
         0.7265, 0.7263, 0.7263, 0.7249, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7515, 0.7515, 0.7463, 0.7461, 0.7446, 0.7445, 0.7441, 0.7402,
         0.7397, 0.7394, 0.7391, 0.7387, 0.7382, 0.7378, 0.7373, 0.7367, 0.7365,
         0.7349, 0.7342, 0.7337, 0.7327, 0.7322, 0.7322, 0.7317, 0.7316, 0.7314,
         0.7311, 0.7310, 0.7309, 0.7308, 0.7307, 0.7306, 0.7297, 0.7296, 0.7295,
         0.7292, 0.7290, 0.7282, 0.7281, 0.7276, 0.7276, 0.7276, 0.7273, 0.7273,
         0.7270, 0.7263, 0.7258, 0.7257, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7686, 0.7521, 0.7479, 0.7468, 0.7460, 0.7456, 0.7435, 0.7408, 0.7402,
         0.7396, 0.7390, 0.7375, 0.7374, 0.7368, 0.7357, 0.7350, 0.7350, 0.7341,
         0.7341, 0.7337, 0.7337, 0.7336, 0.7334, 0.7326, 0.7323, 0.7320, 0.7315,
         0.7310, 0.7310, 0.7310, 0.7307, 0.7300, 0.7298, 0.7297, 0.7295, 0.7287,
         0.7283, 0.7281, 0.7277, 0.7276, 0.7275, 0.7272, 0.7272, 0.7265, 0.7264,
         0.7262, 0.7251, 0.7251, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7547, 0.7488, 0.7462, 0.7452, 0.7439, 0.7428, 0.7425, 0.7424,
         0.7394, 0.7385, 0.7378, 0.7378, 0.7376, 0.7370, 0.7351, 0.7341, 0.7336,
         0.7334, 0.7331, 0.7331, 0.7325, 0.7324, 0.7321, 0.7319, 0.7314, 0.7313,
         0.7313, 0.7313, 0.7310, 0.7302, 0.7297, 0.7295, 0.7291, 0.7288, 0.7288,
         0.7286, 0.7285, 0.7284, 0.7279, 0.7277, 0.7274, 0.7272, 0.7272, 0.7264,
         0.7264, 0.7263, 0.7263, 0.7263, 0.7259]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7673, 0.7493, 0.7483, 0.7455, 0.7453, 0.7445, 0.7420, 0.7416, 0.7399,
         0.7394, 0.7388, 0.7375, 0.7370, 0.7370, 0.7365, 0.7354, 0.7344, 0.7336,
         0.7334, 0.7332, 0.7325, 0.7323, 0.7323, 0.7323, 0.7318, 0.7317, 0.7303,
         0.7301, 0.7299, 0.7298, 0.7295, 0.7294, 0.7287, 0.7283, 0.7280, 0.7276,
         0.7274, 0.7273, 0.7272, 0.7264, 0.7262, 0.7256, 0.7256, 0.7255, 0.7254,
         0.7251, 0.7250, 0.7250, 0.7249, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7495, 0.7482, 0.7459, 0.7456, 0.7450, 0.7421, 0.7416, 0.7410,
         0.7383, 0.7383, 0.7382, 0.7377, 0.7365, 0.7364, 0.7355, 0.7344, 0.7341,
         0.7327, 0.7326, 0.7323, 0.7321, 0.7318, 0.7315, 0.7314, 0.7314, 0.7311,
         0.7305, 0.7302, 0.7299, 0.7299, 0.7298, 0.7298, 0.7296, 0.7294, 0.7294,
         0.7290, 0.7285, 0.7281, 0.7278, 0.7272, 0.7263, 0.7262, 0.7259, 0.7257,
         0.7253, 0.7253, 0.7253, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7510, 0.7500, 0.7464, 0.7447, 0.7444, 0.7443, 0.7430, 0.7386,
         0.7382, 0.7382, 0.7381, 0.7379, 0.7377, 0.7377, 0.7367, 0.7360, 0.7357,
         0.7354, 0.7347, 0.7333, 0.7331, 0.7330, 0.7320, 0.7320, 0.7319, 0.7318,
         0.7316, 0.7310, 0.7310, 0.7303, 0.7302, 0.7301, 0.7296, 0.7295, 0.7294,
         0.7287, 0.7285, 0.7275, 0.7274, 0.7272, 0.7270, 0.7269, 0.7268, 0.7263,
         0.7261, 0.7257, 0.7257, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7510, 0.7504, 0.7470, 0.7462, 0.7438, 0.7415, 0.7415, 0.7406,
         0.7402, 0.7392, 0.7392, 0.7381, 0.7369, 0.7367, 0.7364, 0.7357, 0.7357,
         0.7357, 0.7356, 0.7338, 0.7329, 0.7321, 0.7321, 0.7320, 0.7317, 0.7313,
         0.7311, 0.7309, 0.7309, 0.7306, 0.7301, 0.7297, 0.7290, 0.7283, 0.7280,
         0.7275, 0.7274, 0.7271, 0.7270, 0.7268, 0.7267, 0.7260, 0.7258, 0.7258,
         0.7253, 0.7252, 0.7252, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7617, 0.7524, 0.7495, 0.7471, 0.7461, 0.7449, 0.7429, 0.7410, 0.7387,
         0.7385, 0.7375, 0.7375, 0.7374, 0.7372, 0.7368, 0.7362, 0.7358, 0.7348,
         0.7342, 0.7337, 0.7333, 0.7333, 0.7330, 0.7327, 0.7314, 0.7312, 0.7312,
         0.7311, 0.7308, 0.7308, 0.7307, 0.7307, 0.7300, 0.7299, 0.7293, 0.7292,
         0.7290, 0.7289, 0.7289, 0.7287, 0.7286, 0.7281, 0.7280, 0.7277, 0.7274,
         0.7273, 0.7272, 0.7269, 0.7264, 0.7259]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7656, 0.7519, 0.7518, 0.7470, 0.7470, 0.7444, 0.7438, 0.7436, 0.7395,
         0.7393, 0.7380, 0.7376, 0.7375, 0.7366, 0.7365, 0.7365, 0.7364, 0.7359,
         0.7354, 0.7349, 0.7345, 0.7344, 0.7337, 0.7333, 0.7329, 0.7328, 0.7322,
         0.7313, 0.7312, 0.7304, 0.7301, 0.7293, 0.7292, 0.7291, 0.7283, 0.7280,
         0.7280, 0.7274, 0.7272, 0.7270, 0.7270, 0.7269, 0.7268, 0.7266, 0.7266,
         0.7266, 0.7262, 0.7261, 0.7261, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7501, 0.7471, 0.7468, 0.7466, 0.7447, 0.7430, 0.7420, 0.7396,
         0.7381, 0.7380, 0.7374, 0.7373, 0.7370, 0.7367, 0.7366, 0.7363, 0.7355,
         0.7350, 0.7327, 0.7324, 0.7324, 0.7319, 0.7319, 0.7318, 0.7318, 0.7318,
         0.7314, 0.7311, 0.7310, 0.7305, 0.7298, 0.7287, 0.7286, 0.7284, 0.7282,
         0.7282, 0.7279, 0.7279, 0.7278, 0.7271, 0.7271, 0.7270, 0.7267, 0.7266,
         0.7264, 0.7263, 0.7260, 0.7259, 0.7259]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7684, 0.7509, 0.7509, 0.7468, 0.7464, 0.7457, 0.7437, 0.7412, 0.7397,
         0.7397, 0.7388, 0.7387, 0.7386, 0.7382, 0.7381, 0.7377, 0.7369, 0.7349,
         0.7348, 0.7339, 0.7327, 0.7324, 0.7319, 0.7318, 0.7310, 0.7310, 0.7306,
         0.7304, 0.7302, 0.7301, 0.7299, 0.7295, 0.7291, 0.7291, 0.7289, 0.7283,
         0.7283, 0.7281, 0.7277, 0.7274, 0.7274, 0.7273, 0.7272, 0.7270, 0.7267,
         0.7266, 0.7266, 0.7263, 0.7260, 0.7260]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7526, 0.7477, 0.7471, 0.7457, 0.7445, 0.7437, 0.7419, 0.7408,
         0.7393, 0.7375, 0.7374, 0.7371, 0.7368, 0.7368, 0.7366, 0.7358, 0.7356,
         0.7342, 0.7337, 0.7330, 0.7330, 0.7326, 0.7326, 0.7325, 0.7325, 0.7325,
         0.7324, 0.7321, 0.7320, 0.7309, 0.7305, 0.7304, 0.7301, 0.7293, 0.7292,
         0.7288, 0.7286, 0.7284, 0.7284, 0.7279, 0.7278, 0.7272, 0.7270, 0.7267,
         0.7266, 0.7266, 0.7264, 0.7263, 0.7262]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7533, 0.7466, 0.7460, 0.7454, 0.7447, 0.7434, 0.7423, 0.7394,
         0.7387, 0.7379, 0.7377, 0.7365, 0.7363, 0.7359, 0.7359, 0.7353, 0.7346,
         0.7337, 0.7334, 0.7334, 0.7329, 0.7327, 0.7325, 0.7325, 0.7323, 0.7322,
         0.7319, 0.7317, 0.7316, 0.7312, 0.7311, 0.7307, 0.7299, 0.7298, 0.7295,
         0.7293, 0.7292, 0.7291, 0.7284, 0.7283, 0.7281, 0.7277, 0.7275, 0.7274,
         0.7270, 0.7265, 0.7264, 0.7261, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7666, 0.7527, 0.7472, 0.7467, 0.7455, 0.7441, 0.7431, 0.7416, 0.7394,
         0.7393, 0.7387, 0.7379, 0.7368, 0.7362, 0.7355, 0.7354, 0.7354, 0.7346,
         0.7344, 0.7340, 0.7335, 0.7334, 0.7330, 0.7323, 0.7321, 0.7307, 0.7306,
         0.7305, 0.7304, 0.7303, 0.7302, 0.7298, 0.7298, 0.7296, 0.7289, 0.7288,
         0.7282, 0.7282, 0.7276, 0.7274, 0.7273, 0.7272, 0.7271, 0.7269, 0.7263,
         0.7261, 0.7258, 0.7258, 0.7256, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7513, 0.7481, 0.7457, 0.7454, 0.7441, 0.7437, 0.7435, 0.7390,
         0.7390, 0.7382, 0.7381, 0.7371, 0.7368, 0.7361, 0.7359, 0.7357, 0.7352,
         0.7349, 0.7345, 0.7334, 0.7332, 0.7331, 0.7326, 0.7320, 0.7317, 0.7317,
         0.7313, 0.7307, 0.7305, 0.7302, 0.7299, 0.7298, 0.7296, 0.7289, 0.7287,
         0.7286, 0.7284, 0.7281, 0.7280, 0.7272, 0.7272, 0.7269, 0.7268, 0.7266,
         0.7262, 0.7260, 0.7258, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7655, 0.7527, 0.7465, 0.7460, 0.7457, 0.7457, 0.7441, 0.7433, 0.7388,
         0.7380, 0.7374, 0.7373, 0.7362, 0.7361, 0.7359, 0.7352, 0.7349, 0.7339,
         0.7339, 0.7337, 0.7328, 0.7326, 0.7325, 0.7325, 0.7319, 0.7314, 0.7311,
         0.7309, 0.7309, 0.7308, 0.7302, 0.7302, 0.7302, 0.7289, 0.7280, 0.7279,
         0.7279, 0.7277, 0.7276, 0.7276, 0.7272, 0.7270, 0.7264, 0.7260, 0.7259,
         0.7256, 0.7255, 0.7255, 0.7251, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7522, 0.7467, 0.7449, 0.7435, 0.7433, 0.7432, 0.7430, 0.7384,
         0.7382, 0.7377, 0.7368, 0.7368, 0.7367, 0.7366, 0.7362, 0.7348, 0.7342,
         0.7340, 0.7337, 0.7331, 0.7330, 0.7329, 0.7328, 0.7328, 0.7325, 0.7325,
         0.7315, 0.7313, 0.7305, 0.7302, 0.7299, 0.7290, 0.7289, 0.7289, 0.7281,
         0.7279, 0.7279, 0.7276, 0.7275, 0.7275, 0.7272, 0.7272, 0.7271, 0.7269,
         0.7268, 0.7260, 0.7260, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7647, 0.7518, 0.7458, 0.7456, 0.7446, 0.7439, 0.7421, 0.7417, 0.7395,
         0.7385, 0.7384, 0.7372, 0.7364, 0.7364, 0.7358, 0.7358, 0.7357, 0.7353,
         0.7336, 0.7334, 0.7334, 0.7331, 0.7327, 0.7324, 0.7316, 0.7315, 0.7310,
         0.7306, 0.7298, 0.7296, 0.7294, 0.7289, 0.7283, 0.7280, 0.7279, 0.7278,
         0.7274, 0.7272, 0.7270, 0.7269, 0.7263, 0.7263, 0.7262, 0.7259, 0.7258,
         0.7255, 0.7254, 0.7251, 0.7251, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7644, 0.7536, 0.7504, 0.7475, 0.7456, 0.7447, 0.7423, 0.7405, 0.7395,
         0.7387, 0.7387, 0.7385, 0.7373, 0.7371, 0.7367, 0.7361, 0.7354, 0.7344,
         0.7333, 0.7329, 0.7329, 0.7326, 0.7315, 0.7312, 0.7312, 0.7312, 0.7309,
         0.7302, 0.7301, 0.7300, 0.7298, 0.7295, 0.7288, 0.7287, 0.7284, 0.7281,
         0.7277, 0.7277, 0.7273, 0.7272, 0.7269, 0.7263, 0.7260, 0.7260, 0.7258,
         0.7257, 0.7257, 0.7256, 0.7255, 0.7244]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7523, 0.7490, 0.7468, 0.7463, 0.7448, 0.7422, 0.7410, 0.7401,
         0.7395, 0.7392, 0.7384, 0.7380, 0.7380, 0.7375, 0.7373, 0.7370, 0.7363,
         0.7346, 0.7338, 0.7331, 0.7329, 0.7327, 0.7316, 0.7316, 0.7316, 0.7313,
         0.7310, 0.7309, 0.7309, 0.7308, 0.7308, 0.7295, 0.7293, 0.7293, 0.7276,
         0.7275, 0.7275, 0.7274, 0.7273, 0.7272, 0.7266, 0.7266, 0.7266, 0.7263,
         0.7259, 0.7259, 0.7259, 0.7255, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7510, 0.7494, 0.7467, 0.7464, 0.7441, 0.7434, 0.7419, 0.7388,
         0.7382, 0.7380, 0.7378, 0.7362, 0.7362, 0.7362, 0.7360, 0.7358, 0.7353,
         0.7347, 0.7341, 0.7332, 0.7330, 0.7327, 0.7321, 0.7318, 0.7314, 0.7313,
         0.7311, 0.7311, 0.7306, 0.7305, 0.7300, 0.7299, 0.7295, 0.7291, 0.7290,
         0.7283, 0.7282, 0.7281, 0.7276, 0.7274, 0.7271, 0.7268, 0.7266, 0.7260,
         0.7259, 0.7258, 0.7257, 0.7253, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7651, 0.7537, 0.7495, 0.7463, 0.7459, 0.7445, 0.7437, 0.7406, 0.7395,
         0.7384, 0.7379, 0.7375, 0.7375, 0.7367, 0.7361, 0.7360, 0.7357, 0.7355,
         0.7349, 0.7336, 0.7332, 0.7331, 0.7326, 0.7325, 0.7322, 0.7312, 0.7311,
         0.7307, 0.7301, 0.7299, 0.7299, 0.7296, 0.7294, 0.7291, 0.7290, 0.7289,
         0.7281, 0.7278, 0.7276, 0.7273, 0.7273, 0.7271, 0.7269, 0.7268, 0.7263,
         0.7263, 0.7263, 0.7256, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7519, 0.7494, 0.7479, 0.7470, 0.7452, 0.7436, 0.7412, 0.7391,
         0.7390, 0.7390, 0.7381, 0.7381, 0.7380, 0.7379, 0.7370, 0.7364, 0.7359,
         0.7333, 0.7328, 0.7327, 0.7324, 0.7321, 0.7320, 0.7309, 0.7307, 0.7307,
         0.7306, 0.7304, 0.7299, 0.7297, 0.7286, 0.7286, 0.7285, 0.7279, 0.7279,
         0.7276, 0.7274, 0.7271, 0.7271, 0.7268, 0.7264, 0.7262, 0.7260, 0.7259,
         0.7258, 0.7255, 0.7252, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7680, 0.7523, 0.7514, 0.7475, 0.7469, 0.7443, 0.7425, 0.7424, 0.7413,
         0.7401, 0.7393, 0.7385, 0.7383, 0.7374, 0.7373, 0.7371, 0.7361, 0.7357,
         0.7356, 0.7353, 0.7336, 0.7333, 0.7325, 0.7323, 0.7323, 0.7319, 0.7317,
         0.7316, 0.7310, 0.7309, 0.7308, 0.7304, 0.7304, 0.7300, 0.7296, 0.7294,
         0.7281, 0.7278, 0.7276, 0.7276, 0.7268, 0.7264, 0.7263, 0.7263, 0.7262,
         0.7258, 0.7256, 0.7255, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7644, 0.7503, 0.7488, 0.7465, 0.7462, 0.7452, 0.7452, 0.7416, 0.7398,
         0.7390, 0.7389, 0.7388, 0.7388, 0.7383, 0.7378, 0.7373, 0.7361, 0.7357,
         0.7354, 0.7350, 0.7348, 0.7340, 0.7331, 0.7329, 0.7320, 0.7318, 0.7317,
         0.7317, 0.7315, 0.7313, 0.7304, 0.7303, 0.7296, 0.7295, 0.7289, 0.7289,
         0.7289, 0.7285, 0.7277, 0.7276, 0.7272, 0.7270, 0.7268, 0.7266, 0.7260,
         0.7259, 0.7258, 0.7256, 0.7253, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7511, 0.7503, 0.7458, 0.7457, 0.7443, 0.7430, 0.7410, 0.7398,
         0.7391, 0.7389, 0.7384, 0.7381, 0.7369, 0.7365, 0.7363, 0.7357, 0.7350,
         0.7349, 0.7346, 0.7341, 0.7340, 0.7337, 0.7335, 0.7329, 0.7327, 0.7320,
         0.7317, 0.7310, 0.7309, 0.7307, 0.7295, 0.7294, 0.7292, 0.7288, 0.7285,
         0.7277, 0.7277, 0.7272, 0.7271, 0.7271, 0.7266, 0.7265, 0.7265, 0.7265,
         0.7263, 0.7260, 0.7260, 0.7256, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7615, 0.7538, 0.7474, 0.7468, 0.7464, 0.7455, 0.7422, 0.7413, 0.7401,
         0.7398, 0.7396, 0.7395, 0.7369, 0.7362, 0.7360, 0.7345, 0.7344, 0.7341,
         0.7340, 0.7329, 0.7328, 0.7320, 0.7318, 0.7312, 0.7307, 0.7307, 0.7304,
         0.7304, 0.7302, 0.7301, 0.7297, 0.7294, 0.7294, 0.7285, 0.7279, 0.7277,
         0.7275, 0.7275, 0.7274, 0.7273, 0.7270, 0.7266, 0.7264, 0.7264, 0.7263,
         0.7261, 0.7257, 0.7256, 0.7256, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7642, 0.7492, 0.7485, 0.7482, 0.7466, 0.7440, 0.7434, 0.7430, 0.7413,
         0.7396, 0.7389, 0.7386, 0.7384, 0.7376, 0.7363, 0.7361, 0.7358, 0.7353,
         0.7348, 0.7337, 0.7336, 0.7336, 0.7331, 0.7324, 0.7324, 0.7320, 0.7316,
         0.7315, 0.7311, 0.7307, 0.7303, 0.7298, 0.7297, 0.7289, 0.7284, 0.7282,
         0.7278, 0.7276, 0.7273, 0.7271, 0.7268, 0.7266, 0.7266, 0.7265, 0.7261,
         0.7260, 0.7255, 0.7253, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7682, 0.7494, 0.7473, 0.7463, 0.7457, 0.7443, 0.7443, 0.7442, 0.7397,
         0.7391, 0.7388, 0.7379, 0.7377, 0.7377, 0.7366, 0.7366, 0.7353, 0.7344,
         0.7338, 0.7337, 0.7337, 0.7336, 0.7331, 0.7325, 0.7324, 0.7323, 0.7316,
         0.7310, 0.7309, 0.7304, 0.7300, 0.7300, 0.7296, 0.7284, 0.7283, 0.7278,
         0.7276, 0.7275, 0.7271, 0.7265, 0.7264, 0.7260, 0.7259, 0.7255, 0.7254,
         0.7253, 0.7252, 0.7252, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7678, 0.7512, 0.7495, 0.7474, 0.7455, 0.7453, 0.7428, 0.7421, 0.7402,
         0.7396, 0.7395, 0.7391, 0.7378, 0.7371, 0.7366, 0.7365, 0.7361, 0.7360,
         0.7357, 0.7356, 0.7354, 0.7346, 0.7344, 0.7336, 0.7333, 0.7315, 0.7312,
         0.7312, 0.7310, 0.7303, 0.7301, 0.7297, 0.7293, 0.7293, 0.7289, 0.7285,
         0.7284, 0.7281, 0.7278, 0.7275, 0.7273, 0.7273, 0.7272, 0.7271, 0.7266,
         0.7263, 0.7254, 0.7248, 0.7247, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7699, 0.7527, 0.7468, 0.7466, 0.7451, 0.7449, 0.7440, 0.7438, 0.7397,
         0.7382, 0.7382, 0.7374, 0.7372, 0.7369, 0.7366, 0.7366, 0.7362, 0.7355,
         0.7352, 0.7347, 0.7341, 0.7338, 0.7330, 0.7317, 0.7314, 0.7314, 0.7310,
         0.7308, 0.7308, 0.7303, 0.7301, 0.7299, 0.7296, 0.7295, 0.7285, 0.7285,
         0.7283, 0.7283, 0.7278, 0.7270, 0.7268, 0.7267, 0.7265, 0.7263, 0.7262,
         0.7257, 0.7254, 0.7253, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7669, 0.7523, 0.7505, 0.7480, 0.7474, 0.7465, 0.7436, 0.7406, 0.7389,
         0.7384, 0.7382, 0.7372, 0.7371, 0.7371, 0.7368, 0.7364, 0.7353, 0.7351,
         0.7349, 0.7330, 0.7330, 0.7325, 0.7324, 0.7318, 0.7317, 0.7315, 0.7313,
         0.7312, 0.7311, 0.7301, 0.7296, 0.7294, 0.7288, 0.7277, 0.7277, 0.7275,
         0.7274, 0.7269, 0.7266, 0.7266, 0.7265, 0.7265, 0.7262, 0.7259, 0.7256,
         0.7256, 0.7251, 0.7250, 0.7249, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7651, 0.7512, 0.7478, 0.7464, 0.7457, 0.7454, 0.7437, 0.7421, 0.7385,
         0.7384, 0.7384, 0.7371, 0.7371, 0.7368, 0.7367, 0.7367, 0.7366, 0.7363,
         0.7358, 0.7351, 0.7340, 0.7339, 0.7333, 0.7330, 0.7325, 0.7320, 0.7318,
         0.7315, 0.7313, 0.7311, 0.7302, 0.7300, 0.7298, 0.7291, 0.7285, 0.7282,
         0.7282, 0.7275, 0.7273, 0.7271, 0.7269, 0.7264, 0.7261, 0.7260, 0.7257,
         0.7256, 0.7254, 0.7251, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7655, 0.7516, 0.7495, 0.7464, 0.7458, 0.7451, 0.7445, 0.7407, 0.7395,
         0.7394, 0.7394, 0.7390, 0.7384, 0.7383, 0.7380, 0.7365, 0.7365, 0.7352,
         0.7349, 0.7349, 0.7346, 0.7334, 0.7334, 0.7329, 0.7325, 0.7323, 0.7319,
         0.7318, 0.7314, 0.7309, 0.7306, 0.7302, 0.7301, 0.7298, 0.7294, 0.7288,
         0.7288, 0.7281, 0.7277, 0.7276, 0.7270, 0.7266, 0.7264, 0.7263, 0.7258,
         0.7258, 0.7257, 0.7257, 0.7255, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7508, 0.7498, 0.7476, 0.7462, 0.7462, 0.7417, 0.7417, 0.7385,
         0.7383, 0.7374, 0.7373, 0.7368, 0.7364, 0.7364, 0.7359, 0.7356, 0.7345,
         0.7333, 0.7328, 0.7327, 0.7327, 0.7323, 0.7323, 0.7318, 0.7315, 0.7310,
         0.7310, 0.7308, 0.7301, 0.7299, 0.7297, 0.7296, 0.7295, 0.7293, 0.7287,
         0.7272, 0.7271, 0.7270, 0.7268, 0.7268, 0.7267, 0.7266, 0.7266, 0.7263,
         0.7261, 0.7259, 0.7259, 0.7249, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7627, 0.7533, 0.7505, 0.7489, 0.7474, 0.7432, 0.7430, 0.7397, 0.7390,
         0.7386, 0.7386, 0.7384, 0.7381, 0.7379, 0.7369, 0.7365, 0.7360, 0.7348,
         0.7332, 0.7328, 0.7316, 0.7314, 0.7313, 0.7313, 0.7308, 0.7301, 0.7300,
         0.7296, 0.7296, 0.7295, 0.7286, 0.7281, 0.7280, 0.7280, 0.7278, 0.7276,
         0.7275, 0.7264, 0.7264, 0.7263, 0.7262, 0.7259, 0.7259, 0.7256, 0.7255,
         0.7255, 0.7251, 0.7249, 0.7248, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7658, 0.7534, 0.7506, 0.7472, 0.7459, 0.7457, 0.7437, 0.7423, 0.7388,
         0.7388, 0.7386, 0.7380, 0.7379, 0.7378, 0.7376, 0.7376, 0.7358, 0.7336,
         0.7332, 0.7329, 0.7326, 0.7325, 0.7324, 0.7322, 0.7320, 0.7318, 0.7317,
         0.7309, 0.7306, 0.7303, 0.7303, 0.7303, 0.7288, 0.7288, 0.7285, 0.7283,
         0.7279, 0.7278, 0.7277, 0.7277, 0.7269, 0.7264, 0.7258, 0.7257, 0.7253,
         0.7251, 0.7250, 0.7250, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7658, 0.7490, 0.7488, 0.7484, 0.7462, 0.7461, 0.7437, 0.7434, 0.7394,
         0.7390, 0.7385, 0.7378, 0.7378, 0.7374, 0.7364, 0.7359, 0.7351, 0.7348,
         0.7347, 0.7347, 0.7345, 0.7334, 0.7325, 0.7320, 0.7319, 0.7315, 0.7313,
         0.7310, 0.7307, 0.7301, 0.7299, 0.7297, 0.7296, 0.7294, 0.7294, 0.7290,
         0.7283, 0.7281, 0.7281, 0.7270, 0.7269, 0.7267, 0.7267, 0.7266, 0.7264,
         0.7261, 0.7259, 0.7259, 0.7259, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7650, 0.7494, 0.7484, 0.7456, 0.7450, 0.7448, 0.7420, 0.7412, 0.7388,
         0.7383, 0.7378, 0.7367, 0.7356, 0.7348, 0.7346, 0.7343, 0.7342, 0.7341,
         0.7337, 0.7336, 0.7334, 0.7330, 0.7317, 0.7314, 0.7311, 0.7308, 0.7308,
         0.7306, 0.7305, 0.7302, 0.7300, 0.7299, 0.7297, 0.7293, 0.7286, 0.7284,
         0.7284, 0.7280, 0.7278, 0.7278, 0.7275, 0.7273, 0.7270, 0.7262, 0.7261,
         0.7259, 0.7258, 0.7257, 0.7256, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7646, 0.7532, 0.7492, 0.7478, 0.7454, 0.7441, 0.7432, 0.7397, 0.7396,
         0.7391, 0.7383, 0.7379, 0.7376, 0.7374, 0.7367, 0.7362, 0.7361, 0.7352,
         0.7343, 0.7335, 0.7327, 0.7326, 0.7323, 0.7318, 0.7317, 0.7317, 0.7305,
         0.7303, 0.7302, 0.7302, 0.7299, 0.7295, 0.7295, 0.7294, 0.7294, 0.7288,
         0.7279, 0.7278, 0.7275, 0.7275, 0.7274, 0.7273, 0.7271, 0.7271, 0.7267,
         0.7266, 0.7263, 0.7263, 0.7262, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7503, 0.7478, 0.7465, 0.7451, 0.7441, 0.7429, 0.7415, 0.7404,
         0.7389, 0.7380, 0.7380, 0.7373, 0.7373, 0.7361, 0.7356, 0.7354, 0.7346,
         0.7345, 0.7337, 0.7335, 0.7333, 0.7333, 0.7328, 0.7327, 0.7325, 0.7322,
         0.7314, 0.7311, 0.7304, 0.7300, 0.7296, 0.7292, 0.7291, 0.7289, 0.7288,
         0.7287, 0.7284, 0.7276, 0.7274, 0.7272, 0.7264, 0.7262, 0.7260, 0.7258,
         0.7258, 0.7256, 0.7254, 0.7253, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7648, 0.7496, 0.7492, 0.7482, 0.7462, 0.7458, 0.7445, 0.7412, 0.7397,
         0.7391, 0.7382, 0.7376, 0.7363, 0.7361, 0.7360, 0.7360, 0.7359, 0.7357,
         0.7340, 0.7335, 0.7335, 0.7335, 0.7330, 0.7324, 0.7323, 0.7320, 0.7318,
         0.7310, 0.7308, 0.7307, 0.7307, 0.7304, 0.7298, 0.7298, 0.7294, 0.7290,
         0.7287, 0.7271, 0.7267, 0.7267, 0.7263, 0.7262, 0.7260, 0.7255, 0.7255,
         0.7255, 0.7254, 0.7253, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7614, 0.7509, 0.7502, 0.7475, 0.7459, 0.7451, 0.7446, 0.7396, 0.7393,
         0.7392, 0.7386, 0.7383, 0.7383, 0.7381, 0.7378, 0.7375, 0.7371, 0.7344,
         0.7333, 0.7332, 0.7331, 0.7325, 0.7323, 0.7316, 0.7316, 0.7308, 0.7307,
         0.7305, 0.7301, 0.7297, 0.7296, 0.7295, 0.7288, 0.7288, 0.7284, 0.7279,
         0.7275, 0.7275, 0.7272, 0.7270, 0.7268, 0.7267, 0.7265, 0.7265, 0.7262,
         0.7256, 0.7255, 0.7254, 0.7250, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7635, 0.7528, 0.7498, 0.7468, 0.7455, 0.7452, 0.7421, 0.7408, 0.7402,
         0.7400, 0.7397, 0.7390, 0.7389, 0.7382, 0.7376, 0.7374, 0.7363, 0.7356,
         0.7343, 0.7343, 0.7336, 0.7336, 0.7328, 0.7326, 0.7325, 0.7323, 0.7321,
         0.7314, 0.7313, 0.7308, 0.7301, 0.7299, 0.7288, 0.7284, 0.7283, 0.7282,
         0.7281, 0.7281, 0.7278, 0.7278, 0.7276, 0.7275, 0.7275, 0.7265, 0.7262,
         0.7262, 0.7255, 0.7252, 0.7249, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7631, 0.7512, 0.7467, 0.7463, 0.7459, 0.7457, 0.7439, 0.7409, 0.7408,
         0.7404, 0.7395, 0.7383, 0.7380, 0.7373, 0.7370, 0.7357, 0.7357, 0.7339,
         0.7337, 0.7336, 0.7333, 0.7330, 0.7329, 0.7329, 0.7326, 0.7326, 0.7324,
         0.7323, 0.7315, 0.7291, 0.7290, 0.7288, 0.7285, 0.7284, 0.7283, 0.7280,
         0.7280, 0.7279, 0.7275, 0.7275, 0.7275, 0.7271, 0.7271, 0.7265, 0.7265,
         0.7264, 0.7264, 0.7261, 0.7261, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7508, 0.7505, 0.7476, 0.7458, 0.7456, 0.7438, 0.7432, 0.7397,
         0.7385, 0.7385, 0.7385, 0.7374, 0.7374, 0.7367, 0.7364, 0.7361, 0.7359,
         0.7353, 0.7345, 0.7335, 0.7322, 0.7321, 0.7316, 0.7315, 0.7312, 0.7311,
         0.7307, 0.7305, 0.7303, 0.7302, 0.7302, 0.7301, 0.7297, 0.7294, 0.7294,
         0.7293, 0.7293, 0.7275, 0.7274, 0.7273, 0.7270, 0.7266, 0.7265, 0.7261,
         0.7261, 0.7259, 0.7256, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7689, 0.7521, 0.7496, 0.7464, 0.7463, 0.7446, 0.7431, 0.7422, 0.7397,
         0.7394, 0.7390, 0.7382, 0.7364, 0.7364, 0.7363, 0.7360, 0.7358, 0.7352,
         0.7337, 0.7336, 0.7331, 0.7324, 0.7313, 0.7305, 0.7304, 0.7303, 0.7299,
         0.7296, 0.7293, 0.7290, 0.7284, 0.7282, 0.7276, 0.7275, 0.7274, 0.7272,
         0.7270, 0.7270, 0.7269, 0.7269, 0.7268, 0.7263, 0.7259, 0.7257, 0.7256,
         0.7255, 0.7254, 0.7252, 0.7246, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7655, 0.7530, 0.7490, 0.7487, 0.7463, 0.7438, 0.7431, 0.7400, 0.7399,
         0.7386, 0.7380, 0.7376, 0.7375, 0.7369, 0.7364, 0.7363, 0.7359, 0.7353,
         0.7353, 0.7350, 0.7324, 0.7320, 0.7319, 0.7316, 0.7316, 0.7315, 0.7314,
         0.7312, 0.7308, 0.7307, 0.7307, 0.7294, 0.7290, 0.7289, 0.7288, 0.7288,
         0.7287, 0.7278, 0.7275, 0.7274, 0.7274, 0.7272, 0.7265, 0.7261, 0.7260,
         0.7256, 0.7253, 0.7251, 0.7247, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7676, 0.7503, 0.7500, 0.7486, 0.7462, 0.7458, 0.7419, 0.7412, 0.7393,
         0.7384, 0.7383, 0.7383, 0.7382, 0.7377, 0.7368, 0.7364, 0.7361, 0.7351,
         0.7345, 0.7339, 0.7326, 0.7325, 0.7319, 0.7317, 0.7316, 0.7313, 0.7313,
         0.7313, 0.7313, 0.7312, 0.7309, 0.7306, 0.7303, 0.7301, 0.7300, 0.7291,
         0.7288, 0.7288, 0.7283, 0.7282, 0.7278, 0.7274, 0.7272, 0.7270, 0.7269,
         0.7262, 0.7261, 0.7261, 0.7259, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7679, 0.7509, 0.7501, 0.7474, 0.7463, 0.7449, 0.7445, 0.7415, 0.7401,
         0.7391, 0.7387, 0.7385, 0.7372, 0.7368, 0.7366, 0.7351, 0.7345, 0.7343,
         0.7340, 0.7336, 0.7336, 0.7330, 0.7330, 0.7329, 0.7327, 0.7322, 0.7308,
         0.7305, 0.7304, 0.7303, 0.7303, 0.7300, 0.7295, 0.7294, 0.7291, 0.7291,
         0.7284, 0.7280, 0.7280, 0.7277, 0.7275, 0.7274, 0.7263, 0.7263, 0.7255,
         0.7254, 0.7253, 0.7253, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7653, 0.7511, 0.7481, 0.7474, 0.7464, 0.7459, 0.7437, 0.7423, 0.7405,
         0.7392, 0.7382, 0.7378, 0.7367, 0.7360, 0.7359, 0.7356, 0.7353, 0.7349,
         0.7348, 0.7347, 0.7344, 0.7326, 0.7326, 0.7318, 0.7318, 0.7316, 0.7314,
         0.7314, 0.7314, 0.7307, 0.7304, 0.7299, 0.7296, 0.7280, 0.7280, 0.7279,
         0.7278, 0.7271, 0.7269, 0.7268, 0.7266, 0.7263, 0.7263, 0.7260, 0.7255,
         0.7255, 0.7251, 0.7250, 0.7249, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7512, 0.7503, 0.7482, 0.7464, 0.7448, 0.7437, 0.7404, 0.7402,
         0.7394, 0.7383, 0.7381, 0.7377, 0.7372, 0.7368, 0.7363, 0.7362, 0.7340,
         0.7335, 0.7332, 0.7331, 0.7327, 0.7325, 0.7314, 0.7313, 0.7309, 0.7307,
         0.7303, 0.7299, 0.7299, 0.7298, 0.7296, 0.7294, 0.7293, 0.7291, 0.7289,
         0.7279, 0.7279, 0.7276, 0.7275, 0.7275, 0.7268, 0.7268, 0.7268, 0.7267,
         0.7267, 0.7265, 0.7261, 0.7258, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7653, 0.7538, 0.7495, 0.7485, 0.7473, 0.7456, 0.7439, 0.7413, 0.7401,
         0.7392, 0.7390, 0.7388, 0.7386, 0.7379, 0.7376, 0.7374, 0.7363, 0.7357,
         0.7353, 0.7343, 0.7342, 0.7331, 0.7330, 0.7326, 0.7325, 0.7323, 0.7315,
         0.7314, 0.7312, 0.7307, 0.7306, 0.7303, 0.7297, 0.7290, 0.7289, 0.7288,
         0.7287, 0.7280, 0.7275, 0.7275, 0.7271, 0.7268, 0.7266, 0.7265, 0.7263,
         0.7263, 0.7262, 0.7258, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7509, 0.7500, 0.7473, 0.7465, 0.7452, 0.7447, 0.7414, 0.7400,
         0.7391, 0.7386, 0.7385, 0.7375, 0.7370, 0.7364, 0.7363, 0.7362, 0.7358,
         0.7351, 0.7342, 0.7341, 0.7339, 0.7332, 0.7323, 0.7321, 0.7318, 0.7312,
         0.7312, 0.7309, 0.7307, 0.7304, 0.7301, 0.7297, 0.7295, 0.7293, 0.7285,
         0.7285, 0.7273, 0.7271, 0.7269, 0.7265, 0.7265, 0.7264, 0.7264, 0.7262,
         0.7257, 0.7256, 0.7256, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7639, 0.7526, 0.7504, 0.7467, 0.7458, 0.7445, 0.7444, 0.7413, 0.7398,
         0.7394, 0.7393, 0.7379, 0.7375, 0.7370, 0.7356, 0.7350, 0.7345, 0.7344,
         0.7344, 0.7344, 0.7342, 0.7341, 0.7335, 0.7333, 0.7327, 0.7325, 0.7316,
         0.7310, 0.7310, 0.7308, 0.7306, 0.7306, 0.7302, 0.7302, 0.7294, 0.7287,
         0.7281, 0.7278, 0.7278, 0.7276, 0.7275, 0.7274, 0.7274, 0.7273, 0.7272,
         0.7263, 0.7263, 0.7260, 0.7258, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7629, 0.7540, 0.7477, 0.7471, 0.7461, 0.7449, 0.7435, 0.7413, 0.7407,
         0.7399, 0.7387, 0.7383, 0.7380, 0.7376, 0.7373, 0.7372, 0.7370, 0.7369,
         0.7354, 0.7350, 0.7345, 0.7345, 0.7332, 0.7331, 0.7323, 0.7320, 0.7319,
         0.7317, 0.7317, 0.7314, 0.7309, 0.7300, 0.7298, 0.7295, 0.7292, 0.7289,
         0.7286, 0.7278, 0.7276, 0.7275, 0.7273, 0.7272, 0.7266, 0.7265, 0.7264,
         0.7263, 0.7259, 0.7255, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7657, 0.7535, 0.7511, 0.7475, 0.7453, 0.7449, 0.7441, 0.7432, 0.7407,
         0.7391, 0.7389, 0.7383, 0.7379, 0.7370, 0.7365, 0.7355, 0.7345, 0.7342,
         0.7333, 0.7333, 0.7330, 0.7325, 0.7324, 0.7314, 0.7314, 0.7314, 0.7314,
         0.7299, 0.7299, 0.7297, 0.7296, 0.7293, 0.7291, 0.7290, 0.7289, 0.7287,
         0.7287, 0.7286, 0.7285, 0.7282, 0.7270, 0.7269, 0.7268, 0.7262, 0.7261,
         0.7261, 0.7261, 0.7254, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7639, 0.7541, 0.7486, 0.7470, 0.7454, 0.7431, 0.7424, 0.7411, 0.7391,
         0.7384, 0.7383, 0.7382, 0.7380, 0.7377, 0.7372, 0.7371, 0.7367, 0.7365,
         0.7347, 0.7342, 0.7336, 0.7332, 0.7329, 0.7322, 0.7308, 0.7306, 0.7305,
         0.7304, 0.7304, 0.7302, 0.7302, 0.7300, 0.7299, 0.7298, 0.7290, 0.7285,
         0.7282, 0.7281, 0.7281, 0.7276, 0.7274, 0.7274, 0.7272, 0.7267, 0.7265,
         0.7259, 0.7257, 0.7256, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7678, 0.7507, 0.7484, 0.7482, 0.7449, 0.7444, 0.7443, 0.7416, 0.7406,
         0.7402, 0.7387, 0.7381, 0.7379, 0.7373, 0.7368, 0.7363, 0.7358, 0.7342,
         0.7338, 0.7334, 0.7330, 0.7324, 0.7323, 0.7322, 0.7318, 0.7316, 0.7311,
         0.7311, 0.7310, 0.7307, 0.7303, 0.7300, 0.7299, 0.7299, 0.7297, 0.7294,
         0.7283, 0.7282, 0.7281, 0.7279, 0.7278, 0.7271, 0.7269, 0.7266, 0.7261,
         0.7260, 0.7255, 0.7254, 0.7253, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7679, 0.7503, 0.7491, 0.7466, 0.7457, 0.7451, 0.7438, 0.7435, 0.7412,
         0.7396, 0.7387, 0.7381, 0.7379, 0.7376, 0.7374, 0.7372, 0.7365, 0.7364,
         0.7363, 0.7344, 0.7337, 0.7333, 0.7333, 0.7333, 0.7326, 0.7325, 0.7322,
         0.7314, 0.7314, 0.7313, 0.7308, 0.7306, 0.7293, 0.7289, 0.7288, 0.7285,
         0.7282, 0.7280, 0.7278, 0.7278, 0.7278, 0.7273, 0.7273, 0.7264, 0.7263,
         0.7262, 0.7259, 0.7256, 0.7256, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7669, 0.7523, 0.7483, 0.7471, 0.7450, 0.7438, 0.7431, 0.7411, 0.7393,
         0.7388, 0.7385, 0.7384, 0.7381, 0.7380, 0.7379, 0.7378, 0.7374, 0.7357,
         0.7350, 0.7348, 0.7342, 0.7340, 0.7333, 0.7328, 0.7322, 0.7321, 0.7315,
         0.7315, 0.7313, 0.7312, 0.7311, 0.7308, 0.7302, 0.7298, 0.7290, 0.7290,
         0.7285, 0.7284, 0.7280, 0.7275, 0.7271, 0.7270, 0.7265, 0.7265, 0.7263,
         0.7262, 0.7261, 0.7256, 0.7254, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7652, 0.7503, 0.7489, 0.7479, 0.7464, 0.7453, 0.7428, 0.7420, 0.7400,
         0.7389, 0.7385, 0.7378, 0.7376, 0.7372, 0.7368, 0.7363, 0.7361, 0.7349,
         0.7344, 0.7339, 0.7328, 0.7326, 0.7322, 0.7321, 0.7316, 0.7315, 0.7314,
         0.7309, 0.7307, 0.7305, 0.7295, 0.7294, 0.7289, 0.7285, 0.7280, 0.7275,
         0.7275, 0.7272, 0.7269, 0.7269, 0.7265, 0.7264, 0.7261, 0.7256, 0.7255,
         0.7254, 0.7254, 0.7254, 0.7253, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7666, 0.7520, 0.7479, 0.7472, 0.7464, 0.7461, 0.7425, 0.7420, 0.7396,
         0.7388, 0.7381, 0.7379, 0.7372, 0.7369, 0.7368, 0.7367, 0.7362, 0.7358,
         0.7357, 0.7344, 0.7343, 0.7341, 0.7332, 0.7332, 0.7329, 0.7315, 0.7311,
         0.7310, 0.7306, 0.7304, 0.7303, 0.7302, 0.7300, 0.7295, 0.7295, 0.7291,
         0.7291, 0.7284, 0.7282, 0.7282, 0.7277, 0.7272, 0.7271, 0.7266, 0.7263,
         0.7263, 0.7262, 0.7257, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7664, 0.7534, 0.7499, 0.7478, 0.7463, 0.7436, 0.7434, 0.7432, 0.7402,
         0.7395, 0.7389, 0.7385, 0.7372, 0.7370, 0.7368, 0.7363, 0.7350, 0.7349,
         0.7346, 0.7344, 0.7334, 0.7329, 0.7324, 0.7324, 0.7322, 0.7318, 0.7317,
         0.7313, 0.7311, 0.7303, 0.7297, 0.7295, 0.7294, 0.7291, 0.7289, 0.7289,
         0.7286, 0.7285, 0.7280, 0.7278, 0.7271, 0.7269, 0.7265, 0.7262, 0.7259,
         0.7258, 0.7256, 0.7255, 0.7254, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7510, 0.7488, 0.7475, 0.7461, 0.7447, 0.7441, 0.7411, 0.7403,
         0.7392, 0.7386, 0.7380, 0.7376, 0.7368, 0.7366, 0.7365, 0.7352, 0.7350,
         0.7350, 0.7347, 0.7340, 0.7340, 0.7337, 0.7334, 0.7332, 0.7318, 0.7317,
         0.7316, 0.7315, 0.7315, 0.7313, 0.7311, 0.7307, 0.7297, 0.7295, 0.7294,
         0.7284, 0.7280, 0.7277, 0.7276, 0.7274, 0.7270, 0.7267, 0.7264, 0.7263,
         0.7259, 0.7258, 0.7255, 0.7252, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7640, 0.7524, 0.7475, 0.7473, 0.7466, 0.7445, 0.7442, 0.7427, 0.7393,
         0.7390, 0.7380, 0.7379, 0.7373, 0.7373, 0.7360, 0.7359, 0.7354, 0.7347,
         0.7345, 0.7333, 0.7332, 0.7332, 0.7325, 0.7325, 0.7316, 0.7314, 0.7313,
         0.7312, 0.7304, 0.7304, 0.7300, 0.7292, 0.7287, 0.7281, 0.7274, 0.7273,
         0.7273, 0.7272, 0.7271, 0.7270, 0.7270, 0.7269, 0.7268, 0.7268, 0.7263,
         0.7261, 0.7255, 0.7253, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7681, 0.7524, 0.7477, 0.7474, 0.7469, 0.7455, 0.7447, 0.7424, 0.7393,
         0.7390, 0.7387, 0.7374, 0.7368, 0.7367, 0.7366, 0.7363, 0.7362, 0.7350,
         0.7346, 0.7344, 0.7336, 0.7332, 0.7327, 0.7325, 0.7323, 0.7322, 0.7322,
         0.7319, 0.7311, 0.7310, 0.7306, 0.7306, 0.7294, 0.7289, 0.7285, 0.7282,
         0.7280, 0.7278, 0.7276, 0.7276, 0.7272, 0.7270, 0.7266, 0.7265, 0.7264,
         0.7262, 0.7262, 0.7262, 0.7260, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7688, 0.7513, 0.7510, 0.7473, 0.7449, 0.7449, 0.7444, 0.7421, 0.7391,
         0.7388, 0.7387, 0.7374, 0.7374, 0.7363, 0.7362, 0.7358, 0.7351, 0.7348,
         0.7344, 0.7328, 0.7328, 0.7326, 0.7325, 0.7324, 0.7315, 0.7315, 0.7314,
         0.7312, 0.7309, 0.7303, 0.7302, 0.7292, 0.7289, 0.7287, 0.7286, 0.7283,
         0.7282, 0.7281, 0.7280, 0.7279, 0.7279, 0.7277, 0.7277, 0.7274, 0.7270,
         0.7266, 0.7266, 0.7263, 0.7258, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7499, 0.7496, 0.7480, 0.7463, 0.7462, 0.7437, 0.7420, 0.7394,
         0.7383, 0.7379, 0.7376, 0.7374, 0.7363, 0.7361, 0.7357, 0.7349, 0.7344,
         0.7333, 0.7333, 0.7331, 0.7322, 0.7319, 0.7317, 0.7315, 0.7314, 0.7313,
         0.7312, 0.7312, 0.7312, 0.7310, 0.7305, 0.7299, 0.7299, 0.7297, 0.7277,
         0.7274, 0.7272, 0.7269, 0.7267, 0.7265, 0.7263, 0.7262, 0.7259, 0.7257,
         0.7255, 0.7254, 0.7254, 0.7253, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7650, 0.7498, 0.7493, 0.7470, 0.7454, 0.7441, 0.7416, 0.7413, 0.7401,
         0.7395, 0.7385, 0.7383, 0.7374, 0.7366, 0.7366, 0.7359, 0.7354, 0.7353,
         0.7353, 0.7351, 0.7338, 0.7333, 0.7330, 0.7317, 0.7317, 0.7316, 0.7315,
         0.7311, 0.7305, 0.7301, 0.7299, 0.7298, 0.7295, 0.7292, 0.7292, 0.7287,
         0.7283, 0.7281, 0.7276, 0.7272, 0.7267, 0.7266, 0.7265, 0.7264, 0.7264,
         0.7262, 0.7262, 0.7257, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7537, 0.7478, 0.7468, 0.7468, 0.7456, 0.7442, 0.7412, 0.7396,
         0.7389, 0.7381, 0.7380, 0.7377, 0.7377, 0.7366, 0.7362, 0.7361, 0.7357,
         0.7349, 0.7343, 0.7341, 0.7338, 0.7336, 0.7324, 0.7323, 0.7313, 0.7307,
         0.7305, 0.7303, 0.7302, 0.7300, 0.7298, 0.7292, 0.7288, 0.7286, 0.7286,
         0.7284, 0.7283, 0.7281, 0.7281, 0.7277, 0.7277, 0.7272, 0.7265, 0.7262,
         0.7255, 0.7253, 0.7253, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7664, 0.7526, 0.7482, 0.7468, 0.7466, 0.7436, 0.7436, 0.7435, 0.7396,
         0.7390, 0.7389, 0.7389, 0.7389, 0.7383, 0.7380, 0.7373, 0.7358, 0.7354,
         0.7349, 0.7343, 0.7339, 0.7332, 0.7329, 0.7326, 0.7321, 0.7321, 0.7321,
         0.7321, 0.7320, 0.7316, 0.7315, 0.7314, 0.7306, 0.7295, 0.7294, 0.7294,
         0.7291, 0.7291, 0.7288, 0.7286, 0.7281, 0.7281, 0.7278, 0.7275, 0.7272,
         0.7267, 0.7261, 0.7261, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7655, 0.7537, 0.7480, 0.7470, 0.7448, 0.7445, 0.7441, 0.7425, 0.7403,
         0.7402, 0.7401, 0.7390, 0.7382, 0.7381, 0.7381, 0.7380, 0.7371, 0.7351,
         0.7350, 0.7339, 0.7338, 0.7337, 0.7331, 0.7329, 0.7326, 0.7325, 0.7322,
         0.7320, 0.7315, 0.7308, 0.7307, 0.7305, 0.7303, 0.7302, 0.7299, 0.7299,
         0.7285, 0.7281, 0.7278, 0.7275, 0.7273, 0.7271, 0.7269, 0.7266, 0.7265,
         0.7264, 0.7254, 0.7254, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7669, 0.7523, 0.7482, 0.7476, 0.7466, 0.7442, 0.7434, 0.7417, 0.7399,
         0.7398, 0.7382, 0.7380, 0.7378, 0.7377, 0.7376, 0.7369, 0.7354, 0.7350,
         0.7349, 0.7344, 0.7339, 0.7333, 0.7327, 0.7323, 0.7320, 0.7317, 0.7317,
         0.7317, 0.7313, 0.7305, 0.7304, 0.7300, 0.7299, 0.7288, 0.7288, 0.7287,
         0.7285, 0.7284, 0.7276, 0.7265, 0.7263, 0.7262, 0.7261, 0.7259, 0.7258,
         0.7257, 0.7257, 0.7255, 0.7253, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7523, 0.7497, 0.7470, 0.7459, 0.7448, 0.7436, 0.7418, 0.7418,
         0.7402, 0.7399, 0.7398, 0.7395, 0.7390, 0.7388, 0.7378, 0.7369, 0.7343,
         0.7340, 0.7338, 0.7333, 0.7330, 0.7324, 0.7323, 0.7312, 0.7310, 0.7302,
         0.7300, 0.7298, 0.7298, 0.7298, 0.7296, 0.7295, 0.7290, 0.7286, 0.7283,
         0.7276, 0.7274, 0.7273, 0.7273, 0.7272, 0.7266, 0.7265, 0.7263, 0.7262,
         0.7260, 0.7259, 0.7256, 0.7254, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7662, 0.7529, 0.7497, 0.7484, 0.7467, 0.7450, 0.7431, 0.7422, 0.7391,
         0.7390, 0.7382, 0.7376, 0.7376, 0.7368, 0.7366, 0.7355, 0.7347, 0.7347,
         0.7346, 0.7332, 0.7329, 0.7323, 0.7317, 0.7312, 0.7309, 0.7307, 0.7303,
         0.7300, 0.7298, 0.7297, 0.7295, 0.7291, 0.7291, 0.7290, 0.7287, 0.7286,
         0.7283, 0.7281, 0.7279, 0.7279, 0.7278, 0.7271, 0.7270, 0.7270, 0.7270,
         0.7268, 0.7264, 0.7262, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7515, 0.7488, 0.7475, 0.7470, 0.7445, 0.7433, 0.7426, 0.7400,
         0.7389, 0.7379, 0.7378, 0.7374, 0.7371, 0.7370, 0.7368, 0.7353, 0.7345,
         0.7332, 0.7331, 0.7326, 0.7325, 0.7320, 0.7317, 0.7313, 0.7311, 0.7309,
         0.7307, 0.7306, 0.7305, 0.7304, 0.7302, 0.7302, 0.7296, 0.7292, 0.7286,
         0.7286, 0.7284, 0.7273, 0.7271, 0.7267, 0.7267, 0.7267, 0.7267, 0.7263,
         0.7259, 0.7258, 0.7256, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7520, 0.7480, 0.7473, 0.7464, 0.7457, 0.7453, 0.7430, 0.7402,
         0.7402, 0.7394, 0.7385, 0.7376, 0.7375, 0.7373, 0.7372, 0.7368, 0.7367,
         0.7363, 0.7348, 0.7343, 0.7338, 0.7338, 0.7331, 0.7324, 0.7323, 0.7319,
         0.7310, 0.7301, 0.7298, 0.7296, 0.7291, 0.7291, 0.7288, 0.7285, 0.7284,
         0.7283, 0.7281, 0.7281, 0.7276, 0.7275, 0.7274, 0.7274, 0.7270, 0.7267,
         0.7265, 0.7261, 0.7261, 0.7259, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7632, 0.7519, 0.7468, 0.7462, 0.7456, 0.7439, 0.7434, 0.7415, 0.7395,
         0.7392, 0.7388, 0.7377, 0.7377, 0.7371, 0.7364, 0.7361, 0.7353, 0.7333,
         0.7330, 0.7326, 0.7323, 0.7322, 0.7321, 0.7321, 0.7318, 0.7318, 0.7316,
         0.7309, 0.7303, 0.7296, 0.7294, 0.7294, 0.7293, 0.7292, 0.7287, 0.7282,
         0.7281, 0.7280, 0.7275, 0.7271, 0.7270, 0.7270, 0.7269, 0.7269, 0.7262,
         0.7261, 0.7260, 0.7259, 0.7259, 0.7259]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7644, 0.7540, 0.7492, 0.7482, 0.7472, 0.7470, 0.7454, 0.7409, 0.7402,
         0.7395, 0.7394, 0.7385, 0.7380, 0.7377, 0.7373, 0.7365, 0.7362, 0.7343,
         0.7339, 0.7333, 0.7330, 0.7327, 0.7317, 0.7315, 0.7312, 0.7311, 0.7308,
         0.7304, 0.7304, 0.7301, 0.7299, 0.7297, 0.7293, 0.7293, 0.7291, 0.7289,
         0.7279, 0.7278, 0.7275, 0.7272, 0.7272, 0.7266, 0.7265, 0.7263, 0.7258,
         0.7258, 0.7256, 0.7253, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7648, 0.7539, 0.7486, 0.7473, 0.7472, 0.7456, 0.7436, 0.7419, 0.7405,
         0.7389, 0.7385, 0.7384, 0.7382, 0.7370, 0.7365, 0.7365, 0.7356, 0.7345,
         0.7337, 0.7336, 0.7336, 0.7321, 0.7319, 0.7314, 0.7314, 0.7313, 0.7312,
         0.7311, 0.7310, 0.7306, 0.7303, 0.7302, 0.7299, 0.7297, 0.7287, 0.7282,
         0.7280, 0.7276, 0.7273, 0.7272, 0.7271, 0.7267, 0.7266, 0.7266, 0.7265,
         0.7265, 0.7264, 0.7257, 0.7256, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7608, 0.7494, 0.7484, 0.7480, 0.7468, 0.7461, 0.7443, 0.7420, 0.7388,
         0.7388, 0.7388, 0.7385, 0.7383, 0.7373, 0.7367, 0.7367, 0.7358, 0.7337,
         0.7330, 0.7326, 0.7323, 0.7320, 0.7318, 0.7315, 0.7315, 0.7314, 0.7308,
         0.7308, 0.7305, 0.7300, 0.7291, 0.7287, 0.7283, 0.7283, 0.7282, 0.7282,
         0.7278, 0.7277, 0.7272, 0.7272, 0.7270, 0.7266, 0.7265, 0.7265, 0.7261,
         0.7259, 0.7259, 0.7256, 0.7256, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7655, 0.7540, 0.7489, 0.7485, 0.7468, 0.7445, 0.7430, 0.7409, 0.7404,
         0.7403, 0.7397, 0.7389, 0.7389, 0.7382, 0.7378, 0.7376, 0.7367, 0.7366,
         0.7340, 0.7338, 0.7331, 0.7331, 0.7323, 0.7319, 0.7318, 0.7318, 0.7318,
         0.7315, 0.7310, 0.7306, 0.7303, 0.7299, 0.7294, 0.7289, 0.7287, 0.7282,
         0.7282, 0.7281, 0.7278, 0.7275, 0.7274, 0.7273, 0.7270, 0.7269, 0.7268,
         0.7267, 0.7262, 0.7260, 0.7259, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7669, 0.7510, 0.7496, 0.7482, 0.7469, 0.7453, 0.7444, 0.7433, 0.7392,
         0.7388, 0.7387, 0.7383, 0.7372, 0.7369, 0.7368, 0.7362, 0.7359, 0.7347,
         0.7344, 0.7341, 0.7340, 0.7334, 0.7329, 0.7325, 0.7322, 0.7320, 0.7315,
         0.7313, 0.7311, 0.7306, 0.7300, 0.7300, 0.7298, 0.7297, 0.7296, 0.7294,
         0.7291, 0.7288, 0.7287, 0.7276, 0.7275, 0.7273, 0.7269, 0.7267, 0.7259,
         0.7259, 0.7258, 0.7257, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7653, 0.7524, 0.7488, 0.7469, 0.7453, 0.7437, 0.7428, 0.7419, 0.7391,
         0.7390, 0.7390, 0.7388, 0.7386, 0.7371, 0.7371, 0.7355, 0.7348, 0.7340,
         0.7334, 0.7330, 0.7329, 0.7328, 0.7324, 0.7324, 0.7323, 0.7315, 0.7314,
         0.7313, 0.7312, 0.7310, 0.7307, 0.7297, 0.7297, 0.7297, 0.7286, 0.7286,
         0.7282, 0.7277, 0.7274, 0.7273, 0.7273, 0.7272, 0.7269, 0.7268, 0.7267,
         0.7265, 0.7264, 0.7258, 0.7256, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7624, 0.7523, 0.7498, 0.7482, 0.7460, 0.7440, 0.7437, 0.7426, 0.7401,
         0.7394, 0.7392, 0.7386, 0.7384, 0.7380, 0.7379, 0.7369, 0.7357, 0.7349,
         0.7348, 0.7335, 0.7323, 0.7321, 0.7320, 0.7314, 0.7309, 0.7309, 0.7308,
         0.7306, 0.7304, 0.7301, 0.7300, 0.7296, 0.7294, 0.7291, 0.7290, 0.7289,
         0.7286, 0.7285, 0.7278, 0.7278, 0.7277, 0.7271, 0.7266, 0.7261, 0.7258,
         0.7257, 0.7256, 0.7255, 0.7253, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7614, 0.7511, 0.7497, 0.7486, 0.7461, 0.7448, 0.7447, 0.7398, 0.7396,
         0.7382, 0.7378, 0.7378, 0.7375, 0.7374, 0.7360, 0.7357, 0.7355, 0.7337,
         0.7335, 0.7332, 0.7329, 0.7328, 0.7326, 0.7324, 0.7323, 0.7321, 0.7317,
         0.7316, 0.7310, 0.7306, 0.7304, 0.7300, 0.7294, 0.7293, 0.7288, 0.7287,
         0.7285, 0.7284, 0.7284, 0.7278, 0.7274, 0.7271, 0.7271, 0.7267, 0.7267,
         0.7266, 0.7260, 0.7256, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7646, 0.7535, 0.7480, 0.7476, 0.7471, 0.7436, 0.7435, 0.7405, 0.7403,
         0.7393, 0.7391, 0.7390, 0.7376, 0.7372, 0.7370, 0.7366, 0.7363, 0.7348,
         0.7339, 0.7332, 0.7331, 0.7328, 0.7327, 0.7323, 0.7319, 0.7317, 0.7314,
         0.7312, 0.7310, 0.7310, 0.7306, 0.7306, 0.7303, 0.7303, 0.7299, 0.7293,
         0.7292, 0.7291, 0.7278, 0.7277, 0.7272, 0.7271, 0.7271, 0.7267, 0.7267,
         0.7265, 0.7264, 0.7262, 0.7258, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7520, 0.7485, 0.7475, 0.7460, 0.7447, 0.7436, 0.7410, 0.7399,
         0.7388, 0.7386, 0.7376, 0.7373, 0.7372, 0.7372, 0.7363, 0.7354, 0.7351,
         0.7335, 0.7332, 0.7326, 0.7324, 0.7315, 0.7314, 0.7312, 0.7308, 0.7306,
         0.7303, 0.7301, 0.7301, 0.7291, 0.7291, 0.7289, 0.7283, 0.7283, 0.7278,
         0.7276, 0.7271, 0.7268, 0.7268, 0.7266, 0.7265, 0.7263, 0.7263, 0.7261,
         0.7258, 0.7257, 0.7256, 0.7255, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7661, 0.7531, 0.7496, 0.7489, 0.7459, 0.7452, 0.7450, 0.7435, 0.7404,
         0.7388, 0.7387, 0.7386, 0.7380, 0.7376, 0.7375, 0.7374, 0.7359, 0.7356,
         0.7336, 0.7333, 0.7331, 0.7326, 0.7325, 0.7322, 0.7318, 0.7316, 0.7314,
         0.7313, 0.7313, 0.7312, 0.7308, 0.7305, 0.7299, 0.7298, 0.7295, 0.7284,
         0.7283, 0.7283, 0.7278, 0.7270, 0.7270, 0.7268, 0.7262, 0.7262, 0.7261,
         0.7261, 0.7260, 0.7258, 0.7254, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7530, 0.7475, 0.7473, 0.7456, 0.7445, 0.7427, 0.7425, 0.7397,
         0.7394, 0.7388, 0.7382, 0.7375, 0.7371, 0.7361, 0.7347, 0.7345, 0.7343,
         0.7339, 0.7338, 0.7335, 0.7327, 0.7326, 0.7323, 0.7323, 0.7323, 0.7319,
         0.7318, 0.7316, 0.7314, 0.7309, 0.7305, 0.7288, 0.7287, 0.7282, 0.7280,
         0.7280, 0.7278, 0.7274, 0.7272, 0.7271, 0.7269, 0.7268, 0.7268, 0.7268,
         0.7267, 0.7259, 0.7257, 0.7255, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7664, 0.7533, 0.7496, 0.7466, 0.7464, 0.7451, 0.7441, 0.7415, 0.7392,
         0.7389, 0.7386, 0.7385, 0.7383, 0.7377, 0.7375, 0.7373, 0.7364, 0.7361,
         0.7342, 0.7339, 0.7332, 0.7330, 0.7327, 0.7326, 0.7321, 0.7321, 0.7315,
         0.7314, 0.7313, 0.7312, 0.7309, 0.7309, 0.7308, 0.7307, 0.7306, 0.7296,
         0.7296, 0.7295, 0.7293, 0.7281, 0.7279, 0.7274, 0.7274, 0.7270, 0.7268,
         0.7266, 0.7260, 0.7259, 0.7257, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7584, 0.7526, 0.7503, 0.7480, 0.7471, 0.7453, 0.7440, 0.7390, 0.7390,
         0.7386, 0.7384, 0.7384, 0.7383, 0.7375, 0.7371, 0.7370, 0.7363, 0.7333,
         0.7333, 0.7332, 0.7331, 0.7324, 0.7321, 0.7319, 0.7316, 0.7312, 0.7311,
         0.7310, 0.7310, 0.7306, 0.7305, 0.7302, 0.7296, 0.7296, 0.7294, 0.7293,
         0.7288, 0.7283, 0.7282, 0.7278, 0.7273, 0.7272, 0.7271, 0.7271, 0.7269,
         0.7268, 0.7261, 0.7258, 0.7257, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7662, 0.7504, 0.7478, 0.7454, 0.7448, 0.7426, 0.7422, 0.7410, 0.7399,
         0.7386, 0.7383, 0.7383, 0.7378, 0.7377, 0.7361, 0.7357, 0.7349, 0.7342,
         0.7339, 0.7334, 0.7327, 0.7326, 0.7326, 0.7319, 0.7318, 0.7317, 0.7312,
         0.7309, 0.7303, 0.7303, 0.7296, 0.7294, 0.7290, 0.7287, 0.7283, 0.7282,
         0.7282, 0.7278, 0.7278, 0.7277, 0.7273, 0.7271, 0.7269, 0.7269, 0.7266,
         0.7265, 0.7258, 0.7255, 0.7252, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7511, 0.7499, 0.7476, 0.7469, 0.7459, 0.7451, 0.7423, 0.7395,
         0.7390, 0.7384, 0.7381, 0.7377, 0.7375, 0.7373, 0.7372, 0.7364, 0.7358,
         0.7357, 0.7346, 0.7341, 0.7339, 0.7334, 0.7333, 0.7320, 0.7318, 0.7314,
         0.7314, 0.7312, 0.7310, 0.7310, 0.7304, 0.7300, 0.7300, 0.7291, 0.7290,
         0.7288, 0.7288, 0.7283, 0.7282, 0.7271, 0.7269, 0.7262, 0.7262, 0.7261,
         0.7256, 0.7255, 0.7255, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7651, 0.7510, 0.7499, 0.7481, 0.7468, 0.7457, 0.7439, 0.7395, 0.7389,
         0.7388, 0.7387, 0.7387, 0.7373, 0.7369, 0.7366, 0.7366, 0.7365, 0.7363,
         0.7352, 0.7352, 0.7343, 0.7326, 0.7326, 0.7325, 0.7323, 0.7313, 0.7313,
         0.7312, 0.7310, 0.7308, 0.7300, 0.7295, 0.7291, 0.7290, 0.7288, 0.7286,
         0.7284, 0.7281, 0.7276, 0.7276, 0.7273, 0.7266, 0.7266, 0.7266, 0.7256,
         0.7254, 0.7254, 0.7252, 0.7252, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7530, 0.7488, 0.7478, 0.7468, 0.7463, 0.7450, 0.7418, 0.7401,
         0.7388, 0.7387, 0.7387, 0.7385, 0.7380, 0.7377, 0.7371, 0.7356, 0.7346,
         0.7338, 0.7334, 0.7333, 0.7332, 0.7327, 0.7322, 0.7316, 0.7315, 0.7310,
         0.7307, 0.7306, 0.7301, 0.7301, 0.7295, 0.7295, 0.7294, 0.7294, 0.7294,
         0.7286, 0.7281, 0.7281, 0.7279, 0.7276, 0.7272, 0.7269, 0.7267, 0.7267,
         0.7267, 0.7260, 0.7258, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7504, 0.7481, 0.7472, 0.7455, 0.7444, 0.7438, 0.7437, 0.7397,
         0.7390, 0.7379, 0.7377, 0.7369, 0.7368, 0.7367, 0.7352, 0.7345, 0.7343,
         0.7341, 0.7338, 0.7333, 0.7328, 0.7327, 0.7326, 0.7322, 0.7320, 0.7317,
         0.7313, 0.7312, 0.7309, 0.7306, 0.7306, 0.7300, 0.7298, 0.7296, 0.7288,
         0.7281, 0.7281, 0.7275, 0.7271, 0.7268, 0.7267, 0.7265, 0.7264, 0.7263,
         0.7259, 0.7254, 0.7252, 0.7248, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7652, 0.7518, 0.7481, 0.7452, 0.7451, 0.7441, 0.7438, 0.7420, 0.7399,
         0.7378, 0.7378, 0.7377, 0.7376, 0.7371, 0.7369, 0.7355, 0.7353, 0.7348,
         0.7347, 0.7344, 0.7338, 0.7337, 0.7334, 0.7321, 0.7318, 0.7317, 0.7316,
         0.7311, 0.7305, 0.7302, 0.7302, 0.7301, 0.7299, 0.7294, 0.7292, 0.7291,
         0.7284, 0.7280, 0.7275, 0.7264, 0.7262, 0.7262, 0.7262, 0.7261, 0.7259,
         0.7258, 0.7258, 0.7258, 0.7257, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7643, 0.7540, 0.7492, 0.7468, 0.7460, 0.7450, 0.7437, 0.7424, 0.7393,
         0.7392, 0.7388, 0.7380, 0.7374, 0.7374, 0.7371, 0.7362, 0.7361, 0.7360,
         0.7350, 0.7333, 0.7328, 0.7327, 0.7315, 0.7313, 0.7313, 0.7312, 0.7311,
         0.7310, 0.7307, 0.7306, 0.7305, 0.7298, 0.7295, 0.7293, 0.7291, 0.7290,
         0.7285, 0.7273, 0.7273, 0.7272, 0.7266, 0.7266, 0.7264, 0.7263, 0.7263,
         0.7261, 0.7260, 0.7258, 0.7257, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7636, 0.7520, 0.7506, 0.7466, 0.7446, 0.7443, 0.7426, 0.7418, 0.7409,
         0.7399, 0.7393, 0.7389, 0.7382, 0.7370, 0.7369, 0.7368, 0.7342, 0.7342,
         0.7340, 0.7330, 0.7330, 0.7328, 0.7320, 0.7319, 0.7317, 0.7316, 0.7313,
         0.7311, 0.7310, 0.7301, 0.7300, 0.7299, 0.7294, 0.7294, 0.7293, 0.7292,
         0.7292, 0.7284, 0.7276, 0.7272, 0.7271, 0.7270, 0.7269, 0.7263, 0.7263,
         0.7261, 0.7260, 0.7258, 0.7257, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7634, 0.7509, 0.7508, 0.7471, 0.7470, 0.7441, 0.7441, 0.7402, 0.7388,
         0.7386, 0.7382, 0.7381, 0.7380, 0.7375, 0.7368, 0.7366, 0.7350, 0.7344,
         0.7333, 0.7330, 0.7326, 0.7326, 0.7323, 0.7319, 0.7318, 0.7317, 0.7316,
         0.7315, 0.7311, 0.7310, 0.7303, 0.7300, 0.7299, 0.7295, 0.7295, 0.7293,
         0.7288, 0.7286, 0.7279, 0.7279, 0.7275, 0.7268, 0.7268, 0.7267, 0.7265,
         0.7265, 0.7261, 0.7260, 0.7256, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7687, 0.7505, 0.7498, 0.7454, 0.7440, 0.7439, 0.7436, 0.7422, 0.7411,
         0.7388, 0.7384, 0.7378, 0.7377, 0.7367, 0.7365, 0.7358, 0.7353, 0.7349,
         0.7348, 0.7347, 0.7343, 0.7340, 0.7336, 0.7335, 0.7332, 0.7331, 0.7328,
         0.7309, 0.7308, 0.7307, 0.7306, 0.7302, 0.7298, 0.7298, 0.7286, 0.7285,
         0.7283, 0.7280, 0.7278, 0.7276, 0.7272, 0.7269, 0.7268, 0.7268, 0.7260,
         0.7259, 0.7257, 0.7256, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7680, 0.7521, 0.7503, 0.7471, 0.7455, 0.7444, 0.7439, 0.7405, 0.7394,
         0.7383, 0.7376, 0.7371, 0.7369, 0.7366, 0.7363, 0.7361, 0.7354, 0.7344,
         0.7331, 0.7328, 0.7326, 0.7326, 0.7323, 0.7323, 0.7321, 0.7316, 0.7312,
         0.7312, 0.7310, 0.7309, 0.7305, 0.7303, 0.7301, 0.7300, 0.7298, 0.7296,
         0.7290, 0.7289, 0.7278, 0.7278, 0.7277, 0.7276, 0.7274, 0.7273, 0.7270,
         0.7263, 0.7262, 0.7261, 0.7258, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7642, 0.7528, 0.7482, 0.7474, 0.7445, 0.7437, 0.7429, 0.7419, 0.7392,
         0.7390, 0.7384, 0.7383, 0.7376, 0.7374, 0.7367, 0.7353, 0.7336, 0.7335,
         0.7332, 0.7324, 0.7320, 0.7316, 0.7314, 0.7313, 0.7312, 0.7308, 0.7306,
         0.7305, 0.7305, 0.7304, 0.7304, 0.7301, 0.7291, 0.7290, 0.7288, 0.7284,
         0.7283, 0.7276, 0.7272, 0.7270, 0.7270, 0.7269, 0.7262, 0.7260, 0.7256,
         0.7254, 0.7253, 0.7252, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7664, 0.7536, 0.7499, 0.7461, 0.7459, 0.7454, 0.7441, 0.7440, 0.7401,
         0.7400, 0.7381, 0.7374, 0.7373, 0.7372, 0.7368, 0.7365, 0.7362, 0.7356,
         0.7345, 0.7343, 0.7337, 0.7317, 0.7317, 0.7316, 0.7311, 0.7311, 0.7309,
         0.7309, 0.7304, 0.7301, 0.7299, 0.7298, 0.7292, 0.7292, 0.7286, 0.7282,
         0.7281, 0.7278, 0.7276, 0.7275, 0.7268, 0.7261, 0.7261, 0.7260, 0.7258,
         0.7258, 0.7257, 0.7257, 0.7256, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7623, 0.7514, 0.7500, 0.7466, 0.7456, 0.7440, 0.7440, 0.7423, 0.7403,
         0.7392, 0.7391, 0.7389, 0.7389, 0.7384, 0.7373, 0.7365, 0.7349, 0.7343,
         0.7337, 0.7332, 0.7330, 0.7330, 0.7325, 0.7317, 0.7316, 0.7314, 0.7313,
         0.7313, 0.7309, 0.7306, 0.7305, 0.7302, 0.7298, 0.7296, 0.7293, 0.7288,
         0.7286, 0.7278, 0.7276, 0.7272, 0.7271, 0.7267, 0.7265, 0.7261, 0.7260,
         0.7257, 0.7256, 0.7254, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7587, 0.7522, 0.7488, 0.7478, 0.7460, 0.7435, 0.7433, 0.7416, 0.7402,
         0.7393, 0.7388, 0.7385, 0.7371, 0.7365, 0.7361, 0.7360, 0.7359, 0.7352,
         0.7350, 0.7348, 0.7334, 0.7324, 0.7323, 0.7322, 0.7312, 0.7311, 0.7309,
         0.7308, 0.7307, 0.7304, 0.7301, 0.7301, 0.7300, 0.7296, 0.7296, 0.7289,
         0.7284, 0.7283, 0.7281, 0.7280, 0.7277, 0.7274, 0.7271, 0.7271, 0.7267,
         0.7266, 0.7265, 0.7265, 0.7265, 0.7262]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7683, 0.7520, 0.7497, 0.7460, 0.7452, 0.7446, 0.7438, 0.7423, 0.7417,
         0.7384, 0.7381, 0.7375, 0.7372, 0.7371, 0.7370, 0.7363, 0.7359, 0.7354,
         0.7349, 0.7342, 0.7337, 0.7325, 0.7324, 0.7323, 0.7323, 0.7316, 0.7313,
         0.7313, 0.7308, 0.7307, 0.7306, 0.7299, 0.7295, 0.7295, 0.7293, 0.7292,
         0.7292, 0.7272, 0.7272, 0.7267, 0.7267, 0.7267, 0.7267, 0.7263, 0.7263,
         0.7260, 0.7258, 0.7256, 0.7256, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7522, 0.7499, 0.7464, 0.7456, 0.7447, 0.7444, 0.7428, 0.7394,
         0.7391, 0.7391, 0.7390, 0.7385, 0.7383, 0.7376, 0.7375, 0.7373, 0.7349,
         0.7345, 0.7342, 0.7339, 0.7337, 0.7328, 0.7328, 0.7325, 0.7321, 0.7320,
         0.7308, 0.7308, 0.7303, 0.7303, 0.7302, 0.7302, 0.7296, 0.7295, 0.7293,
         0.7291, 0.7287, 0.7285, 0.7285, 0.7283, 0.7283, 0.7282, 0.7273, 0.7263,
         0.7263, 0.7262, 0.7262, 0.7259, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7511, 0.7494, 0.7470, 0.7449, 0.7433, 0.7430, 0.7429, 0.7402,
         0.7389, 0.7378, 0.7378, 0.7377, 0.7368, 0.7364, 0.7364, 0.7364, 0.7362,
         0.7355, 0.7346, 0.7340, 0.7337, 0.7331, 0.7323, 0.7321, 0.7315, 0.7315,
         0.7312, 0.7311, 0.7307, 0.7305, 0.7303, 0.7301, 0.7301, 0.7294, 0.7283,
         0.7282, 0.7281, 0.7276, 0.7275, 0.7271, 0.7269, 0.7264, 0.7259, 0.7259,
         0.7258, 0.7257, 0.7256, 0.7254, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7649, 0.7522, 0.7504, 0.7451, 0.7447, 0.7441, 0.7427, 0.7416, 0.7409,
         0.7397, 0.7391, 0.7391, 0.7385, 0.7375, 0.7371, 0.7371, 0.7363, 0.7332,
         0.7331, 0.7327, 0.7323, 0.7321, 0.7319, 0.7315, 0.7315, 0.7314, 0.7312,
         0.7304, 0.7294, 0.7294, 0.7289, 0.7283, 0.7282, 0.7281, 0.7281, 0.7281,
         0.7279, 0.7276, 0.7275, 0.7275, 0.7273, 0.7270, 0.7269, 0.7269, 0.7267,
         0.7266, 0.7264, 0.7263, 0.7262, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7632, 0.7518, 0.7485, 0.7474, 0.7463, 0.7458, 0.7427, 0.7394, 0.7391,
         0.7388, 0.7385, 0.7383, 0.7376, 0.7375, 0.7365, 0.7350, 0.7346, 0.7339,
         0.7335, 0.7331, 0.7324, 0.7324, 0.7319, 0.7318, 0.7315, 0.7313, 0.7312,
         0.7311, 0.7306, 0.7304, 0.7302, 0.7297, 0.7293, 0.7289, 0.7289, 0.7282,
         0.7273, 0.7266, 0.7264, 0.7264, 0.7259, 0.7252, 0.7250, 0.7250, 0.7250,
         0.7247, 0.7244, 0.7244, 0.7244, 0.7244]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7655, 0.7517, 0.7486, 0.7464, 0.7460, 0.7453, 0.7432, 0.7431, 0.7385,
         0.7382, 0.7373, 0.7371, 0.7371, 0.7365, 0.7364, 0.7357, 0.7357, 0.7355,
         0.7348, 0.7348, 0.7345, 0.7345, 0.7329, 0.7326, 0.7325, 0.7317, 0.7316,
         0.7316, 0.7310, 0.7308, 0.7303, 0.7300, 0.7297, 0.7295, 0.7293, 0.7291,
         0.7290, 0.7284, 0.7281, 0.7265, 0.7261, 0.7260, 0.7260, 0.7259, 0.7259,
         0.7258, 0.7253, 0.7252, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7680, 0.7528, 0.7504, 0.7455, 0.7453, 0.7446, 0.7440, 0.7427, 0.7410,
         0.7401, 0.7389, 0.7387, 0.7387, 0.7378, 0.7373, 0.7367, 0.7366, 0.7359,
         0.7358, 0.7351, 0.7349, 0.7332, 0.7331, 0.7326, 0.7320, 0.7317, 0.7316,
         0.7315, 0.7315, 0.7312, 0.7310, 0.7309, 0.7308, 0.7304, 0.7301, 0.7295,
         0.7292, 0.7290, 0.7285, 0.7283, 0.7278, 0.7273, 0.7271, 0.7262, 0.7260,
         0.7259, 0.7259, 0.7253, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7673, 0.7505, 0.7471, 0.7461, 0.7461, 0.7448, 0.7434, 0.7417, 0.7397,
         0.7385, 0.7384, 0.7383, 0.7381, 0.7374, 0.7362, 0.7348, 0.7341, 0.7340,
         0.7337, 0.7333, 0.7332, 0.7332, 0.7328, 0.7314, 0.7314, 0.7312, 0.7309,
         0.7309, 0.7308, 0.7302, 0.7302, 0.7294, 0.7293, 0.7292, 0.7291, 0.7291,
         0.7283, 0.7280, 0.7276, 0.7275, 0.7270, 0.7269, 0.7266, 0.7265, 0.7264,
         0.7263, 0.7257, 0.7256, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7501, 0.7491, 0.7468, 0.7455, 0.7443, 0.7440, 0.7412, 0.7397,
         0.7381, 0.7377, 0.7374, 0.7369, 0.7366, 0.7365, 0.7363, 0.7362, 0.7348,
         0.7346, 0.7344, 0.7341, 0.7336, 0.7331, 0.7323, 0.7320, 0.7318, 0.7318,
         0.7313, 0.7312, 0.7312, 0.7303, 0.7301, 0.7300, 0.7300, 0.7298, 0.7286,
         0.7284, 0.7281, 0.7273, 0.7269, 0.7267, 0.7266, 0.7265, 0.7261, 0.7260,
         0.7259, 0.7259, 0.7257, 0.7256, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7701, 0.7507, 0.7501, 0.7475, 0.7468, 0.7450, 0.7447, 0.7420, 0.7389,
         0.7388, 0.7385, 0.7376, 0.7375, 0.7366, 0.7363, 0.7359, 0.7359, 0.7344,
         0.7339, 0.7335, 0.7334, 0.7329, 0.7326, 0.7325, 0.7325, 0.7315, 0.7312,
         0.7312, 0.7309, 0.7308, 0.7304, 0.7303, 0.7295, 0.7295, 0.7293, 0.7281,
         0.7277, 0.7271, 0.7268, 0.7267, 0.7266, 0.7263, 0.7255, 0.7255, 0.7255,
         0.7254, 0.7252, 0.7251, 0.7249, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7531, 0.7502, 0.7474, 0.7444, 0.7442, 0.7421, 0.7409, 0.7398,
         0.7393, 0.7383, 0.7377, 0.7375, 0.7370, 0.7370, 0.7355, 0.7353, 0.7343,
         0.7338, 0.7338, 0.7337, 0.7336, 0.7333, 0.7330, 0.7329, 0.7322, 0.7321,
         0.7316, 0.7312, 0.7305, 0.7303, 0.7301, 0.7299, 0.7298, 0.7294, 0.7288,
         0.7277, 0.7275, 0.7274, 0.7271, 0.7270, 0.7268, 0.7263, 0.7262, 0.7260,
         0.7260, 0.7254, 0.7252, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7673, 0.7514, 0.7490, 0.7472, 0.7455, 0.7428, 0.7427, 0.7420, 0.7396,
         0.7393, 0.7389, 0.7385, 0.7381, 0.7380, 0.7375, 0.7374, 0.7373, 0.7364,
         0.7358, 0.7346, 0.7330, 0.7330, 0.7317, 0.7317, 0.7316, 0.7315, 0.7311,
         0.7309, 0.7302, 0.7301, 0.7300, 0.7297, 0.7296, 0.7295, 0.7291, 0.7291,
         0.7289, 0.7289, 0.7280, 0.7278, 0.7277, 0.7276, 0.7272, 0.7264, 0.7263,
         0.7262, 0.7262, 0.7261, 0.7260, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7623, 0.7512, 0.7467, 0.7447, 0.7447, 0.7446, 0.7435, 0.7418, 0.7392,
         0.7381, 0.7371, 0.7370, 0.7369, 0.7367, 0.7364, 0.7348, 0.7344, 0.7344,
         0.7340, 0.7333, 0.7326, 0.7322, 0.7320, 0.7316, 0.7312, 0.7310, 0.7308,
         0.7305, 0.7303, 0.7300, 0.7295, 0.7295, 0.7288, 0.7285, 0.7282, 0.7278,
         0.7277, 0.7275, 0.7271, 0.7269, 0.7266, 0.7264, 0.7264, 0.7262, 0.7261,
         0.7260, 0.7259, 0.7259, 0.7257, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7502, 0.7498, 0.7475, 0.7459, 0.7442, 0.7430, 0.7418, 0.7397,
         0.7390, 0.7383, 0.7382, 0.7380, 0.7375, 0.7372, 0.7361, 0.7355, 0.7346,
         0.7343, 0.7339, 0.7333, 0.7321, 0.7319, 0.7318, 0.7316, 0.7314, 0.7310,
         0.7305, 0.7305, 0.7303, 0.7303, 0.7302, 0.7301, 0.7301, 0.7296, 0.7289,
         0.7285, 0.7278, 0.7274, 0.7273, 0.7270, 0.7269, 0.7268, 0.7266, 0.7263,
         0.7259, 0.7256, 0.7254, 0.7251, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7511, 0.7495, 0.7476, 0.7457, 0.7455, 0.7445, 0.7413, 0.7411,
         0.7387, 0.7386, 0.7385, 0.7373, 0.7369, 0.7366, 0.7366, 0.7364, 0.7363,
         0.7358, 0.7355, 0.7339, 0.7338, 0.7335, 0.7331, 0.7324, 0.7320, 0.7319,
         0.7314, 0.7312, 0.7308, 0.7305, 0.7304, 0.7301, 0.7294, 0.7289, 0.7286,
         0.7279, 0.7278, 0.7276, 0.7276, 0.7275, 0.7274, 0.7271, 0.7260, 0.7251,
         0.7249, 0.7249, 0.7248, 0.7248, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7673, 0.7532, 0.7489, 0.7478, 0.7458, 0.7456, 0.7442, 0.7416, 0.7398,
         0.7393, 0.7391, 0.7391, 0.7385, 0.7384, 0.7377, 0.7374, 0.7369, 0.7350,
         0.7347, 0.7342, 0.7340, 0.7339, 0.7326, 0.7322, 0.7320, 0.7318, 0.7314,
         0.7310, 0.7307, 0.7300, 0.7296, 0.7296, 0.7295, 0.7292, 0.7291, 0.7286,
         0.7282, 0.7278, 0.7274, 0.7272, 0.7272, 0.7268, 0.7267, 0.7266, 0.7263,
         0.7262, 0.7262, 0.7260, 0.7259, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7658, 0.7510, 0.7481, 0.7478, 0.7465, 0.7431, 0.7430, 0.7412, 0.7411,
         0.7387, 0.7379, 0.7377, 0.7372, 0.7367, 0.7351, 0.7344, 0.7344, 0.7344,
         0.7338, 0.7336, 0.7332, 0.7325, 0.7324, 0.7318, 0.7318, 0.7313, 0.7313,
         0.7313, 0.7310, 0.7310, 0.7304, 0.7303, 0.7302, 0.7302, 0.7301, 0.7296,
         0.7288, 0.7281, 0.7273, 0.7271, 0.7268, 0.7266, 0.7263, 0.7262, 0.7260,
         0.7260, 0.7255, 0.7253, 0.7251, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7653, 0.7545, 0.7500, 0.7470, 0.7452, 0.7437, 0.7410, 0.7409, 0.7399,
         0.7398, 0.7385, 0.7375, 0.7375, 0.7363, 0.7359, 0.7358, 0.7346, 0.7341,
         0.7339, 0.7328, 0.7321, 0.7314, 0.7314, 0.7314, 0.7313, 0.7305, 0.7305,
         0.7304, 0.7301, 0.7300, 0.7299, 0.7297, 0.7297, 0.7296, 0.7294, 0.7275,
         0.7275, 0.7272, 0.7269, 0.7266, 0.7265, 0.7262, 0.7261, 0.7259, 0.7259,
         0.7256, 0.7255, 0.7251, 0.7248, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7546, 0.7481, 0.7475, 0.7458, 0.7433, 0.7432, 0.7426, 0.7400,
         0.7399, 0.7387, 0.7386, 0.7380, 0.7374, 0.7369, 0.7355, 0.7354, 0.7349,
         0.7340, 0.7336, 0.7333, 0.7333, 0.7325, 0.7324, 0.7309, 0.7308, 0.7307,
         0.7307, 0.7307, 0.7306, 0.7305, 0.7304, 0.7303, 0.7292, 0.7291, 0.7287,
         0.7286, 0.7286, 0.7284, 0.7284, 0.7282, 0.7277, 0.7275, 0.7266, 0.7263,
         0.7258, 0.7256, 0.7255, 0.7254, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7676, 0.7545, 0.7480, 0.7459, 0.7453, 0.7451, 0.7443, 0.7430, 0.7406,
         0.7393, 0.7390, 0.7383, 0.7382, 0.7381, 0.7370, 0.7364, 0.7363, 0.7351,
         0.7348, 0.7334, 0.7324, 0.7319, 0.7314, 0.7312, 0.7306, 0.7306, 0.7304,
         0.7301, 0.7300, 0.7299, 0.7296, 0.7295, 0.7292, 0.7291, 0.7282, 0.7281,
         0.7279, 0.7276, 0.7275, 0.7273, 0.7263, 0.7263, 0.7262, 0.7260, 0.7258,
         0.7258, 0.7257, 0.7254, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7625, 0.7523, 0.7473, 0.7469, 0.7458, 0.7454, 0.7434, 0.7399, 0.7392,
         0.7387, 0.7378, 0.7376, 0.7374, 0.7368, 0.7366, 0.7363, 0.7357, 0.7341,
         0.7333, 0.7332, 0.7325, 0.7325, 0.7317, 0.7311, 0.7310, 0.7307, 0.7306,
         0.7304, 0.7302, 0.7302, 0.7300, 0.7294, 0.7293, 0.7293, 0.7290, 0.7285,
         0.7281, 0.7280, 0.7279, 0.7276, 0.7269, 0.7266, 0.7266, 0.7266, 0.7265,
         0.7264, 0.7257, 0.7254, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7513, 0.7486, 0.7478, 0.7462, 0.7457, 0.7435, 0.7428, 0.7418,
         0.7384, 0.7382, 0.7379, 0.7377, 0.7374, 0.7373, 0.7366, 0.7355, 0.7355,
         0.7345, 0.7332, 0.7332, 0.7321, 0.7318, 0.7317, 0.7317, 0.7315, 0.7314,
         0.7312, 0.7309, 0.7306, 0.7305, 0.7298, 0.7294, 0.7292, 0.7291, 0.7290,
         0.7288, 0.7284, 0.7281, 0.7273, 0.7270, 0.7268, 0.7262, 0.7257, 0.7256,
         0.7254, 0.7254, 0.7254, 0.7253, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7655, 0.7501, 0.7480, 0.7477, 0.7474, 0.7454, 0.7444, 0.7421, 0.7393,
         0.7381, 0.7380, 0.7378, 0.7377, 0.7373, 0.7368, 0.7358, 0.7357, 0.7357,
         0.7356, 0.7345, 0.7343, 0.7338, 0.7333, 0.7318, 0.7315, 0.7315, 0.7308,
         0.7307, 0.7306, 0.7305, 0.7304, 0.7303, 0.7303, 0.7301, 0.7294, 0.7294,
         0.7293, 0.7286, 0.7281, 0.7279, 0.7275, 0.7265, 0.7263, 0.7263, 0.7263,
         0.7257, 0.7255, 0.7249, 0.7246, 0.7245]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7676, 0.7524, 0.7481, 0.7474, 0.7467, 0.7449, 0.7444, 0.7413, 0.7401,
         0.7382, 0.7382, 0.7379, 0.7379, 0.7374, 0.7368, 0.7362, 0.7354, 0.7348,
         0.7346, 0.7344, 0.7340, 0.7340, 0.7337, 0.7328, 0.7319, 0.7315, 0.7308,
         0.7308, 0.7305, 0.7304, 0.7304, 0.7298, 0.7295, 0.7293, 0.7286, 0.7286,
         0.7281, 0.7275, 0.7274, 0.7271, 0.7269, 0.7269, 0.7267, 0.7267, 0.7265,
         0.7264, 0.7263, 0.7260, 0.7258, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7669, 0.7531, 0.7482, 0.7468, 0.7458, 0.7456, 0.7435, 0.7430, 0.7386,
         0.7385, 0.7380, 0.7375, 0.7375, 0.7373, 0.7372, 0.7370, 0.7370, 0.7364,
         0.7340, 0.7337, 0.7327, 0.7327, 0.7323, 0.7323, 0.7322, 0.7317, 0.7315,
         0.7309, 0.7309, 0.7306, 0.7303, 0.7301, 0.7300, 0.7292, 0.7289, 0.7281,
         0.7281, 0.7276, 0.7275, 0.7273, 0.7271, 0.7270, 0.7269, 0.7269, 0.7269,
         0.7267, 0.7266, 0.7262, 0.7259, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7525, 0.7509, 0.7474, 0.7452, 0.7447, 0.7442, 0.7410, 0.7405,
         0.7393, 0.7392, 0.7384, 0.7379, 0.7378, 0.7373, 0.7372, 0.7365, 0.7350,
         0.7345, 0.7344, 0.7334, 0.7332, 0.7327, 0.7326, 0.7325, 0.7323, 0.7318,
         0.7311, 0.7310, 0.7308, 0.7307, 0.7302, 0.7298, 0.7298, 0.7297, 0.7291,
         0.7286, 0.7285, 0.7284, 0.7280, 0.7273, 0.7271, 0.7270, 0.7269, 0.7267,
         0.7267, 0.7265, 0.7265, 0.7265, 0.7260]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7509, 0.7480, 0.7473, 0.7466, 0.7464, 0.7450, 0.7432, 0.7391,
         0.7380, 0.7379, 0.7376, 0.7374, 0.7373, 0.7369, 0.7369, 0.7359, 0.7354,
         0.7344, 0.7343, 0.7333, 0.7331, 0.7328, 0.7321, 0.7317, 0.7315, 0.7310,
         0.7309, 0.7309, 0.7308, 0.7307, 0.7306, 0.7297, 0.7288, 0.7287, 0.7287,
         0.7287, 0.7279, 0.7277, 0.7277, 0.7270, 0.7270, 0.7262, 0.7262, 0.7259,
         0.7259, 0.7258, 0.7257, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7657, 0.7503, 0.7467, 0.7444, 0.7440, 0.7437, 0.7428, 0.7426, 0.7395,
         0.7391, 0.7374, 0.7374, 0.7373, 0.7373, 0.7372, 0.7368, 0.7351, 0.7348,
         0.7346, 0.7340, 0.7332, 0.7324, 0.7323, 0.7322, 0.7321, 0.7312, 0.7309,
         0.7306, 0.7305, 0.7304, 0.7304, 0.7303, 0.7290, 0.7278, 0.7278, 0.7277,
         0.7274, 0.7273, 0.7270, 0.7270, 0.7269, 0.7267, 0.7267, 0.7265, 0.7260,
         0.7257, 0.7256, 0.7254, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7658, 0.7519, 0.7484, 0.7472, 0.7462, 0.7438, 0.7436, 0.7402, 0.7400,
         0.7394, 0.7383, 0.7383, 0.7382, 0.7377, 0.7374, 0.7355, 0.7354, 0.7339,
         0.7328, 0.7322, 0.7321, 0.7318, 0.7315, 0.7315, 0.7314, 0.7311, 0.7310,
         0.7310, 0.7306, 0.7306, 0.7306, 0.7305, 0.7304, 0.7302, 0.7302, 0.7301,
         0.7294, 0.7291, 0.7289, 0.7284, 0.7281, 0.7280, 0.7279, 0.7270, 0.7264,
         0.7264, 0.7263, 0.7261, 0.7260, 0.7260]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7516, 0.7485, 0.7479, 0.7464, 0.7463, 0.7440, 0.7429, 0.7392,
         0.7385, 0.7378, 0.7376, 0.7372, 0.7369, 0.7369, 0.7356, 0.7356, 0.7350,
         0.7350, 0.7343, 0.7334, 0.7330, 0.7328, 0.7327, 0.7323, 0.7317, 0.7317,
         0.7317, 0.7316, 0.7314, 0.7314, 0.7312, 0.7297, 0.7295, 0.7289, 0.7285,
         0.7283, 0.7281, 0.7280, 0.7277, 0.7275, 0.7272, 0.7271, 0.7270, 0.7269,
         0.7264, 0.7263, 0.7263, 0.7259, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7646, 0.7522, 0.7495, 0.7468, 0.7458, 0.7454, 0.7452, 0.7409, 0.7391,
         0.7389, 0.7387, 0.7386, 0.7378, 0.7372, 0.7371, 0.7363, 0.7361, 0.7358,
         0.7345, 0.7345, 0.7343, 0.7339, 0.7338, 0.7334, 0.7334, 0.7326, 0.7320,
         0.7320, 0.7311, 0.7304, 0.7303, 0.7302, 0.7299, 0.7294, 0.7286, 0.7284,
         0.7281, 0.7279, 0.7278, 0.7273, 0.7272, 0.7272, 0.7268, 0.7267, 0.7266,
         0.7263, 0.7261, 0.7261, 0.7259, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7698, 0.7529, 0.7529, 0.7467, 0.7463, 0.7451, 0.7444, 0.7444, 0.7413,
         0.7392, 0.7391, 0.7391, 0.7384, 0.7368, 0.7366, 0.7360, 0.7356, 0.7350,
         0.7349, 0.7337, 0.7336, 0.7332, 0.7330, 0.7323, 0.7319, 0.7317, 0.7315,
         0.7311, 0.7308, 0.7304, 0.7296, 0.7295, 0.7294, 0.7294, 0.7293, 0.7287,
         0.7286, 0.7282, 0.7281, 0.7274, 0.7271, 0.7270, 0.7267, 0.7263, 0.7261,
         0.7260, 0.7260, 0.7259, 0.7258, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7503, 0.7494, 0.7480, 0.7463, 0.7446, 0.7431, 0.7426, 0.7397,
         0.7389, 0.7387, 0.7375, 0.7372, 0.7368, 0.7366, 0.7363, 0.7352, 0.7350,
         0.7349, 0.7337, 0.7335, 0.7333, 0.7326, 0.7323, 0.7316, 0.7316, 0.7313,
         0.7309, 0.7299, 0.7299, 0.7294, 0.7292, 0.7287, 0.7287, 0.7281, 0.7279,
         0.7279, 0.7278, 0.7275, 0.7275, 0.7272, 0.7271, 0.7261, 0.7258, 0.7257,
         0.7255, 0.7253, 0.7253, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7643, 0.7526, 0.7477, 0.7473, 0.7465, 0.7465, 0.7447, 0.7401, 0.7388,
         0.7387, 0.7385, 0.7383, 0.7380, 0.7378, 0.7367, 0.7362, 0.7356, 0.7354,
         0.7341, 0.7330, 0.7318, 0.7317, 0.7316, 0.7316, 0.7315, 0.7312, 0.7312,
         0.7308, 0.7302, 0.7299, 0.7298, 0.7298, 0.7286, 0.7286, 0.7283, 0.7282,
         0.7278, 0.7276, 0.7273, 0.7272, 0.7272, 0.7271, 0.7269, 0.7269, 0.7269,
         0.7268, 0.7265, 0.7258, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7519, 0.7504, 0.7490, 0.7460, 0.7447, 0.7441, 0.7425, 0.7396,
         0.7385, 0.7379, 0.7377, 0.7376, 0.7373, 0.7368, 0.7364, 0.7359, 0.7342,
         0.7338, 0.7336, 0.7335, 0.7334, 0.7330, 0.7330, 0.7329, 0.7321, 0.7318,
         0.7317, 0.7314, 0.7311, 0.7310, 0.7305, 0.7305, 0.7303, 0.7298, 0.7294,
         0.7291, 0.7286, 0.7275, 0.7272, 0.7270, 0.7270, 0.7270, 0.7269, 0.7266,
         0.7266, 0.7261, 0.7259, 0.7259, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7664, 0.7525, 0.7483, 0.7474, 0.7469, 0.7448, 0.7428, 0.7425, 0.7399,
         0.7397, 0.7394, 0.7383, 0.7379, 0.7376, 0.7364, 0.7358, 0.7356, 0.7355,
         0.7353, 0.7348, 0.7345, 0.7334, 0.7332, 0.7325, 0.7323, 0.7320, 0.7316,
         0.7316, 0.7316, 0.7310, 0.7310, 0.7299, 0.7299, 0.7296, 0.7294, 0.7292,
         0.7286, 0.7281, 0.7278, 0.7276, 0.7275, 0.7271, 0.7266, 0.7265, 0.7261,
         0.7261, 0.7258, 0.7257, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7505, 0.7498, 0.7478, 0.7462, 0.7456, 0.7444, 0.7421, 0.7399,
         0.7398, 0.7390, 0.7385, 0.7383, 0.7381, 0.7381, 0.7378, 0.7376, 0.7364,
         0.7347, 0.7344, 0.7338, 0.7332, 0.7328, 0.7326, 0.7321, 0.7318, 0.7316,
         0.7311, 0.7311, 0.7310, 0.7304, 0.7303, 0.7300, 0.7298, 0.7296, 0.7295,
         0.7293, 0.7289, 0.7285, 0.7285, 0.7282, 0.7280, 0.7280, 0.7277, 0.7265,
         0.7262, 0.7260, 0.7258, 0.7253, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7523, 0.7468, 0.7461, 0.7457, 0.7454, 0.7428, 0.7413, 0.7399,
         0.7394, 0.7387, 0.7366, 0.7363, 0.7358, 0.7351, 0.7345, 0.7342, 0.7341,
         0.7341, 0.7335, 0.7333, 0.7327, 0.7326, 0.7325, 0.7323, 0.7322, 0.7313,
         0.7313, 0.7309, 0.7302, 0.7300, 0.7300, 0.7296, 0.7296, 0.7292, 0.7284,
         0.7283, 0.7280, 0.7277, 0.7276, 0.7275, 0.7273, 0.7273, 0.7272, 0.7265,
         0.7264, 0.7263, 0.7259, 0.7256, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7688, 0.7525, 0.7466, 0.7451, 0.7448, 0.7440, 0.7430, 0.7417, 0.7401,
         0.7400, 0.7380, 0.7378, 0.7376, 0.7375, 0.7372, 0.7367, 0.7361, 0.7346,
         0.7339, 0.7339, 0.7329, 0.7326, 0.7325, 0.7323, 0.7322, 0.7318, 0.7311,
         0.7309, 0.7300, 0.7300, 0.7298, 0.7292, 0.7282, 0.7278, 0.7276, 0.7275,
         0.7274, 0.7272, 0.7272, 0.7270, 0.7270, 0.7268, 0.7264, 0.7263, 0.7258,
         0.7257, 0.7257, 0.7257, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7680, 0.7529, 0.7494, 0.7484, 0.7466, 0.7463, 0.7435, 0.7420, 0.7398,
         0.7387, 0.7387, 0.7378, 0.7376, 0.7374, 0.7373, 0.7372, 0.7361, 0.7356,
         0.7348, 0.7339, 0.7327, 0.7326, 0.7320, 0.7317, 0.7316, 0.7314, 0.7313,
         0.7313, 0.7311, 0.7310, 0.7305, 0.7301, 0.7300, 0.7299, 0.7297, 0.7296,
         0.7292, 0.7287, 0.7285, 0.7283, 0.7282, 0.7275, 0.7273, 0.7269, 0.7265,
         0.7262, 0.7262, 0.7258, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7504, 0.7492, 0.7479, 0.7460, 0.7444, 0.7437, 0.7431, 0.7396,
         0.7394, 0.7385, 0.7384, 0.7381, 0.7371, 0.7371, 0.7368, 0.7364, 0.7358,
         0.7341, 0.7336, 0.7329, 0.7329, 0.7321, 0.7321, 0.7318, 0.7316, 0.7315,
         0.7311, 0.7303, 0.7303, 0.7302, 0.7298, 0.7297, 0.7290, 0.7287, 0.7286,
         0.7282, 0.7279, 0.7277, 0.7275, 0.7273, 0.7272, 0.7272, 0.7269, 0.7267,
         0.7263, 0.7259, 0.7257, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7643, 0.7519, 0.7500, 0.7483, 0.7453, 0.7451, 0.7436, 0.7417, 0.7410,
         0.7392, 0.7390, 0.7381, 0.7378, 0.7378, 0.7377, 0.7375, 0.7364, 0.7347,
         0.7342, 0.7334, 0.7333, 0.7333, 0.7332, 0.7328, 0.7320, 0.7319, 0.7316,
         0.7309, 0.7309, 0.7308, 0.7307, 0.7298, 0.7297, 0.7296, 0.7293, 0.7290,
         0.7287, 0.7280, 0.7278, 0.7275, 0.7270, 0.7266, 0.7265, 0.7263, 0.7262,
         0.7262, 0.7260, 0.7258, 0.7256, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7657, 0.7503, 0.7494, 0.7475, 0.7471, 0.7460, 0.7436, 0.7409, 0.7398,
         0.7397, 0.7389, 0.7382, 0.7380, 0.7379, 0.7371, 0.7366, 0.7361, 0.7356,
         0.7354, 0.7344, 0.7332, 0.7326, 0.7323, 0.7318, 0.7318, 0.7318, 0.7316,
         0.7307, 0.7307, 0.7305, 0.7297, 0.7297, 0.7297, 0.7294, 0.7286, 0.7284,
         0.7282, 0.7278, 0.7274, 0.7271, 0.7268, 0.7265, 0.7264, 0.7264, 0.7262,
         0.7261, 0.7257, 0.7253, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7501, 0.7481, 0.7464, 0.7462, 0.7452, 0.7437, 0.7421, 0.7382,
         0.7378, 0.7374, 0.7373, 0.7369, 0.7367, 0.7365, 0.7354, 0.7354, 0.7350,
         0.7348, 0.7347, 0.7337, 0.7333, 0.7329, 0.7325, 0.7321, 0.7318, 0.7317,
         0.7314, 0.7312, 0.7307, 0.7304, 0.7303, 0.7293, 0.7293, 0.7292, 0.7292,
         0.7288, 0.7287, 0.7286, 0.7281, 0.7278, 0.7272, 0.7271, 0.7270, 0.7269,
         0.7264, 0.7263, 0.7260, 0.7259, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7680, 0.7504, 0.7467, 0.7462, 0.7459, 0.7451, 0.7448, 0.7428, 0.7400,
         0.7384, 0.7382, 0.7372, 0.7371, 0.7371, 0.7358, 0.7353, 0.7343, 0.7337,
         0.7336, 0.7333, 0.7332, 0.7328, 0.7328, 0.7328, 0.7326, 0.7319, 0.7317,
         0.7316, 0.7316, 0.7312, 0.7312, 0.7298, 0.7297, 0.7289, 0.7285, 0.7284,
         0.7279, 0.7279, 0.7271, 0.7264, 0.7264, 0.7263, 0.7262, 0.7260, 0.7259,
         0.7259, 0.7258, 0.7256, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7651, 0.7519, 0.7472, 0.7472, 0.7465, 0.7441, 0.7432, 0.7423, 0.7406,
         0.7395, 0.7385, 0.7375, 0.7373, 0.7371, 0.7370, 0.7358, 0.7354, 0.7352,
         0.7350, 0.7336, 0.7324, 0.7323, 0.7322, 0.7319, 0.7317, 0.7311, 0.7307,
         0.7304, 0.7303, 0.7300, 0.7299, 0.7292, 0.7290, 0.7284, 0.7282, 0.7281,
         0.7276, 0.7276, 0.7271, 0.7269, 0.7269, 0.7268, 0.7262, 0.7261, 0.7257,
         0.7255, 0.7255, 0.7252, 0.7250, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7619, 0.7522, 0.7469, 0.7465, 0.7457, 0.7451, 0.7445, 0.7394, 0.7384,
         0.7382, 0.7381, 0.7380, 0.7380, 0.7379, 0.7370, 0.7364, 0.7363, 0.7354,
         0.7346, 0.7343, 0.7330, 0.7329, 0.7328, 0.7316, 0.7315, 0.7315, 0.7311,
         0.7308, 0.7307, 0.7300, 0.7298, 0.7297, 0.7295, 0.7295, 0.7287, 0.7285,
         0.7281, 0.7281, 0.7278, 0.7276, 0.7275, 0.7274, 0.7273, 0.7268, 0.7266,
         0.7264, 0.7264, 0.7261, 0.7259, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7626, 0.7525, 0.7478, 0.7469, 0.7458, 0.7451, 0.7439, 0.7413, 0.7403,
         0.7397, 0.7389, 0.7384, 0.7379, 0.7377, 0.7363, 0.7350, 0.7350, 0.7346,
         0.7328, 0.7326, 0.7323, 0.7317, 0.7316, 0.7314, 0.7314, 0.7313, 0.7312,
         0.7310, 0.7303, 0.7295, 0.7289, 0.7283, 0.7283, 0.7282, 0.7281, 0.7275,
         0.7275, 0.7275, 0.7273, 0.7273, 0.7271, 0.7270, 0.7265, 0.7264, 0.7262,
         0.7259, 0.7257, 0.7257, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7658, 0.7523, 0.7499, 0.7462, 0.7456, 0.7456, 0.7411, 0.7410, 0.7389,
         0.7384, 0.7381, 0.7381, 0.7379, 0.7374, 0.7371, 0.7365, 0.7357, 0.7352,
         0.7336, 0.7330, 0.7319, 0.7317, 0.7317, 0.7316, 0.7315, 0.7314, 0.7313,
         0.7312, 0.7306, 0.7306, 0.7304, 0.7302, 0.7302, 0.7292, 0.7291, 0.7290,
         0.7288, 0.7282, 0.7278, 0.7277, 0.7275, 0.7273, 0.7270, 0.7270, 0.7267,
         0.7265, 0.7262, 0.7259, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7654, 0.7508, 0.7490, 0.7463, 0.7458, 0.7458, 0.7426, 0.7420, 0.7400,
         0.7383, 0.7383, 0.7379, 0.7377, 0.7365, 0.7365, 0.7363, 0.7355, 0.7344,
         0.7336, 0.7330, 0.7327, 0.7325, 0.7323, 0.7321, 0.7318, 0.7315, 0.7314,
         0.7313, 0.7313, 0.7312, 0.7311, 0.7296, 0.7294, 0.7290, 0.7289, 0.7287,
         0.7282, 0.7280, 0.7278, 0.7275, 0.7274, 0.7271, 0.7270, 0.7260, 0.7258,
         0.7257, 0.7256, 0.7255, 0.7254, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7517, 0.7498, 0.7480, 0.7447, 0.7437, 0.7434, 0.7408, 0.7407,
         0.7398, 0.7395, 0.7385, 0.7381, 0.7380, 0.7369, 0.7369, 0.7366, 0.7363,
         0.7359, 0.7344, 0.7343, 0.7338, 0.7332, 0.7326, 0.7325, 0.7323, 0.7316,
         0.7313, 0.7312, 0.7307, 0.7306, 0.7305, 0.7304, 0.7300, 0.7299, 0.7283,
         0.7280, 0.7278, 0.7276, 0.7275, 0.7274, 0.7271, 0.7271, 0.7267, 0.7266,
         0.7265, 0.7265, 0.7261, 0.7254, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7627, 0.7529, 0.7493, 0.7470, 0.7468, 0.7438, 0.7432, 0.7412, 0.7405,
         0.7389, 0.7388, 0.7382, 0.7373, 0.7365, 0.7365, 0.7365, 0.7364, 0.7350,
         0.7345, 0.7343, 0.7341, 0.7333, 0.7331, 0.7325, 0.7324, 0.7321, 0.7320,
         0.7309, 0.7305, 0.7304, 0.7302, 0.7297, 0.7297, 0.7292, 0.7289, 0.7287,
         0.7284, 0.7273, 0.7261, 0.7258, 0.7257, 0.7255, 0.7254, 0.7254, 0.7249,
         0.7249, 0.7248, 0.7247, 0.7246, 0.7245]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7533, 0.7486, 0.7464, 0.7449, 0.7443, 0.7440, 0.7409, 0.7389,
         0.7385, 0.7383, 0.7383, 0.7382, 0.7381, 0.7372, 0.7364, 0.7362, 0.7353,
         0.7349, 0.7346, 0.7340, 0.7332, 0.7331, 0.7331, 0.7329, 0.7326, 0.7320,
         0.7311, 0.7311, 0.7308, 0.7306, 0.7306, 0.7304, 0.7291, 0.7287, 0.7284,
         0.7281, 0.7281, 0.7275, 0.7271, 0.7270, 0.7265, 0.7265, 0.7264, 0.7260,
         0.7258, 0.7256, 0.7256, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7648, 0.7519, 0.7491, 0.7458, 0.7456, 0.7453, 0.7431, 0.7414, 0.7392,
         0.7391, 0.7383, 0.7374, 0.7372, 0.7370, 0.7369, 0.7358, 0.7356, 0.7347,
         0.7340, 0.7331, 0.7331, 0.7330, 0.7323, 0.7322, 0.7318, 0.7316, 0.7315,
         0.7315, 0.7310, 0.7302, 0.7302, 0.7302, 0.7300, 0.7300, 0.7293, 0.7289,
         0.7289, 0.7283, 0.7279, 0.7277, 0.7273, 0.7272, 0.7269, 0.7266, 0.7263,
         0.7263, 0.7255, 0.7253, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7529, 0.7471, 0.7463, 0.7462, 0.7456, 0.7443, 0.7401, 0.7396,
         0.7394, 0.7391, 0.7381, 0.7376, 0.7374, 0.7373, 0.7370, 0.7352, 0.7343,
         0.7343, 0.7337, 0.7325, 0.7323, 0.7316, 0.7315, 0.7315, 0.7307, 0.7307,
         0.7307, 0.7300, 0.7299, 0.7299, 0.7297, 0.7295, 0.7292, 0.7290, 0.7284,
         0.7278, 0.7277, 0.7277, 0.7267, 0.7265, 0.7262, 0.7260, 0.7258, 0.7257,
         0.7255, 0.7254, 0.7253, 0.7247, 0.7245]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7516, 0.7477, 0.7474, 0.7456, 0.7448, 0.7434, 0.7420, 0.7392,
         0.7386, 0.7386, 0.7383, 0.7371, 0.7369, 0.7358, 0.7357, 0.7351, 0.7334,
         0.7332, 0.7330, 0.7326, 0.7318, 0.7317, 0.7316, 0.7316, 0.7312, 0.7308,
         0.7308, 0.7308, 0.7307, 0.7305, 0.7304, 0.7302, 0.7292, 0.7282, 0.7281,
         0.7279, 0.7276, 0.7275, 0.7275, 0.7272, 0.7269, 0.7266, 0.7260, 0.7259,
         0.7259, 0.7258, 0.7257, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7685, 0.7507, 0.7483, 0.7475, 0.7472, 0.7455, 0.7439, 0.7411, 0.7397,
         0.7387, 0.7380, 0.7374, 0.7369, 0.7364, 0.7363, 0.7355, 0.7351, 0.7337,
         0.7337, 0.7336, 0.7335, 0.7330, 0.7325, 0.7323, 0.7321, 0.7316, 0.7315,
         0.7315, 0.7314, 0.7313, 0.7308, 0.7306, 0.7304, 0.7303, 0.7297, 0.7295,
         0.7287, 0.7283, 0.7275, 0.7268, 0.7268, 0.7265, 0.7258, 0.7258, 0.7256,
         0.7256, 0.7252, 0.7252, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7695, 0.7519, 0.7502, 0.7474, 0.7471, 0.7448, 0.7428, 0.7425, 0.7397,
         0.7386, 0.7385, 0.7382, 0.7381, 0.7379, 0.7376, 0.7375, 0.7372, 0.7356,
         0.7338, 0.7335, 0.7329, 0.7327, 0.7325, 0.7313, 0.7313, 0.7312, 0.7310,
         0.7309, 0.7304, 0.7303, 0.7301, 0.7297, 0.7296, 0.7296, 0.7291, 0.7289,
         0.7284, 0.7281, 0.7277, 0.7273, 0.7272, 0.7272, 0.7266, 0.7266, 0.7264,
         0.7262, 0.7262, 0.7253, 0.7252, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7678, 0.7518, 0.7484, 0.7479, 0.7452, 0.7446, 0.7444, 0.7424, 0.7392,
         0.7390, 0.7385, 0.7373, 0.7368, 0.7368, 0.7364, 0.7355, 0.7348, 0.7346,
         0.7345, 0.7336, 0.7330, 0.7325, 0.7323, 0.7320, 0.7320, 0.7317, 0.7312,
         0.7311, 0.7311, 0.7310, 0.7308, 0.7306, 0.7302, 0.7300, 0.7298, 0.7298,
         0.7284, 0.7280, 0.7271, 0.7266, 0.7264, 0.7262, 0.7259, 0.7257, 0.7255,
         0.7255, 0.7253, 0.7252, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7623, 0.7536, 0.7487, 0.7473, 0.7458, 0.7442, 0.7440, 0.7412, 0.7395,
         0.7385, 0.7377, 0.7377, 0.7375, 0.7375, 0.7370, 0.7361, 0.7355, 0.7344,
         0.7334, 0.7331, 0.7325, 0.7322, 0.7319, 0.7316, 0.7314, 0.7313, 0.7312,
         0.7311, 0.7309, 0.7309, 0.7304, 0.7302, 0.7295, 0.7293, 0.7290, 0.7290,
         0.7289, 0.7281, 0.7277, 0.7275, 0.7275, 0.7274, 0.7269, 0.7264, 0.7260,
         0.7259, 0.7257, 0.7257, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7528, 0.7472, 0.7464, 0.7464, 0.7452, 0.7444, 0.7399, 0.7398,
         0.7388, 0.7387, 0.7379, 0.7372, 0.7369, 0.7365, 0.7354, 0.7346, 0.7340,
         0.7335, 0.7327, 0.7322, 0.7319, 0.7318, 0.7315, 0.7315, 0.7313, 0.7313,
         0.7311, 0.7307, 0.7306, 0.7301, 0.7299, 0.7298, 0.7283, 0.7282, 0.7280,
         0.7275, 0.7274, 0.7273, 0.7272, 0.7271, 0.7269, 0.7267, 0.7261, 0.7259,
         0.7258, 0.7256, 0.7256, 0.7247, 0.7244]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7657, 0.7517, 0.7498, 0.7474, 0.7463, 0.7450, 0.7439, 0.7409, 0.7400,
         0.7393, 0.7382, 0.7382, 0.7377, 0.7377, 0.7373, 0.7359, 0.7355, 0.7347,
         0.7341, 0.7332, 0.7332, 0.7322, 0.7321, 0.7319, 0.7317, 0.7317, 0.7314,
         0.7312, 0.7312, 0.7303, 0.7301, 0.7299, 0.7295, 0.7292, 0.7289, 0.7288,
         0.7282, 0.7281, 0.7274, 0.7270, 0.7267, 0.7263, 0.7263, 0.7258, 0.7251,
         0.7251, 0.7250, 0.7247, 0.7245, 0.7245]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7503, 0.7488, 0.7471, 0.7461, 0.7453, 0.7430, 0.7418, 0.7388,
         0.7384, 0.7378, 0.7378, 0.7375, 0.7373, 0.7370, 0.7356, 0.7349, 0.7348,
         0.7345, 0.7341, 0.7340, 0.7327, 0.7327, 0.7323, 0.7318, 0.7309, 0.7308,
         0.7307, 0.7307, 0.7304, 0.7300, 0.7299, 0.7295, 0.7292, 0.7288, 0.7286,
         0.7281, 0.7277, 0.7276, 0.7269, 0.7267, 0.7265, 0.7265, 0.7262, 0.7261,
         0.7256, 0.7256, 0.7253, 0.7253, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7652, 0.7490, 0.7473, 0.7470, 0.7459, 0.7454, 0.7443, 0.7430, 0.7399,
         0.7396, 0.7387, 0.7380, 0.7365, 0.7364, 0.7360, 0.7357, 0.7357, 0.7354,
         0.7353, 0.7343, 0.7331, 0.7331, 0.7326, 0.7325, 0.7324, 0.7321, 0.7316,
         0.7312, 0.7306, 0.7304, 0.7302, 0.7302, 0.7294, 0.7292, 0.7290, 0.7288,
         0.7283, 0.7282, 0.7280, 0.7276, 0.7270, 0.7268, 0.7265, 0.7263, 0.7261,
         0.7261, 0.7259, 0.7256, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7654, 0.7507, 0.7501, 0.7474, 0.7452, 0.7437, 0.7425, 0.7419, 0.7398,
         0.7396, 0.7395, 0.7393, 0.7384, 0.7383, 0.7377, 0.7368, 0.7366, 0.7357,
         0.7352, 0.7349, 0.7333, 0.7329, 0.7329, 0.7321, 0.7320, 0.7314, 0.7311,
         0.7309, 0.7309, 0.7306, 0.7306, 0.7306, 0.7297, 0.7294, 0.7288, 0.7287,
         0.7284, 0.7279, 0.7277, 0.7272, 0.7272, 0.7269, 0.7269, 0.7267, 0.7263,
         0.7263, 0.7260, 0.7258, 0.7257, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7661, 0.7524, 0.7469, 0.7462, 0.7454, 0.7440, 0.7430, 0.7407, 0.7400,
         0.7399, 0.7395, 0.7395, 0.7384, 0.7372, 0.7369, 0.7369, 0.7367, 0.7346,
         0.7344, 0.7340, 0.7338, 0.7327, 0.7322, 0.7321, 0.7318, 0.7316, 0.7312,
         0.7309, 0.7307, 0.7305, 0.7303, 0.7303, 0.7302, 0.7294, 0.7285, 0.7282,
         0.7277, 0.7273, 0.7273, 0.7272, 0.7269, 0.7266, 0.7262, 0.7262, 0.7261,
         0.7261, 0.7260, 0.7257, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7634, 0.7504, 0.7485, 0.7478, 0.7470, 0.7444, 0.7416, 0.7401, 0.7401,
         0.7394, 0.7389, 0.7388, 0.7382, 0.7379, 0.7375, 0.7371, 0.7358, 0.7351,
         0.7341, 0.7338, 0.7330, 0.7324, 0.7324, 0.7322, 0.7319, 0.7318, 0.7316,
         0.7312, 0.7312, 0.7311, 0.7305, 0.7303, 0.7300, 0.7298, 0.7290, 0.7289,
         0.7279, 0.7276, 0.7273, 0.7272, 0.7269, 0.7269, 0.7268, 0.7266, 0.7260,
         0.7259, 0.7258, 0.7251, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7655, 0.7521, 0.7488, 0.7467, 0.7454, 0.7450, 0.7437, 0.7426, 0.7402,
         0.7399, 0.7397, 0.7395, 0.7388, 0.7381, 0.7378, 0.7375, 0.7345, 0.7340,
         0.7340, 0.7333, 0.7331, 0.7320, 0.7317, 0.7314, 0.7312, 0.7311, 0.7310,
         0.7302, 0.7297, 0.7294, 0.7290, 0.7289, 0.7288, 0.7286, 0.7281, 0.7279,
         0.7278, 0.7277, 0.7275, 0.7274, 0.7274, 0.7272, 0.7269, 0.7263, 0.7259,
         0.7259, 0.7257, 0.7253, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7657, 0.7534, 0.7487, 0.7480, 0.7455, 0.7445, 0.7431, 0.7414, 0.7396,
         0.7391, 0.7376, 0.7374, 0.7372, 0.7372, 0.7368, 0.7368, 0.7357, 0.7350,
         0.7334, 0.7329, 0.7320, 0.7320, 0.7319, 0.7318, 0.7316, 0.7312, 0.7311,
         0.7311, 0.7310, 0.7307, 0.7304, 0.7304, 0.7302, 0.7301, 0.7298, 0.7295,
         0.7291, 0.7290, 0.7275, 0.7272, 0.7271, 0.7270, 0.7270, 0.7270, 0.7270,
         0.7267, 0.7264, 0.7259, 0.7253, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7499, 0.7496, 0.7478, 0.7465, 0.7448, 0.7422, 0.7407, 0.7404,
         0.7392, 0.7386, 0.7374, 0.7373, 0.7372, 0.7367, 0.7365, 0.7356, 0.7354,
         0.7342, 0.7342, 0.7336, 0.7328, 0.7326, 0.7323, 0.7315, 0.7314, 0.7313,
         0.7312, 0.7311, 0.7306, 0.7302, 0.7300, 0.7299, 0.7296, 0.7292, 0.7291,
         0.7290, 0.7289, 0.7283, 0.7282, 0.7275, 0.7274, 0.7273, 0.7269, 0.7262,
         0.7261, 0.7259, 0.7256, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7690, 0.7524, 0.7505, 0.7498, 0.7450, 0.7444, 0.7428, 0.7426, 0.7412,
         0.7393, 0.7388, 0.7382, 0.7375, 0.7373, 0.7372, 0.7370, 0.7354, 0.7346,
         0.7344, 0.7335, 0.7333, 0.7328, 0.7325, 0.7323, 0.7322, 0.7321, 0.7319,
         0.7318, 0.7314, 0.7311, 0.7308, 0.7304, 0.7301, 0.7298, 0.7287, 0.7287,
         0.7286, 0.7279, 0.7272, 0.7268, 0.7266, 0.7265, 0.7264, 0.7263, 0.7262,
         0.7259, 0.7255, 0.7252, 0.7250, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7515, 0.7483, 0.7480, 0.7453, 0.7451, 0.7431, 0.7430, 0.7396,
         0.7383, 0.7381, 0.7375, 0.7372, 0.7371, 0.7367, 0.7366, 0.7357, 0.7351,
         0.7345, 0.7344, 0.7332, 0.7332, 0.7332, 0.7321, 0.7316, 0.7313, 0.7309,
         0.7309, 0.7308, 0.7307, 0.7304, 0.7297, 0.7295, 0.7292, 0.7287, 0.7281,
         0.7275, 0.7271, 0.7271, 0.7270, 0.7269, 0.7269, 0.7264, 0.7263, 0.7259,
         0.7254, 0.7254, 0.7251, 0.7249, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7643, 0.7507, 0.7477, 0.7472, 0.7449, 0.7438, 0.7431, 0.7413, 0.7397,
         0.7385, 0.7375, 0.7373, 0.7371, 0.7368, 0.7366, 0.7365, 0.7359, 0.7356,
         0.7351, 0.7350, 0.7340, 0.7331, 0.7330, 0.7323, 0.7322, 0.7321, 0.7320,
         0.7316, 0.7312, 0.7308, 0.7303, 0.7301, 0.7297, 0.7289, 0.7289, 0.7279,
         0.7278, 0.7278, 0.7276, 0.7273, 0.7272, 0.7271, 0.7262, 0.7255, 0.7254,
         0.7252, 0.7250, 0.7249, 0.7249, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7681, 0.7522, 0.7471, 0.7457, 0.7455, 0.7453, 0.7430, 0.7414, 0.7399,
         0.7395, 0.7393, 0.7390, 0.7381, 0.7377, 0.7377, 0.7374, 0.7368, 0.7348,
         0.7347, 0.7331, 0.7328, 0.7326, 0.7325, 0.7324, 0.7318, 0.7315, 0.7312,
         0.7311, 0.7306, 0.7304, 0.7303, 0.7301, 0.7299, 0.7287, 0.7284, 0.7283,
         0.7281, 0.7279, 0.7276, 0.7270, 0.7270, 0.7264, 0.7262, 0.7260, 0.7258,
         0.7256, 0.7253, 0.7253, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7691, 0.7510, 0.7465, 0.7452, 0.7451, 0.7449, 0.7440, 0.7411, 0.7405,
         0.7382, 0.7381, 0.7381, 0.7379, 0.7373, 0.7367, 0.7357, 0.7351, 0.7343,
         0.7343, 0.7329, 0.7329, 0.7329, 0.7322, 0.7319, 0.7319, 0.7317, 0.7316,
         0.7315, 0.7315, 0.7312, 0.7311, 0.7311, 0.7307, 0.7305, 0.7300, 0.7300,
         0.7292, 0.7288, 0.7280, 0.7275, 0.7275, 0.7268, 0.7266, 0.7264, 0.7261,
         0.7259, 0.7258, 0.7257, 0.7257, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7676, 0.7498, 0.7467, 0.7463, 0.7455, 0.7450, 0.7443, 0.7420, 0.7385,
         0.7381, 0.7380, 0.7372, 0.7368, 0.7368, 0.7363, 0.7360, 0.7353, 0.7352,
         0.7332, 0.7331, 0.7326, 0.7325, 0.7325, 0.7321, 0.7316, 0.7309, 0.7307,
         0.7302, 0.7298, 0.7298, 0.7295, 0.7292, 0.7290, 0.7290, 0.7287, 0.7287,
         0.7282, 0.7280, 0.7279, 0.7278, 0.7277, 0.7269, 0.7269, 0.7268, 0.7267,
         0.7264, 0.7259, 0.7258, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7653, 0.7515, 0.7511, 0.7470, 0.7462, 0.7447, 0.7431, 0.7415, 0.7412,
         0.7397, 0.7393, 0.7389, 0.7376, 0.7376, 0.7368, 0.7363, 0.7349, 0.7335,
         0.7326, 0.7325, 0.7321, 0.7319, 0.7317, 0.7317, 0.7312, 0.7311, 0.7310,
         0.7310, 0.7308, 0.7307, 0.7307, 0.7307, 0.7296, 0.7294, 0.7291, 0.7291,
         0.7285, 0.7284, 0.7276, 0.7276, 0.7275, 0.7275, 0.7272, 0.7266, 0.7263,
         0.7258, 0.7258, 0.7255, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7528, 0.7488, 0.7462, 0.7453, 0.7437, 0.7408, 0.7405, 0.7387,
         0.7385, 0.7384, 0.7383, 0.7372, 0.7371, 0.7369, 0.7368, 0.7367, 0.7367,
         0.7334, 0.7334, 0.7331, 0.7330, 0.7329, 0.7328, 0.7325, 0.7318, 0.7317,
         0.7315, 0.7313, 0.7308, 0.7304, 0.7300, 0.7296, 0.7295, 0.7295, 0.7289,
         0.7289, 0.7277, 0.7276, 0.7275, 0.7269, 0.7269, 0.7269, 0.7268, 0.7267,
         0.7260, 0.7258, 0.7255, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7682, 0.7527, 0.7510, 0.7474, 0.7467, 0.7448, 0.7441, 0.7412, 0.7404,
         0.7398, 0.7397, 0.7397, 0.7391, 0.7383, 0.7374, 0.7365, 0.7364, 0.7354,
         0.7348, 0.7348, 0.7339, 0.7334, 0.7333, 0.7329, 0.7316, 0.7314, 0.7313,
         0.7310, 0.7309, 0.7304, 0.7301, 0.7300, 0.7299, 0.7299, 0.7296, 0.7296,
         0.7280, 0.7279, 0.7271, 0.7269, 0.7264, 0.7262, 0.7259, 0.7258, 0.7256,
         0.7255, 0.7255, 0.7255, 0.7253, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7638, 0.7523, 0.7481, 0.7478, 0.7470, 0.7445, 0.7434, 0.7424, 0.7391,
         0.7389, 0.7388, 0.7383, 0.7380, 0.7379, 0.7377, 0.7369, 0.7366, 0.7350,
         0.7331, 0.7330, 0.7329, 0.7325, 0.7323, 0.7321, 0.7320, 0.7315, 0.7315,
         0.7307, 0.7305, 0.7304, 0.7303, 0.7300, 0.7292, 0.7292, 0.7282, 0.7282,
         0.7280, 0.7280, 0.7277, 0.7273, 0.7272, 0.7264, 0.7259, 0.7257, 0.7255,
         0.7252, 0.7251, 0.7250, 0.7249, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7537, 0.7501, 0.7479, 0.7474, 0.7457, 0.7450, 0.7405, 0.7404,
         0.7396, 0.7387, 0.7385, 0.7383, 0.7377, 0.7373, 0.7359, 0.7359, 0.7345,
         0.7339, 0.7336, 0.7335, 0.7327, 0.7321, 0.7319, 0.7318, 0.7317, 0.7310,
         0.7309, 0.7308, 0.7307, 0.7305, 0.7305, 0.7299, 0.7299, 0.7298, 0.7293,
         0.7293, 0.7288, 0.7286, 0.7282, 0.7273, 0.7271, 0.7270, 0.7267, 0.7267,
         0.7264, 0.7262, 0.7256, 0.7255, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7682, 0.7548, 0.7497, 0.7471, 0.7458, 0.7448, 0.7435, 0.7434, 0.7388,
         0.7386, 0.7382, 0.7381, 0.7372, 0.7369, 0.7366, 0.7358, 0.7352, 0.7350,
         0.7350, 0.7347, 0.7337, 0.7336, 0.7328, 0.7324, 0.7323, 0.7313, 0.7313,
         0.7312, 0.7310, 0.7306, 0.7303, 0.7303, 0.7300, 0.7297, 0.7295, 0.7294,
         0.7294, 0.7293, 0.7283, 0.7275, 0.7272, 0.7271, 0.7267, 0.7266, 0.7264,
         0.7262, 0.7262, 0.7259, 0.7256, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7608, 0.7524, 0.7478, 0.7470, 0.7462, 0.7450, 0.7413, 0.7412, 0.7398,
         0.7398, 0.7387, 0.7371, 0.7370, 0.7370, 0.7366, 0.7354, 0.7351, 0.7346,
         0.7341, 0.7340, 0.7329, 0.7317, 0.7316, 0.7315, 0.7309, 0.7306, 0.7304,
         0.7304, 0.7303, 0.7301, 0.7295, 0.7294, 0.7291, 0.7289, 0.7282, 0.7282,
         0.7281, 0.7279, 0.7274, 0.7274, 0.7273, 0.7273, 0.7269, 0.7266, 0.7266,
         0.7264, 0.7263, 0.7260, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7516, 0.7488, 0.7476, 0.7475, 0.7466, 0.7437, 0.7424, 0.7391,
         0.7390, 0.7389, 0.7385, 0.7381, 0.7373, 0.7361, 0.7345, 0.7328, 0.7328,
         0.7327, 0.7323, 0.7321, 0.7316, 0.7314, 0.7310, 0.7307, 0.7306, 0.7305,
         0.7303, 0.7302, 0.7302, 0.7301, 0.7300, 0.7295, 0.7293, 0.7292, 0.7288,
         0.7287, 0.7283, 0.7281, 0.7281, 0.7277, 0.7274, 0.7271, 0.7262, 0.7262,
         0.7261, 0.7261, 0.7255, 0.7254, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7662, 0.7516, 0.7481, 0.7473, 0.7455, 0.7448, 0.7435, 0.7430, 0.7393,
         0.7388, 0.7380, 0.7379, 0.7367, 0.7366, 0.7364, 0.7349, 0.7348, 0.7343,
         0.7341, 0.7340, 0.7333, 0.7328, 0.7326, 0.7324, 0.7318, 0.7313, 0.7311,
         0.7309, 0.7308, 0.7304, 0.7304, 0.7303, 0.7303, 0.7298, 0.7294, 0.7285,
         0.7284, 0.7278, 0.7277, 0.7269, 0.7266, 0.7262, 0.7261, 0.7261, 0.7256,
         0.7256, 0.7252, 0.7251, 0.7248, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7666, 0.7497, 0.7482, 0.7466, 0.7465, 0.7447, 0.7432, 0.7427, 0.7406,
         0.7385, 0.7385, 0.7379, 0.7379, 0.7372, 0.7368, 0.7365, 0.7353, 0.7352,
         0.7342, 0.7341, 0.7339, 0.7339, 0.7338, 0.7329, 0.7326, 0.7323, 0.7322,
         0.7311, 0.7310, 0.7310, 0.7307, 0.7304, 0.7303, 0.7302, 0.7297, 0.7286,
         0.7286, 0.7277, 0.7277, 0.7273, 0.7269, 0.7269, 0.7268, 0.7266, 0.7264,
         0.7260, 0.7258, 0.7258, 0.7258, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7666, 0.7529, 0.7496, 0.7476, 0.7460, 0.7440, 0.7427, 0.7425, 0.7401,
         0.7392, 0.7391, 0.7387, 0.7386, 0.7367, 0.7364, 0.7363, 0.7361, 0.7355,
         0.7349, 0.7346, 0.7330, 0.7329, 0.7327, 0.7323, 0.7320, 0.7318, 0.7313,
         0.7313, 0.7311, 0.7308, 0.7308, 0.7307, 0.7295, 0.7295, 0.7294, 0.7292,
         0.7287, 0.7283, 0.7274, 0.7274, 0.7271, 0.7270, 0.7268, 0.7266, 0.7264,
         0.7261, 0.7258, 0.7257, 0.7257, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7682, 0.7518, 0.7488, 0.7467, 0.7457, 0.7445, 0.7431, 0.7430, 0.7392,
         0.7380, 0.7378, 0.7377, 0.7374, 0.7370, 0.7369, 0.7369, 0.7356, 0.7353,
         0.7350, 0.7344, 0.7343, 0.7336, 0.7336, 0.7327, 0.7321, 0.7318, 0.7318,
         0.7315, 0.7311, 0.7311, 0.7307, 0.7295, 0.7290, 0.7289, 0.7280, 0.7278,
         0.7277, 0.7270, 0.7267, 0.7267, 0.7265, 0.7265, 0.7261, 0.7260, 0.7258,
         0.7253, 0.7253, 0.7253, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7635, 0.7526, 0.7506, 0.7488, 0.7454, 0.7442, 0.7440, 0.7409, 0.7392,
         0.7390, 0.7389, 0.7383, 0.7382, 0.7381, 0.7377, 0.7369, 0.7349, 0.7347,
         0.7346, 0.7338, 0.7324, 0.7323, 0.7319, 0.7318, 0.7315, 0.7314, 0.7311,
         0.7310, 0.7307, 0.7303, 0.7302, 0.7296, 0.7296, 0.7295, 0.7286, 0.7285,
         0.7281, 0.7280, 0.7279, 0.7277, 0.7277, 0.7266, 0.7265, 0.7263, 0.7259,
         0.7258, 0.7256, 0.7255, 0.7251, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7528, 0.7474, 0.7469, 0.7443, 0.7442, 0.7440, 0.7430, 0.7395,
         0.7394, 0.7393, 0.7381, 0.7378, 0.7376, 0.7376, 0.7376, 0.7361, 0.7353,
         0.7339, 0.7337, 0.7336, 0.7330, 0.7320, 0.7319, 0.7318, 0.7318, 0.7316,
         0.7314, 0.7311, 0.7310, 0.7308, 0.7308, 0.7304, 0.7303, 0.7300, 0.7292,
         0.7285, 0.7282, 0.7277, 0.7275, 0.7268, 0.7268, 0.7267, 0.7265, 0.7263,
         0.7263, 0.7261, 0.7259, 0.7257, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7664, 0.7489, 0.7488, 0.7475, 0.7466, 0.7446, 0.7438, 0.7426, 0.7385,
         0.7383, 0.7381, 0.7377, 0.7377, 0.7376, 0.7372, 0.7372, 0.7353, 0.7339,
         0.7336, 0.7335, 0.7328, 0.7326, 0.7317, 0.7316, 0.7316, 0.7312, 0.7312,
         0.7308, 0.7307, 0.7306, 0.7304, 0.7302, 0.7298, 0.7295, 0.7294, 0.7285,
         0.7284, 0.7284, 0.7280, 0.7279, 0.7279, 0.7277, 0.7270, 0.7268, 0.7267,
         0.7265, 0.7263, 0.7262, 0.7260, 0.7259]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7683, 0.7517, 0.7491, 0.7485, 0.7465, 0.7461, 0.7434, 0.7429, 0.7393,
         0.7385, 0.7383, 0.7381, 0.7378, 0.7376, 0.7375, 0.7374, 0.7362, 0.7354,
         0.7348, 0.7339, 0.7339, 0.7334, 0.7330, 0.7326, 0.7319, 0.7315, 0.7313,
         0.7313, 0.7313, 0.7311, 0.7310, 0.7308, 0.7308, 0.7305, 0.7304, 0.7290,
         0.7281, 0.7281, 0.7275, 0.7273, 0.7269, 0.7266, 0.7263, 0.7263, 0.7262,
         0.7261, 0.7255, 0.7255, 0.7254, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7519, 0.7462, 0.7462, 0.7451, 0.7445, 0.7434, 0.7418, 0.7402,
         0.7381, 0.7381, 0.7378, 0.7377, 0.7368, 0.7366, 0.7356, 0.7348, 0.7347,
         0.7345, 0.7339, 0.7335, 0.7329, 0.7325, 0.7319, 0.7317, 0.7310, 0.7309,
         0.7308, 0.7306, 0.7304, 0.7303, 0.7301, 0.7295, 0.7293, 0.7283, 0.7277,
         0.7276, 0.7272, 0.7268, 0.7268, 0.7267, 0.7266, 0.7266, 0.7259, 0.7259,
         0.7257, 0.7256, 0.7251, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7646, 0.7505, 0.7469, 0.7460, 0.7445, 0.7442, 0.7433, 0.7413, 0.7391,
         0.7386, 0.7376, 0.7374, 0.7374, 0.7370, 0.7368, 0.7357, 0.7351, 0.7350,
         0.7348, 0.7338, 0.7336, 0.7331, 0.7314, 0.7313, 0.7306, 0.7306, 0.7304,
         0.7300, 0.7299, 0.7298, 0.7294, 0.7288, 0.7287, 0.7286, 0.7277, 0.7275,
         0.7275, 0.7274, 0.7268, 0.7267, 0.7267, 0.7266, 0.7263, 0.7262, 0.7262,
         0.7260, 0.7260, 0.7254, 0.7252, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7485, 0.7456, 0.7454, 0.7453, 0.7441, 0.7437, 0.7416, 0.7399,
         0.7382, 0.7379, 0.7375, 0.7374, 0.7370, 0.7357, 0.7356, 0.7347, 0.7340,
         0.7338, 0.7327, 0.7319, 0.7315, 0.7314, 0.7314, 0.7314, 0.7312, 0.7312,
         0.7308, 0.7307, 0.7303, 0.7303, 0.7301, 0.7294, 0.7293, 0.7289, 0.7285,
         0.7282, 0.7279, 0.7278, 0.7277, 0.7277, 0.7275, 0.7273, 0.7271, 0.7263,
         0.7262, 0.7256, 0.7252, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7644, 0.7519, 0.7498, 0.7474, 0.7464, 0.7435, 0.7434, 0.7411, 0.7397,
         0.7388, 0.7381, 0.7379, 0.7379, 0.7378, 0.7373, 0.7365, 0.7364, 0.7362,
         0.7343, 0.7340, 0.7338, 0.7317, 0.7316, 0.7315, 0.7314, 0.7314, 0.7310,
         0.7309, 0.7308, 0.7305, 0.7303, 0.7299, 0.7282, 0.7282, 0.7282, 0.7281,
         0.7279, 0.7279, 0.7278, 0.7273, 0.7269, 0.7268, 0.7266, 0.7266, 0.7264,
         0.7259, 0.7256, 0.7256, 0.7252, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7678, 0.7545, 0.7484, 0.7477, 0.7454, 0.7433, 0.7429, 0.7425, 0.7386,
         0.7385, 0.7380, 0.7378, 0.7378, 0.7362, 0.7356, 0.7351, 0.7349, 0.7346,
         0.7343, 0.7335, 0.7335, 0.7334, 0.7332, 0.7319, 0.7313, 0.7311, 0.7308,
         0.7307, 0.7307, 0.7306, 0.7303, 0.7303, 0.7302, 0.7302, 0.7294, 0.7291,
         0.7291, 0.7286, 0.7285, 0.7284, 0.7283, 0.7278, 0.7267, 0.7267, 0.7263,
         0.7262, 0.7262, 0.7259, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7532, 0.7491, 0.7479, 0.7463, 0.7453, 0.7429, 0.7419, 0.7401,
         0.7396, 0.7395, 0.7367, 0.7367, 0.7359, 0.7350, 0.7343, 0.7342, 0.7337,
         0.7332, 0.7329, 0.7329, 0.7322, 0.7318, 0.7317, 0.7313, 0.7309, 0.7307,
         0.7305, 0.7304, 0.7302, 0.7300, 0.7299, 0.7296, 0.7294, 0.7292, 0.7291,
         0.7290, 0.7288, 0.7281, 0.7272, 0.7270, 0.7267, 0.7263, 0.7262, 0.7261,
         0.7261, 0.7258, 0.7251, 0.7249, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7529, 0.7486, 0.7456, 0.7452, 0.7433, 0.7431, 0.7420, 0.7400,
         0.7393, 0.7388, 0.7386, 0.7381, 0.7367, 0.7363, 0.7361, 0.7355, 0.7343,
         0.7335, 0.7333, 0.7332, 0.7318, 0.7313, 0.7313, 0.7311, 0.7311, 0.7311,
         0.7306, 0.7306, 0.7303, 0.7300, 0.7294, 0.7292, 0.7292, 0.7291, 0.7288,
         0.7287, 0.7278, 0.7276, 0.7275, 0.7273, 0.7270, 0.7263, 0.7263, 0.7263,
         0.7263, 0.7262, 0.7260, 0.7257, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7531, 0.7492, 0.7476, 0.7470, 0.7465, 0.7424, 0.7418, 0.7409,
         0.7396, 0.7393, 0.7380, 0.7379, 0.7376, 0.7364, 0.7363, 0.7354, 0.7354,
         0.7353, 0.7344, 0.7342, 0.7327, 0.7320, 0.7317, 0.7315, 0.7311, 0.7310,
         0.7305, 0.7303, 0.7302, 0.7299, 0.7298, 0.7294, 0.7288, 0.7286, 0.7283,
         0.7280, 0.7279, 0.7274, 0.7273, 0.7272, 0.7270, 0.7270, 0.7268, 0.7264,
         0.7261, 0.7260, 0.7260, 0.7257, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7662, 0.7504, 0.7490, 0.7464, 0.7459, 0.7447, 0.7430, 0.7423, 0.7388,
         0.7386, 0.7384, 0.7378, 0.7375, 0.7373, 0.7369, 0.7368, 0.7353, 0.7344,
         0.7343, 0.7336, 0.7330, 0.7330, 0.7330, 0.7327, 0.7325, 0.7320, 0.7313,
         0.7307, 0.7307, 0.7305, 0.7304, 0.7300, 0.7294, 0.7293, 0.7292, 0.7291,
         0.7290, 0.7289, 0.7288, 0.7287, 0.7280, 0.7276, 0.7271, 0.7268, 0.7267,
         0.7262, 0.7256, 0.7254, 0.7252, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7511, 0.7495, 0.7469, 0.7455, 0.7450, 0.7430, 0.7415, 0.7403,
         0.7395, 0.7382, 0.7378, 0.7377, 0.7371, 0.7367, 0.7361, 0.7361, 0.7345,
         0.7342, 0.7334, 0.7332, 0.7329, 0.7325, 0.7324, 0.7323, 0.7323, 0.7316,
         0.7316, 0.7310, 0.7304, 0.7304, 0.7300, 0.7292, 0.7291, 0.7290, 0.7290,
         0.7289, 0.7287, 0.7281, 0.7279, 0.7278, 0.7276, 0.7268, 0.7266, 0.7265,
         0.7264, 0.7264, 0.7260, 0.7259, 0.7257]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7628, 0.7527, 0.7475, 0.7465, 0.7460, 0.7445, 0.7424, 0.7408, 0.7405,
         0.7390, 0.7379, 0.7378, 0.7376, 0.7376, 0.7373, 0.7366, 0.7352, 0.7339,
         0.7336, 0.7336, 0.7332, 0.7331, 0.7326, 0.7319, 0.7310, 0.7309, 0.7308,
         0.7307, 0.7305, 0.7303, 0.7303, 0.7301, 0.7300, 0.7295, 0.7287, 0.7287,
         0.7286, 0.7282, 0.7280, 0.7278, 0.7277, 0.7277, 0.7276, 0.7275, 0.7271,
         0.7266, 0.7264, 0.7261, 0.7261, 0.7259]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7525, 0.7475, 0.7468, 0.7464, 0.7447, 0.7445, 0.7442, 0.7399,
         0.7394, 0.7392, 0.7379, 0.7376, 0.7360, 0.7356, 0.7356, 0.7354, 0.7353,
         0.7343, 0.7335, 0.7331, 0.7331, 0.7331, 0.7330, 0.7327, 0.7320, 0.7317,
         0.7316, 0.7316, 0.7316, 0.7314, 0.7307, 0.7305, 0.7300, 0.7290, 0.7287,
         0.7286, 0.7285, 0.7284, 0.7280, 0.7278, 0.7276, 0.7271, 0.7265, 0.7263,
         0.7261, 0.7257, 0.7257, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7671, 0.7503, 0.7501, 0.7471, 0.7449, 0.7440, 0.7428, 0.7410, 0.7393,
         0.7385, 0.7383, 0.7370, 0.7362, 0.7361, 0.7357, 0.7355, 0.7349, 0.7345,
         0.7342, 0.7330, 0.7329, 0.7329, 0.7327, 0.7326, 0.7318, 0.7313, 0.7308,
         0.7308, 0.7308, 0.7307, 0.7306, 0.7298, 0.7298, 0.7297, 0.7295, 0.7284,
         0.7281, 0.7275, 0.7273, 0.7272, 0.7272, 0.7271, 0.7263, 0.7262, 0.7259,
         0.7257, 0.7256, 0.7255, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7682, 0.7533, 0.7489, 0.7473, 0.7457, 0.7449, 0.7434, 0.7412, 0.7402,
         0.7399, 0.7389, 0.7383, 0.7374, 0.7374, 0.7361, 0.7352, 0.7342, 0.7340,
         0.7339, 0.7336, 0.7332, 0.7326, 0.7322, 0.7321, 0.7317, 0.7315, 0.7314,
         0.7311, 0.7310, 0.7309, 0.7306, 0.7304, 0.7302, 0.7300, 0.7296, 0.7296,
         0.7289, 0.7282, 0.7277, 0.7273, 0.7272, 0.7272, 0.7268, 0.7268, 0.7267,
         0.7265, 0.7262, 0.7262, 0.7260, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7538, 0.7480, 0.7452, 0.7440, 0.7438, 0.7424, 0.7419, 0.7386,
         0.7384, 0.7384, 0.7378, 0.7363, 0.7361, 0.7347, 0.7344, 0.7342, 0.7335,
         0.7334, 0.7334, 0.7329, 0.7327, 0.7326, 0.7322, 0.7317, 0.7313, 0.7311,
         0.7305, 0.7304, 0.7299, 0.7287, 0.7285, 0.7280, 0.7280, 0.7277, 0.7276,
         0.7275, 0.7271, 0.7267, 0.7265, 0.7263, 0.7262, 0.7262, 0.7261, 0.7261,
         0.7260, 0.7259, 0.7259, 0.7257, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7660, 0.7527, 0.7473, 0.7471, 0.7453, 0.7448, 0.7438, 0.7408, 0.7405,
         0.7393, 0.7390, 0.7382, 0.7379, 0.7378, 0.7372, 0.7370, 0.7370, 0.7365,
         0.7342, 0.7342, 0.7340, 0.7335, 0.7324, 0.7317, 0.7315, 0.7313, 0.7309,
         0.7306, 0.7304, 0.7302, 0.7297, 0.7294, 0.7291, 0.7291, 0.7289, 0.7282,
         0.7280, 0.7277, 0.7277, 0.7275, 0.7272, 0.7271, 0.7268, 0.7263, 0.7260,
         0.7255, 0.7255, 0.7255, 0.7255, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7690, 0.7501, 0.7484, 0.7470, 0.7453, 0.7442, 0.7441, 0.7426, 0.7392,
         0.7384, 0.7383, 0.7382, 0.7380, 0.7379, 0.7364, 0.7360, 0.7354, 0.7354,
         0.7346, 0.7337, 0.7336, 0.7336, 0.7331, 0.7328, 0.7326, 0.7319, 0.7312,
         0.7310, 0.7309, 0.7309, 0.7308, 0.7306, 0.7305, 0.7296, 0.7288, 0.7284,
         0.7284, 0.7282, 0.7282, 0.7278, 0.7276, 0.7275, 0.7273, 0.7270, 0.7267,
         0.7265, 0.7265, 0.7264, 0.7262, 0.7262]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7541, 0.7476, 0.7470, 0.7452, 0.7436, 0.7436, 0.7414, 0.7384,
         0.7380, 0.7376, 0.7376, 0.7375, 0.7366, 0.7363, 0.7360, 0.7360, 0.7355,
         0.7336, 0.7334, 0.7332, 0.7332, 0.7330, 0.7328, 0.7326, 0.7323, 0.7323,
         0.7322, 0.7320, 0.7305, 0.7305, 0.7299, 0.7298, 0.7298, 0.7290, 0.7285,
         0.7284, 0.7283, 0.7274, 0.7274, 0.7272, 0.7271, 0.7269, 0.7264, 0.7260,
         0.7260, 0.7255, 0.7253, 0.7251, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7650, 0.7518, 0.7496, 0.7459, 0.7453, 0.7442, 0.7442, 0.7439, 0.7402,
         0.7390, 0.7384, 0.7383, 0.7380, 0.7374, 0.7374, 0.7363, 0.7352, 0.7342,
         0.7335, 0.7332, 0.7325, 0.7320, 0.7320, 0.7317, 0.7315, 0.7311, 0.7310,
         0.7309, 0.7305, 0.7304, 0.7303, 0.7301, 0.7297, 0.7297, 0.7294, 0.7282,
         0.7282, 0.7280, 0.7274, 0.7273, 0.7270, 0.7269, 0.7267, 0.7262, 0.7262,
         0.7262, 0.7260, 0.7257, 0.7256, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7620, 0.7517, 0.7493, 0.7481, 0.7456, 0.7451, 0.7449, 0.7424, 0.7403,
         0.7398, 0.7393, 0.7387, 0.7377, 0.7376, 0.7372, 0.7365, 0.7357, 0.7349,
         0.7343, 0.7338, 0.7331, 0.7324, 0.7320, 0.7318, 0.7317, 0.7317, 0.7312,
         0.7312, 0.7311, 0.7308, 0.7302, 0.7301, 0.7301, 0.7299, 0.7291, 0.7288,
         0.7281, 0.7279, 0.7275, 0.7274, 0.7274, 0.7271, 0.7264, 0.7264, 0.7262,
         0.7262, 0.7258, 0.7255, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7681, 0.7524, 0.7515, 0.7474, 0.7462, 0.7457, 0.7444, 0.7429, 0.7414,
         0.7396, 0.7395, 0.7392, 0.7389, 0.7384, 0.7375, 0.7370, 0.7355, 0.7343,
         0.7342, 0.7335, 0.7328, 0.7326, 0.7322, 0.7318, 0.7317, 0.7314, 0.7312,
         0.7309, 0.7307, 0.7304, 0.7303, 0.7302, 0.7296, 0.7295, 0.7291, 0.7286,
         0.7280, 0.7279, 0.7278, 0.7270, 0.7268, 0.7267, 0.7264, 0.7263, 0.7263,
         0.7258, 0.7256, 0.7251, 0.7248, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7513, 0.7486, 0.7471, 0.7451, 0.7450, 0.7440, 0.7422, 0.7386,
         0.7381, 0.7380, 0.7379, 0.7378, 0.7378, 0.7374, 0.7360, 0.7359, 0.7343,
         0.7337, 0.7335, 0.7332, 0.7331, 0.7326, 0.7318, 0.7318, 0.7317, 0.7313,
         0.7308, 0.7304, 0.7292, 0.7290, 0.7285, 0.7281, 0.7281, 0.7279, 0.7276,
         0.7276, 0.7276, 0.7274, 0.7273, 0.7272, 0.7270, 0.7270, 0.7269, 0.7266,
         0.7265, 0.7260, 0.7259, 0.7258, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7670, 0.7506, 0.7487, 0.7487, 0.7470, 0.7457, 0.7420, 0.7419, 0.7394,
         0.7392, 0.7385, 0.7385, 0.7384, 0.7380, 0.7369, 0.7367, 0.7362, 0.7347,
         0.7346, 0.7345, 0.7345, 0.7340, 0.7335, 0.7323, 0.7323, 0.7317, 0.7316,
         0.7313, 0.7312, 0.7306, 0.7306, 0.7302, 0.7296, 0.7295, 0.7284, 0.7283,
         0.7283, 0.7282, 0.7280, 0.7279, 0.7278, 0.7276, 0.7271, 0.7270, 0.7268,
         0.7267, 0.7258, 0.7257, 0.7248, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7643, 0.7505, 0.7477, 0.7477, 0.7468, 0.7448, 0.7434, 0.7427, 0.7391,
         0.7387, 0.7387, 0.7384, 0.7384, 0.7379, 0.7379, 0.7378, 0.7374, 0.7356,
         0.7353, 0.7333, 0.7329, 0.7326, 0.7321, 0.7319, 0.7319, 0.7315, 0.7312,
         0.7307, 0.7303, 0.7298, 0.7298, 0.7296, 0.7286, 0.7283, 0.7279, 0.7276,
         0.7274, 0.7273, 0.7271, 0.7269, 0.7269, 0.7267, 0.7264, 0.7262, 0.7259,
         0.7259, 0.7257, 0.7254, 0.7254, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7637, 0.7539, 0.7488, 0.7483, 0.7458, 0.7449, 0.7421, 0.7419, 0.7405,
         0.7399, 0.7389, 0.7389, 0.7379, 0.7368, 0.7367, 0.7366, 0.7361, 0.7351,
         0.7346, 0.7345, 0.7344, 0.7343, 0.7339, 0.7324, 0.7318, 0.7317, 0.7316,
         0.7315, 0.7307, 0.7304, 0.7303, 0.7290, 0.7288, 0.7287, 0.7285, 0.7285,
         0.7278, 0.7276, 0.7275, 0.7273, 0.7273, 0.7272, 0.7270, 0.7270, 0.7268,
         0.7268, 0.7268, 0.7262, 0.7257, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7649, 0.7499, 0.7478, 0.7465, 0.7456, 0.7454, 0.7427, 0.7407, 0.7398,
         0.7389, 0.7383, 0.7376, 0.7363, 0.7357, 0.7353, 0.7346, 0.7341, 0.7341,
         0.7338, 0.7336, 0.7334, 0.7331, 0.7322, 0.7321, 0.7320, 0.7315, 0.7312,
         0.7310, 0.7307, 0.7307, 0.7299, 0.7288, 0.7285, 0.7282, 0.7279, 0.7279,
         0.7276, 0.7271, 0.7271, 0.7269, 0.7268, 0.7267, 0.7266, 0.7264, 0.7259,
         0.7256, 0.7255, 0.7255, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7662, 0.7515, 0.7478, 0.7475, 0.7457, 0.7451, 0.7421, 0.7419, 0.7405,
         0.7391, 0.7390, 0.7380, 0.7380, 0.7376, 0.7372, 0.7364, 0.7362, 0.7341,
         0.7339, 0.7338, 0.7336, 0.7333, 0.7328, 0.7321, 0.7319, 0.7315, 0.7315,
         0.7314, 0.7312, 0.7307, 0.7304, 0.7303, 0.7299, 0.7289, 0.7284, 0.7283,
         0.7282, 0.7274, 0.7268, 0.7267, 0.7266, 0.7265, 0.7265, 0.7264, 0.7261,
         0.7261, 0.7259, 0.7258, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7668, 0.7514, 0.7506, 0.7475, 0.7461, 0.7443, 0.7428, 0.7419, 0.7401,
         0.7393, 0.7393, 0.7389, 0.7384, 0.7379, 0.7370, 0.7365, 0.7355, 0.7347,
         0.7337, 0.7332, 0.7330, 0.7326, 0.7319, 0.7314, 0.7310, 0.7310, 0.7309,
         0.7308, 0.7306, 0.7299, 0.7298, 0.7297, 0.7295, 0.7294, 0.7293, 0.7289,
         0.7283, 0.7276, 0.7275, 0.7272, 0.7269, 0.7269, 0.7266, 0.7255, 0.7253,
         0.7253, 0.7250, 0.7248, 0.7246, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7679, 0.7529, 0.7503, 0.7472, 0.7450, 0.7450, 0.7431, 0.7418, 0.7401,
         0.7396, 0.7393, 0.7387, 0.7387, 0.7380, 0.7369, 0.7368, 0.7360, 0.7344,
         0.7343, 0.7337, 0.7335, 0.7326, 0.7323, 0.7323, 0.7321, 0.7318, 0.7317,
         0.7316, 0.7316, 0.7311, 0.7306, 0.7303, 0.7294, 0.7292, 0.7290, 0.7286,
         0.7277, 0.7275, 0.7269, 0.7269, 0.7268, 0.7265, 0.7264, 0.7264, 0.7259,
         0.7256, 0.7253, 0.7250, 0.7249, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7635, 0.7500, 0.7485, 0.7468, 0.7459, 0.7456, 0.7440, 0.7413, 0.7400,
         0.7392, 0.7388, 0.7388, 0.7371, 0.7370, 0.7370, 0.7368, 0.7359, 0.7348,
         0.7345, 0.7332, 0.7330, 0.7323, 0.7322, 0.7319, 0.7318, 0.7316, 0.7311,
         0.7307, 0.7306, 0.7304, 0.7299, 0.7298, 0.7291, 0.7284, 0.7283, 0.7282,
         0.7281, 0.7278, 0.7270, 0.7269, 0.7269, 0.7266, 0.7263, 0.7263, 0.7262,
         0.7256, 0.7253, 0.7253, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7683, 0.7521, 0.7493, 0.7480, 0.7451, 0.7448, 0.7436, 0.7421, 0.7400,
         0.7389, 0.7386, 0.7386, 0.7380, 0.7377, 0.7373, 0.7370, 0.7360, 0.7352,
         0.7352, 0.7340, 0.7336, 0.7332, 0.7329, 0.7328, 0.7325, 0.7323, 0.7322,
         0.7321, 0.7313, 0.7307, 0.7300, 0.7296, 0.7296, 0.7294, 0.7287, 0.7283,
         0.7279, 0.7277, 0.7272, 0.7269, 0.7268, 0.7267, 0.7267, 0.7266, 0.7266,
         0.7266, 0.7262, 0.7261, 0.7256, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7661, 0.7530, 0.7491, 0.7461, 0.7450, 0.7437, 0.7428, 0.7428, 0.7408,
         0.7400, 0.7391, 0.7387, 0.7382, 0.7379, 0.7379, 0.7378, 0.7363, 0.7349,
         0.7345, 0.7333, 0.7332, 0.7327, 0.7325, 0.7321, 0.7318, 0.7311, 0.7310,
         0.7307, 0.7306, 0.7305, 0.7305, 0.7299, 0.7289, 0.7289, 0.7283, 0.7280,
         0.7277, 0.7274, 0.7273, 0.7271, 0.7270, 0.7270, 0.7267, 0.7262, 0.7261,
         0.7258, 0.7257, 0.7256, 0.7254, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7685, 0.7517, 0.7509, 0.7466, 0.7465, 0.7444, 0.7436, 0.7415, 0.7399,
         0.7397, 0.7387, 0.7385, 0.7383, 0.7378, 0.7378, 0.7375, 0.7372, 0.7359,
         0.7344, 0.7339, 0.7337, 0.7332, 0.7327, 0.7326, 0.7324, 0.7315, 0.7311,
         0.7311, 0.7309, 0.7299, 0.7299, 0.7296, 0.7295, 0.7293, 0.7291, 0.7290,
         0.7290, 0.7286, 0.7285, 0.7285, 0.7284, 0.7278, 0.7278, 0.7278, 0.7269,
         0.7269, 0.7269, 0.7267, 0.7259, 0.7259]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7517, 0.7491, 0.7461, 0.7461, 0.7446, 0.7440, 0.7438, 0.7402,
         0.7396, 0.7391, 0.7387, 0.7386, 0.7376, 0.7376, 0.7376, 0.7363, 0.7361,
         0.7356, 0.7346, 0.7340, 0.7335, 0.7326, 0.7319, 0.7313, 0.7312, 0.7310,
         0.7306, 0.7305, 0.7305, 0.7299, 0.7296, 0.7291, 0.7287, 0.7282, 0.7281,
         0.7275, 0.7274, 0.7274, 0.7271, 0.7267, 0.7263, 0.7261, 0.7261, 0.7261,
         0.7261, 0.7260, 0.7260, 0.7260, 0.7259]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7677, 0.7521, 0.7496, 0.7477, 0.7476, 0.7439, 0.7414, 0.7413, 0.7400,
         0.7389, 0.7381, 0.7374, 0.7373, 0.7368, 0.7348, 0.7348, 0.7345, 0.7340,
         0.7338, 0.7333, 0.7324, 0.7324, 0.7323, 0.7322, 0.7319, 0.7305, 0.7304,
         0.7304, 0.7299, 0.7298, 0.7298, 0.7292, 0.7292, 0.7290, 0.7289, 0.7284,
         0.7283, 0.7283, 0.7280, 0.7273, 0.7273, 0.7265, 0.7264, 0.7264, 0.7263,
         0.7258, 0.7258, 0.7256, 0.7254, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7645, 0.7524, 0.7492, 0.7462, 0.7450, 0.7449, 0.7449, 0.7410, 0.7395,
         0.7394, 0.7381, 0.7379, 0.7378, 0.7377, 0.7376, 0.7371, 0.7355, 0.7348,
         0.7343, 0.7338, 0.7333, 0.7328, 0.7328, 0.7325, 0.7322, 0.7319, 0.7318,
         0.7318, 0.7316, 0.7310, 0.7305, 0.7304, 0.7285, 0.7285, 0.7282, 0.7275,
         0.7273, 0.7273, 0.7272, 0.7272, 0.7271, 0.7271, 0.7271, 0.7269, 0.7268,
         0.7266, 0.7264, 0.7263, 0.7260, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7652, 0.7529, 0.7474, 0.7468, 0.7464, 0.7453, 0.7438, 0.7415, 0.7386,
         0.7385, 0.7384, 0.7381, 0.7378, 0.7375, 0.7365, 0.7360, 0.7343, 0.7341,
         0.7336, 0.7336, 0.7335, 0.7320, 0.7316, 0.7316, 0.7314, 0.7309, 0.7308,
         0.7304, 0.7304, 0.7303, 0.7296, 0.7292, 0.7289, 0.7286, 0.7279, 0.7276,
         0.7275, 0.7275, 0.7272, 0.7272, 0.7271, 0.7263, 0.7255, 0.7255, 0.7253,
         0.7251, 0.7251, 0.7248, 0.7247, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7648, 0.7531, 0.7477, 0.7471, 0.7451, 0.7437, 0.7436, 0.7415, 0.7389,
         0.7387, 0.7385, 0.7383, 0.7374, 0.7373, 0.7373, 0.7369, 0.7354, 0.7351,
         0.7340, 0.7337, 0.7336, 0.7327, 0.7321, 0.7319, 0.7311, 0.7310, 0.7304,
         0.7301, 0.7299, 0.7297, 0.7293, 0.7293, 0.7292, 0.7288, 0.7288, 0.7287,
         0.7287, 0.7284, 0.7280, 0.7279, 0.7275, 0.7272, 0.7270, 0.7269, 0.7268,
         0.7266, 0.7263, 0.7258, 0.7258, 0.7258]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7674, 0.7508, 0.7492, 0.7475, 0.7439, 0.7435, 0.7430, 0.7428, 0.7395,
         0.7389, 0.7384, 0.7383, 0.7383, 0.7373, 0.7368, 0.7366, 0.7365, 0.7360,
         0.7353, 0.7346, 0.7342, 0.7333, 0.7326, 0.7322, 0.7322, 0.7322, 0.7317,
         0.7317, 0.7312, 0.7309, 0.7305, 0.7305, 0.7303, 0.7294, 0.7293, 0.7289,
         0.7289, 0.7287, 0.7286, 0.7285, 0.7282, 0.7271, 0.7260, 0.7260, 0.7259,
         0.7253, 0.7252, 0.7252, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7650, 0.7502, 0.7486, 0.7466, 0.7451, 0.7445, 0.7438, 0.7434, 0.7404,
         0.7403, 0.7398, 0.7381, 0.7372, 0.7370, 0.7365, 0.7362, 0.7353, 0.7342,
         0.7342, 0.7337, 0.7333, 0.7332, 0.7326, 0.7326, 0.7325, 0.7322, 0.7320,
         0.7320, 0.7317, 0.7316, 0.7315, 0.7302, 0.7300, 0.7294, 0.7287, 0.7284,
         0.7283, 0.7279, 0.7279, 0.7278, 0.7275, 0.7270, 0.7269, 0.7262, 0.7260,
         0.7259, 0.7255, 0.7251, 0.7246, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7678, 0.7515, 0.7504, 0.7474, 0.7466, 0.7442, 0.7422, 0.7421, 0.7403,
         0.7394, 0.7391, 0.7386, 0.7378, 0.7376, 0.7373, 0.7369, 0.7352, 0.7348,
         0.7345, 0.7339, 0.7328, 0.7322, 0.7320, 0.7315, 0.7314, 0.7311, 0.7309,
         0.7300, 0.7297, 0.7296, 0.7296, 0.7291, 0.7289, 0.7283, 0.7280, 0.7280,
         0.7278, 0.7277, 0.7274, 0.7274, 0.7271, 0.7267, 0.7266, 0.7262, 0.7262,
         0.7257, 0.7255, 0.7255, 0.7251, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7661, 0.7516, 0.7476, 0.7474, 0.7466, 0.7440, 0.7437, 0.7413, 0.7400,
         0.7385, 0.7383, 0.7383, 0.7375, 0.7367, 0.7365, 0.7365, 0.7363, 0.7354,
         0.7351, 0.7342, 0.7332, 0.7326, 0.7319, 0.7315, 0.7314, 0.7314, 0.7308,
         0.7308, 0.7304, 0.7296, 0.7293, 0.7290, 0.7290, 0.7287, 0.7284, 0.7282,
         0.7275, 0.7275, 0.7274, 0.7270, 0.7267, 0.7266, 0.7266, 0.7260, 0.7259,
         0.7252, 0.7252, 0.7249, 0.7249, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7685, 0.7510, 0.7478, 0.7469, 0.7461, 0.7457, 0.7445, 0.7417, 0.7385,
         0.7382, 0.7378, 0.7377, 0.7375, 0.7369, 0.7356, 0.7352, 0.7350, 0.7346,
         0.7337, 0.7330, 0.7328, 0.7319, 0.7317, 0.7316, 0.7315, 0.7314, 0.7312,
         0.7311, 0.7310, 0.7306, 0.7302, 0.7291, 0.7290, 0.7290, 0.7290, 0.7283,
         0.7281, 0.7281, 0.7273, 0.7271, 0.7270, 0.7267, 0.7260, 0.7258, 0.7255,
         0.7252, 0.7252, 0.7249, 0.7247, 0.7244]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7658, 0.7525, 0.7482, 0.7460, 0.7452, 0.7447, 0.7440, 0.7425, 0.7391,
         0.7390, 0.7387, 0.7384, 0.7377, 0.7374, 0.7362, 0.7355, 0.7353, 0.7346,
         0.7345, 0.7341, 0.7339, 0.7333, 0.7328, 0.7318, 0.7314, 0.7313, 0.7312,
         0.7310, 0.7310, 0.7308, 0.7305, 0.7300, 0.7297, 0.7295, 0.7290, 0.7282,
         0.7277, 0.7274, 0.7274, 0.7271, 0.7270, 0.7267, 0.7267, 0.7265, 0.7264,
         0.7257, 0.7255, 0.7253, 0.7253, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7511, 0.7481, 0.7477, 0.7455, 0.7441, 0.7431, 0.7428, 0.7407,
         0.7393, 0.7391, 0.7384, 0.7383, 0.7381, 0.7376, 0.7375, 0.7364, 0.7349,
         0.7330, 0.7328, 0.7325, 0.7324, 0.7322, 0.7319, 0.7312, 0.7311, 0.7307,
         0.7303, 0.7302, 0.7301, 0.7299, 0.7298, 0.7297, 0.7293, 0.7292, 0.7287,
         0.7282, 0.7277, 0.7275, 0.7273, 0.7272, 0.7272, 0.7270, 0.7268, 0.7259,
         0.7258, 0.7257, 0.7257, 0.7256, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7531, 0.7499, 0.7461, 0.7449, 0.7441, 0.7430, 0.7426, 0.7425,
         0.7389, 0.7381, 0.7378, 0.7378, 0.7377, 0.7371, 0.7369, 0.7344, 0.7342,
         0.7341, 0.7335, 0.7331, 0.7323, 0.7322, 0.7322, 0.7319, 0.7316, 0.7316,
         0.7310, 0.7308, 0.7307, 0.7307, 0.7307, 0.7305, 0.7304, 0.7303, 0.7297,
         0.7295, 0.7292, 0.7280, 0.7279, 0.7276, 0.7274, 0.7270, 0.7266, 0.7266,
         0.7265, 0.7264, 0.7258, 0.7254, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7497, 0.7496, 0.7488, 0.7466, 0.7454, 0.7433, 0.7423, 0.7393,
         0.7389, 0.7385, 0.7382, 0.7369, 0.7367, 0.7365, 0.7363, 0.7354, 0.7347,
         0.7340, 0.7328, 0.7328, 0.7326, 0.7322, 0.7320, 0.7320, 0.7317, 0.7316,
         0.7315, 0.7315, 0.7312, 0.7310, 0.7310, 0.7307, 0.7306, 0.7292, 0.7286,
         0.7281, 0.7281, 0.7279, 0.7271, 0.7271, 0.7270, 0.7264, 0.7261, 0.7260,
         0.7258, 0.7258, 0.7250, 0.7248, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7635, 0.7528, 0.7502, 0.7459, 0.7456, 0.7442, 0.7437, 0.7422, 0.7396,
         0.7386, 0.7385, 0.7373, 0.7370, 0.7369, 0.7367, 0.7363, 0.7358, 0.7337,
         0.7332, 0.7327, 0.7325, 0.7323, 0.7313, 0.7312, 0.7312, 0.7308, 0.7306,
         0.7306, 0.7305, 0.7305, 0.7301, 0.7300, 0.7299, 0.7295, 0.7295, 0.7292,
         0.7287, 0.7280, 0.7277, 0.7276, 0.7275, 0.7271, 0.7268, 0.7266, 0.7264,
         0.7261, 0.7261, 0.7250, 0.7248, 0.7244]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7641, 0.7513, 0.7489, 0.7479, 0.7477, 0.7446, 0.7424, 0.7421, 0.7407,
         0.7395, 0.7395, 0.7379, 0.7375, 0.7375, 0.7374, 0.7371, 0.7367, 0.7346,
         0.7333, 0.7332, 0.7321, 0.7318, 0.7317, 0.7316, 0.7311, 0.7306, 0.7299,
         0.7298, 0.7297, 0.7297, 0.7294, 0.7294, 0.7292, 0.7292, 0.7287, 0.7284,
         0.7283, 0.7282, 0.7275, 0.7274, 0.7272, 0.7272, 0.7270, 0.7267, 0.7264,
         0.7256, 0.7255, 0.7253, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7657, 0.7503, 0.7500, 0.7476, 0.7469, 0.7459, 0.7435, 0.7420, 0.7389,
         0.7384, 0.7383, 0.7378, 0.7375, 0.7374, 0.7369, 0.7368, 0.7355, 0.7327,
         0.7325, 0.7325, 0.7322, 0.7321, 0.7320, 0.7317, 0.7316, 0.7312, 0.7311,
         0.7308, 0.7305, 0.7304, 0.7302, 0.7296, 0.7285, 0.7282, 0.7280, 0.7279,
         0.7279, 0.7274, 0.7273, 0.7272, 0.7272, 0.7272, 0.7271, 0.7270, 0.7266,
         0.7263, 0.7258, 0.7257, 0.7254, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7636, 0.7536, 0.7490, 0.7476, 0.7464, 0.7460, 0.7450, 0.7416, 0.7396,
         0.7390, 0.7386, 0.7384, 0.7382, 0.7374, 0.7373, 0.7371, 0.7365, 0.7353,
         0.7346, 0.7343, 0.7341, 0.7333, 0.7330, 0.7329, 0.7327, 0.7315, 0.7314,
         0.7310, 0.7308, 0.7306, 0.7304, 0.7299, 0.7285, 0.7284, 0.7280, 0.7273,
         0.7273, 0.7272, 0.7270, 0.7267, 0.7265, 0.7265, 0.7264, 0.7263, 0.7263,
         0.7262, 0.7262, 0.7260, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7514, 0.7511, 0.7495, 0.7467, 0.7437, 0.7430, 0.7417, 0.7408,
         0.7391, 0.7390, 0.7389, 0.7381, 0.7373, 0.7369, 0.7360, 0.7354, 0.7350,
         0.7339, 0.7339, 0.7339, 0.7337, 0.7334, 0.7333, 0.7324, 0.7319, 0.7318,
         0.7317, 0.7313, 0.7312, 0.7312, 0.7308, 0.7306, 0.7284, 0.7283, 0.7283,
         0.7279, 0.7279, 0.7276, 0.7272, 0.7268, 0.7266, 0.7265, 0.7260, 0.7256,
         0.7254, 0.7254, 0.7252, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7661, 0.7526, 0.7484, 0.7477, 0.7449, 0.7448, 0.7445, 0.7416, 0.7397,
         0.7397, 0.7391, 0.7389, 0.7381, 0.7378, 0.7374, 0.7368, 0.7353, 0.7344,
         0.7339, 0.7335, 0.7332, 0.7331, 0.7324, 0.7323, 0.7320, 0.7319, 0.7316,
         0.7310, 0.7309, 0.7305, 0.7303, 0.7298, 0.7296, 0.7294, 0.7292, 0.7285,
         0.7276, 0.7275, 0.7274, 0.7274, 0.7267, 0.7267, 0.7266, 0.7262, 0.7256,
         0.7254, 0.7252, 0.7252, 0.7250, 0.7249]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7652, 0.7511, 0.7472, 0.7472, 0.7458, 0.7446, 0.7433, 0.7407, 0.7395,
         0.7389, 0.7380, 0.7374, 0.7353, 0.7350, 0.7350, 0.7349, 0.7349, 0.7349,
         0.7346, 0.7344, 0.7341, 0.7334, 0.7319, 0.7317, 0.7314, 0.7313, 0.7310,
         0.7310, 0.7308, 0.7307, 0.7306, 0.7303, 0.7301, 0.7283, 0.7280, 0.7277,
         0.7274, 0.7273, 0.7271, 0.7267, 0.7262, 0.7260, 0.7258, 0.7257, 0.7256,
         0.7254, 0.7252, 0.7252, 0.7249, 0.7247]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7517, 0.7476, 0.7464, 0.7450, 0.7447, 0.7420, 0.7418, 0.7398,
         0.7376, 0.7371, 0.7368, 0.7358, 0.7358, 0.7356, 0.7356, 0.7355, 0.7348,
         0.7337, 0.7335, 0.7323, 0.7319, 0.7313, 0.7310, 0.7309, 0.7305, 0.7303,
         0.7303, 0.7301, 0.7298, 0.7297, 0.7295, 0.7295, 0.7291, 0.7289, 0.7288,
         0.7287, 0.7286, 0.7284, 0.7282, 0.7277, 0.7263, 0.7263, 0.7262, 0.7261,
         0.7257, 0.7257, 0.7257, 0.7255, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7657, 0.7493, 0.7482, 0.7472, 0.7471, 0.7449, 0.7441, 0.7429, 0.7401,
         0.7387, 0.7383, 0.7376, 0.7375, 0.7374, 0.7373, 0.7365, 0.7353, 0.7336,
         0.7332, 0.7332, 0.7327, 0.7326, 0.7323, 0.7316, 0.7315, 0.7312, 0.7312,
         0.7312, 0.7311, 0.7310, 0.7299, 0.7299, 0.7296, 0.7291, 0.7289, 0.7287,
         0.7286, 0.7285, 0.7273, 0.7272, 0.7270, 0.7268, 0.7263, 0.7263, 0.7249,
         0.7247, 0.7247, 0.7247, 0.7245, 0.7245]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7663, 0.7513, 0.7502, 0.7487, 0.7457, 0.7443, 0.7430, 0.7417, 0.7389,
         0.7388, 0.7384, 0.7377, 0.7366, 0.7361, 0.7361, 0.7359, 0.7355, 0.7351,
         0.7346, 0.7335, 0.7332, 0.7332, 0.7327, 0.7325, 0.7318, 0.7318, 0.7316,
         0.7310, 0.7309, 0.7304, 0.7303, 0.7298, 0.7295, 0.7294, 0.7291, 0.7291,
         0.7291, 0.7285, 0.7279, 0.7276, 0.7275, 0.7273, 0.7271, 0.7270, 0.7268,
         0.7267, 0.7264, 0.7262, 0.7257, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7521, 0.7479, 0.7471, 0.7459, 0.7448, 0.7436, 0.7433, 0.7392,
         0.7388, 0.7385, 0.7384, 0.7376, 0.7369, 0.7366, 0.7364, 0.7356, 0.7355,
         0.7339, 0.7338, 0.7330, 0.7327, 0.7325, 0.7319, 0.7316, 0.7315, 0.7313,
         0.7303, 0.7301, 0.7300, 0.7300, 0.7297, 0.7295, 0.7293, 0.7291, 0.7290,
         0.7288, 0.7286, 0.7272, 0.7271, 0.7271, 0.7267, 0.7267, 0.7267, 0.7262,
         0.7258, 0.7258, 0.7257, 0.7257, 0.7254]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7683, 0.7532, 0.7493, 0.7484, 0.7462, 0.7453, 0.7452, 0.7422, 0.7411,
         0.7390, 0.7390, 0.7383, 0.7378, 0.7369, 0.7367, 0.7361, 0.7347, 0.7344,
         0.7341, 0.7336, 0.7332, 0.7326, 0.7325, 0.7312, 0.7309, 0.7306, 0.7305,
         0.7305, 0.7304, 0.7303, 0.7296, 0.7293, 0.7293, 0.7289, 0.7285, 0.7284,
         0.7283, 0.7273, 0.7273, 0.7267, 0.7265, 0.7265, 0.7260, 0.7260, 0.7258,
         0.7252, 0.7252, 0.7251, 0.7249, 0.7248]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7579, 0.7513, 0.7471, 0.7470, 0.7467, 0.7466, 0.7432, 0.7412, 0.7397,
         0.7388, 0.7388, 0.7386, 0.7381, 0.7365, 0.7362, 0.7361, 0.7346, 0.7345,
         0.7345, 0.7331, 0.7324, 0.7324, 0.7310, 0.7309, 0.7307, 0.7305, 0.7305,
         0.7304, 0.7300, 0.7298, 0.7298, 0.7296, 0.7296, 0.7293, 0.7288, 0.7287,
         0.7284, 0.7279, 0.7278, 0.7276, 0.7269, 0.7268, 0.7266, 0.7265, 0.7261,
         0.7260, 0.7259, 0.7258, 0.7253, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7529, 0.7487, 0.7474, 0.7470, 0.7453, 0.7447, 0.7427, 0.7397,
         0.7384, 0.7381, 0.7380, 0.7375, 0.7375, 0.7363, 0.7360, 0.7348, 0.7344,
         0.7341, 0.7336, 0.7334, 0.7330, 0.7328, 0.7325, 0.7321, 0.7321, 0.7321,
         0.7314, 0.7314, 0.7311, 0.7308, 0.7304, 0.7300, 0.7297, 0.7297, 0.7295,
         0.7289, 0.7288, 0.7282, 0.7280, 0.7278, 0.7276, 0.7268, 0.7267, 0.7266,
         0.7260, 0.7259, 0.7258, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7611, 0.7518, 0.7480, 0.7473, 0.7470, 0.7465, 0.7445, 0.7388, 0.7384,
         0.7383, 0.7382, 0.7378, 0.7377, 0.7376, 0.7366, 0.7364, 0.7359, 0.7351,
         0.7347, 0.7344, 0.7335, 0.7332, 0.7326, 0.7319, 0.7316, 0.7314, 0.7314,
         0.7313, 0.7313, 0.7303, 0.7303, 0.7301, 0.7300, 0.7298, 0.7287, 0.7284,
         0.7282, 0.7277, 0.7275, 0.7275, 0.7274, 0.7273, 0.7271, 0.7270, 0.7264,
         0.7262, 0.7260, 0.7258, 0.7253, 0.7244]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7644, 0.7508, 0.7487, 0.7470, 0.7458, 0.7435, 0.7428, 0.7422, 0.7393,
         0.7392, 0.7383, 0.7383, 0.7375, 0.7370, 0.7370, 0.7367, 0.7367, 0.7358,
         0.7341, 0.7334, 0.7332, 0.7331, 0.7324, 0.7322, 0.7322, 0.7319, 0.7314,
         0.7310, 0.7309, 0.7307, 0.7304, 0.7303, 0.7301, 0.7301, 0.7297, 0.7291,
         0.7288, 0.7281, 0.7280, 0.7279, 0.7278, 0.7277, 0.7271, 0.7271, 0.7267,
         0.7266, 0.7263, 0.7262, 0.7262, 0.7262]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7520, 0.7471, 0.7467, 0.7461, 0.7455, 0.7441, 0.7431, 0.7402,
         0.7395, 0.7394, 0.7392, 0.7377, 0.7374, 0.7365, 0.7364, 0.7363, 0.7359,
         0.7347, 0.7344, 0.7332, 0.7330, 0.7326, 0.7324, 0.7322, 0.7315, 0.7313,
         0.7307, 0.7303, 0.7301, 0.7299, 0.7289, 0.7289, 0.7287, 0.7286, 0.7285,
         0.7276, 0.7276, 0.7274, 0.7273, 0.7270, 0.7269, 0.7263, 0.7261, 0.7259,
         0.7258, 0.7257, 0.7256, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7676, 0.7507, 0.7501, 0.7475, 0.7467, 0.7462, 0.7434, 0.7432, 0.7401,
         0.7393, 0.7386, 0.7379, 0.7378, 0.7366, 0.7357, 0.7354, 0.7339, 0.7334,
         0.7333, 0.7331, 0.7331, 0.7328, 0.7322, 0.7321, 0.7319, 0.7313, 0.7312,
         0.7311, 0.7311, 0.7309, 0.7305, 0.7304, 0.7303, 0.7302, 0.7296, 0.7293,
         0.7280, 0.7279, 0.7278, 0.7277, 0.7274, 0.7273, 0.7263, 0.7262, 0.7260,
         0.7258, 0.7257, 0.7257, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7620, 0.7543, 0.7487, 0.7454, 0.7450, 0.7448, 0.7432, 0.7405, 0.7398,
         0.7383, 0.7381, 0.7381, 0.7372, 0.7371, 0.7354, 0.7346, 0.7343, 0.7342,
         0.7337, 0.7336, 0.7334, 0.7334, 0.7328, 0.7326, 0.7326, 0.7316, 0.7313,
         0.7310, 0.7308, 0.7305, 0.7303, 0.7299, 0.7299, 0.7299, 0.7294, 0.7293,
         0.7291, 0.7286, 0.7284, 0.7283, 0.7276, 0.7274, 0.7269, 0.7264, 0.7262,
         0.7260, 0.7259, 0.7258, 0.7255, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7684, 0.7519, 0.7479, 0.7466, 0.7461, 0.7458, 0.7443, 0.7432, 0.7397,
         0.7390, 0.7386, 0.7378, 0.7375, 0.7366, 0.7358, 0.7355, 0.7352, 0.7346,
         0.7345, 0.7343, 0.7338, 0.7334, 0.7333, 0.7328, 0.7328, 0.7324, 0.7314,
         0.7313, 0.7307, 0.7304, 0.7301, 0.7300, 0.7295, 0.7295, 0.7290, 0.7287,
         0.7287, 0.7283, 0.7282, 0.7277, 0.7276, 0.7274, 0.7272, 0.7271, 0.7268,
         0.7261, 0.7259, 0.7255, 0.7253, 0.7251]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7672, 0.7533, 0.7471, 0.7468, 0.7466, 0.7453, 0.7427, 0.7421, 0.7399,
         0.7390, 0.7382, 0.7373, 0.7368, 0.7363, 0.7355, 0.7350, 0.7348, 0.7345,
         0.7342, 0.7333, 0.7324, 0.7323, 0.7321, 0.7319, 0.7317, 0.7313, 0.7309,
         0.7308, 0.7307, 0.7304, 0.7302, 0.7301, 0.7296, 0.7292, 0.7288, 0.7286,
         0.7284, 0.7282, 0.7278, 0.7275, 0.7274, 0.7268, 0.7267, 0.7266, 0.7264,
         0.7263, 0.7259, 0.7250, 0.7247, 0.7246]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7675, 0.7527, 0.7491, 0.7477, 0.7466, 0.7451, 0.7445, 0.7417, 0.7395,
         0.7387, 0.7382, 0.7377, 0.7377, 0.7376, 0.7375, 0.7370, 0.7356, 0.7348,
         0.7347, 0.7342, 0.7333, 0.7325, 0.7316, 0.7314, 0.7313, 0.7312, 0.7309,
         0.7308, 0.7307, 0.7306, 0.7305, 0.7304, 0.7302, 0.7302, 0.7302, 0.7302,
         0.7300, 0.7293, 0.7291, 0.7283, 0.7281, 0.7277, 0.7273, 0.7273, 0.7270,
         0.7270, 0.7265, 0.7257, 0.7257, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7673, 0.7499, 0.7496, 0.7481, 0.7455, 0.7451, 0.7445, 0.7418, 0.7398,
         0.7396, 0.7391, 0.7386, 0.7376, 0.7373, 0.7368, 0.7360, 0.7359, 0.7352,
         0.7342, 0.7336, 0.7331, 0.7327, 0.7317, 0.7316, 0.7316, 0.7313, 0.7312,
         0.7306, 0.7306, 0.7305, 0.7303, 0.7301, 0.7301, 0.7298, 0.7298, 0.7298,
         0.7294, 0.7288, 0.7286, 0.7279, 0.7278, 0.7271, 0.7268, 0.7265, 0.7262,
         0.7261, 0.7260, 0.7256, 0.7255, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7665, 0.7523, 0.7493, 0.7478, 0.7448, 0.7445, 0.7422, 0.7417, 0.7397,
         0.7393, 0.7392, 0.7387, 0.7387, 0.7386, 0.7377, 0.7374, 0.7367, 0.7351,
         0.7344, 0.7334, 0.7334, 0.7331, 0.7330, 0.7329, 0.7323, 0.7320, 0.7315,
         0.7315, 0.7311, 0.7309, 0.7307, 0.7305, 0.7301, 0.7296, 0.7296, 0.7293,
         0.7290, 0.7289, 0.7280, 0.7275, 0.7275, 0.7272, 0.7267, 0.7267, 0.7266,
         0.7265, 0.7265, 0.7263, 0.7261, 0.7260]], device='cuda:0')
after merge:  gt_cnt:  43
gt_cnt:  42
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  38
gt_cnt:  42
gt_cnt:  41
gt_cnt:  37
gt_cnt:  36
gt_cnt:  35
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  35
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  35
gt_cnt:  42
gt_cnt:  40
gt_cnt:  37
gt_cnt:  35
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  36
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  41
gt_cnt:  42
gt_cnt:  41
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  43
gt_cnt:  37
gt_cnt:  38
gt_cnt:  42
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  42
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  38
gt_cnt:  43
gt_cnt:  42
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  43
gt_cnt:  37
gt_cnt:  37
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  35
gt_cnt:  36
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  36
gt_cnt:  36
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  35
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  35
gt_cnt:  35
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  36
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  44
gt_cnt:  42
gt_cnt:  44
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  35
gt_cnt:  35
gt_cnt:  38
gt_cnt:  35
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  36
gt_cnt:  41
gt_cnt:  41
gt_cnt:  41
gt_cnt:  44
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  42
gt_cnt:  39
gt_cnt:  36
gt_cnt:  36
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  41
gt_cnt:  40
gt_cnt:  41
gt_cnt:  42
gt_cnt:  42
gt_cnt:  41
gt_cnt:  37
gt_cnt:  35
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  36
gt_cnt:  33
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  35
gt_cnt:  35
gt_cnt:  38
gt_cnt:  35
gt_cnt:  38
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  39
gt_cnt:  42
gt_cnt:  40
gt_cnt:  42
gt_cnt:  43
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  44
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  42
gt_cnt:  35
gt_cnt:  34
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  35
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  34
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  43
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  37
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  43
gt_cnt:  37
gt_cnt:  37
gt_cnt:  44
gt_cnt:  42
torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7659, 0.7506, 0.7481, 0.7471, 0.7449, 0.7446, 0.7425, 0.7417, 0.7416,
         0.7394, 0.7387, 0.7385, 0.7378, 0.7377, 0.7373, 0.7364, 0.7348, 0.7346,
         0.7345, 0.7334, 0.7333, 0.7330, 0.7330, 0.7324, 0.7323, 0.7317, 0.7304,
         0.7304, 0.7302, 0.7300, 0.7300, 0.7299, 0.7299, 0.7298, 0.7296, 0.7293,
         0.7281, 0.7276, 0.7275, 0.7274, 0.7273, 0.7270, 0.7270, 0.7268, 0.7265,
         0.7261, 0.7260, 0.7259, 0.7256, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7680, 0.7531, 0.7473, 0.7465, 0.7459, 0.7453, 0.7430, 0.7416, 0.7390,
         0.7388, 0.7384, 0.7382, 0.7376, 0.7373, 0.7366, 0.7361, 0.7354, 0.7350,
         0.7348, 0.7340, 0.7340, 0.7329, 0.7326, 0.7325, 0.7321, 0.7319, 0.7317,
         0.7313, 0.7313, 0.7311, 0.7311, 0.7305, 0.7300, 0.7296, 0.7294, 0.7286,
         0.7286, 0.7280, 0.7277, 0.7274, 0.7273, 0.7271, 0.7271, 0.7270, 0.7268,
         0.7264, 0.7259, 0.7259, 0.7259, 0.7256]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7652, 0.7527, 0.7475, 0.7474, 0.7467, 0.7439, 0.7438, 0.7415, 0.7392,
         0.7389, 0.7386, 0.7382, 0.7379, 0.7372, 0.7372, 0.7370, 0.7364, 0.7340,
         0.7332, 0.7325, 0.7323, 0.7323, 0.7322, 0.7320, 0.7319, 0.7319, 0.7318,
         0.7318, 0.7315, 0.7298, 0.7298, 0.7296, 0.7290, 0.7288, 0.7286, 0.7282,
         0.7281, 0.7280, 0.7279, 0.7276, 0.7274, 0.7272, 0.7270, 0.7270, 0.7267,
         0.7263, 0.7259, 0.7258, 0.7256, 0.7255]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7654, 0.7530, 0.7497, 0.7471, 0.7452, 0.7442, 0.7436, 0.7403, 0.7400,
         0.7388, 0.7379, 0.7374, 0.7374, 0.7373, 0.7370, 0.7359, 0.7358, 0.7349,
         0.7346, 0.7343, 0.7341, 0.7333, 0.7326, 0.7322, 0.7319, 0.7319, 0.7317,
         0.7315, 0.7312, 0.7307, 0.7305, 0.7298, 0.7298, 0.7290, 0.7289, 0.7288,
         0.7286, 0.7285, 0.7281, 0.7278, 0.7271, 0.7271, 0.7270, 0.7267, 0.7267,
         0.7265, 0.7264, 0.7263, 0.7263, 0.7260]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7592, 0.7525, 0.7479, 0.7469, 0.7462, 0.7448, 0.7427, 0.7390, 0.7388,
         0.7388, 0.7387, 0.7384, 0.7367, 0.7363, 0.7363, 0.7345, 0.7342, 0.7330,
         0.7328, 0.7324, 0.7323, 0.7319, 0.7318, 0.7317, 0.7317, 0.7316, 0.7315,
         0.7308, 0.7307, 0.7304, 0.7300, 0.7297, 0.7294, 0.7294, 0.7289, 0.7283,
         0.7276, 0.7273, 0.7273, 0.7269, 0.7268, 0.7261, 0.7256, 0.7256, 0.7254,
         0.7254, 0.7254, 0.7252, 0.7245, 0.7245]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7639, 0.7527, 0.7474, 0.7468, 0.7452, 0.7446, 0.7421, 0.7417, 0.7396,
         0.7384, 0.7382, 0.7377, 0.7375, 0.7371, 0.7363, 0.7361, 0.7357, 0.7353,
         0.7353, 0.7348, 0.7335, 0.7332, 0.7331, 0.7329, 0.7318, 0.7317, 0.7315,
         0.7313, 0.7309, 0.7308, 0.7305, 0.7304, 0.7298, 0.7292, 0.7289, 0.7288,
         0.7282, 0.7281, 0.7270, 0.7267, 0.7265, 0.7263, 0.7262, 0.7261, 0.7261,
         0.7259, 0.7257, 0.7256, 0.7255, 0.7252]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7666, 0.7528, 0.7481, 0.7480, 0.7464, 0.7439, 0.7429, 0.7418, 0.7403,
         0.7389, 0.7389, 0.7389, 0.7377, 0.7376, 0.7376, 0.7376, 0.7372, 0.7358,
         0.7341, 0.7341, 0.7333, 0.7332, 0.7331, 0.7328, 0.7318, 0.7317, 0.7316,
         0.7308, 0.7305, 0.7303, 0.7302, 0.7300, 0.7296, 0.7295, 0.7294, 0.7288,
         0.7281, 0.7279, 0.7277, 0.7276, 0.7274, 0.7269, 0.7268, 0.7266, 0.7264,
         0.7264, 0.7260, 0.7253, 0.7253, 0.7253]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7666, 0.7515, 0.7507, 0.7480, 0.7476, 0.7451, 0.7442, 0.7426, 0.7389,
         0.7386, 0.7381, 0.7381, 0.7374, 0.7371, 0.7369, 0.7369, 0.7364, 0.7362,
         0.7350, 0.7341, 0.7337, 0.7334, 0.7327, 0.7318, 0.7318, 0.7308, 0.7307,
         0.7306, 0.7304, 0.7303, 0.7302, 0.7302, 0.7297, 0.7296, 0.7296, 0.7291,
         0.7291, 0.7287, 0.7271, 0.7269, 0.7266, 0.7260, 0.7259, 0.7259, 0.7257,
         0.7252, 0.7252, 0.7251, 0.7251, 0.7250]], device='cuda:0')
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
top10 scores:  tensor([[0.7667, 0.7524, 0.7478, 0.7469, 0.7447, 0.7440, 0.7430, 0.7426, 0.7388,
         0.7387, 0.7384, 0.7382, 0.7380, 0.7379, 0.7378, 0.7376, 0.7376, 0.7356,
         0.7351, 0.7348, 0.7336, 0.7326, 0.7321, 0.7320, 0.7319, 0.7316, 0.7314,
         0.7313, 0.7312, 0.7309, 0.7300, 0.7296, 0.7287, 0.7281, 0.7280, 0.7279,
         0.7278, 0.7276, 0.7275, 0.7271, 0.7269, 0.7267, 0.7266, 0.7261, 0.7260,
         0.7259, 0.7258, 0.7255, 0.7255, 0.7254]], device='cuda:0')
Frame 1: Detected: 2
Frame 1: FP: 48.0, Misses: 39.0
Frame 2: Detected: 6
Frame 2: FP: 44.0, Misses: 37.0
Frame 3: Detected: 4
Frame 3: FP: 46.0, Misses: 38.0
Frame 4: Detected: 2
Frame 4: FP: 48.0, Misses: 39.0
Frame 5: Detected: 3
Frame 5: FP: 47.0, Misses: 38.0
Frame 6: Detected: 2
Frame 6: FP: 48.0, Misses: 40.0
Frame 7: Detected: 2
Frame 7: FP: 48.0, Misses: 41.0
Frame 8: Detected: 2
Frame 8: FP: 48.0, Misses: 42.0
Frame 9: Detected: 4
Frame 9: FP: 46.0, Misses: 38.0
Frame 10: Detected: 3
Frame 10: FP: 47.0, Misses: 38.0
Frame 11: Detected: 4
Frame 11: FP: 46.0, Misses: 35.0
Frame 12: Detected: 3
Frame 12: FP: 47.0, Misses: 35.0
Frame 13: Detected: 2
Frame 13: FP: 48.0, Misses: 36.0
Frame 14: Detected: 2
Frame 14: FP: 48.0, Misses: 37.0
Frame 15: Detected: 1
Frame 15: FP: 49.0, Misses: 38.0
Frame 16: Detected: 6
Frame 16: FP: 44.0, Misses: 33.0
Frame 17: Detected: 6
Frame 17: FP: 44.0, Misses: 32.0
Frame 18: Detected: 5
Frame 18: FP: 45.0, Misses: 32.0
Frame 19: Detected: 1
Frame 19: FP: 49.0, Misses: 37.0
Frame 20: Detected: 2
Frame 20: FP: 48.0, Misses: 35.0
Frame 21: Detected: 4
Frame 21: FP: 46.0, Misses: 33.0
Frame 22: Detected: 3
Frame 22: FP: 47.0, Misses: 34.0
Frame 23: Detected: 4
Frame 23: FP: 46.0, Misses: 35.0
Frame 24: Detected: 2
Frame 24: FP: 48.0, Misses: 38.0
Frame 25: Detected: 1
Frame 25: FP: 49.0, Misses: 40.0
Frame 26: Detected: 2
Frame 26: FP: 48.0, Misses: 39.0
Frame 27: Detected: 1
Frame 27: FP: 49.0, Misses: 36.0
Frame 28: Detected: 2
Frame 28: FP: 48.0, Misses: 35.0
Frame 29: Detected: 2
Frame 29: FP: 48.0, Misses: 38.0
Frame 30: Detected: 2
Frame 30: FP: 48.0, Misses: 38.0
Frame 31: Detected: 3
Frame 31: FP: 47.0, Misses: 38.0
Frame 32: Detected: 3
Frame 32: FP: 47.0, Misses: 35.0
Frame 33: Detected: 3
Frame 33: FP: 47.0, Misses: 35.0
Frame 34: Detected: 2
Frame 34: FP: 48.0, Misses: 36.0
Frame 35: Detected: 1
Frame 35: FP: 49.0, Misses: 39.0
Frame 36: Detected: 3
Frame 36: FP: 47.0, Misses: 38.0
Frame 37: Detected: 3
Frame 37: FP: 47.0, Misses: 40.0
Frame 38: Detected: 2
Frame 38: FP: 48.0, Misses: 40.0
Frame 39: Detected: 2
Frame 39: FP: 48.0, Misses: 42.0
Frame 40: Detected: 2
Frame 40: FP: 48.0, Misses: 39.0
Frame 41: Detected: 4
Frame 41: FP: 46.0, Misses: 38.0
Frame 42: Detected: 4
Frame 42: FP: 46.0, Misses: 37.0
Frame 43: Detected: 6
Frame 43: FP: 44.0, Misses: 34.0
Frame 44: Detected: 4
Frame 44: FP: 46.0, Misses: 35.0
Frame 45: Detected: 4
Frame 45: FP: 46.0, Misses: 34.0
Frame 46: Detected: 2
Frame 46: FP: 48.0, Misses: 35.0
Frame 47: Detected: 4
Frame 47: FP: 46.0, Misses: 35.0
Frame 48: Detected: 2
Frame 48: FP: 48.0, Misses: 36.0
Frame 49: Detected: 2
Frame 49: FP: 48.0, Misses: 35.0
Frame 50: Detected: 4
Frame 50: FP: 46.0, Misses: 32.0
Frame 51: Detected: 3
Frame 51: FP: 47.0, Misses: 34.0
Frame 52: Detected: 1
Frame 52: FP: 49.0, Misses: 36.0
Frame 53: Detected: 2
Frame 53: FP: 48.0, Misses: 35.0
Frame 54: Detected: 3
Frame 54: FP: 47.0, Misses: 32.0
Frame 55: Detected: 4
Frame 55: FP: 46.0, Misses: 34.0
Frame 56: Detected: 4
Frame 56: FP: 46.0, Misses: 36.0
Frame 57: Detected: 5
Frame 57: FP: 45.0, Misses: 35.0
Frame 58: Detected: 3
Frame 58: FP: 47.0, Misses: 37.0
Frame 59: Detected: 3
Frame 59: FP: 47.0, Misses: 38.0
Frame 60: Detected: 2
Frame 60: FP: 48.0, Misses: 37.0
Frame 61: Detected: 1
Frame 61: FP: 49.0, Misses: 39.0
Frame 62: Detected: 0
Frame 62: FP: 50.0, Misses: 39.0
Frame 63: Detected: 4
Frame 63: FP: 46.0, Misses: 35.0
Frame 64: Detected: 4
Frame 64: FP: 46.0, Misses: 37.0
Frame 65: Detected: 4
Frame 65: FP: 46.0, Misses: 38.0
Frame 66: Detected: 3
Frame 66: FP: 47.0, Misses: 37.0
Frame 67: Detected: 4
Frame 67: FP: 46.0, Misses: 37.0
Frame 68: Detected: 1
Frame 68: FP: 49.0, Misses: 39.0
Frame 69: Detected: 4
Frame 69: FP: 46.0, Misses: 37.0
Frame 70: Detected: 3
Frame 70: FP: 47.0, Misses: 39.0
Frame 71: Detected: 9
Frame 71: FP: 41.0, Misses: 33.0
Frame 72: Detected: 5
Frame 72: FP: 45.0, Misses: 37.0
Frame 73: Detected: 4
Frame 73: FP: 46.0, Misses: 39.0
Frame 74: Detected: 5
Frame 74: FP: 45.0, Misses: 36.0
Frame 75: Detected: 4
Frame 75: FP: 46.0, Misses: 36.0
Frame 76: Detected: 2
Frame 76: FP: 48.0, Misses: 37.0
Frame 77: Detected: 1
Frame 77: FP: 49.0, Misses: 36.0
Frame 78: Detected: 6
Frame 78: FP: 44.0, Misses: 32.0
Frame 79: Detected: 4
Frame 79: FP: 46.0, Misses: 34.0
Frame 80: Detected: 2
Frame 80: FP: 48.0, Misses: 34.0
Frame 81: Detected: 2
Frame 81: FP: 48.0, Misses: 35.0
Frame 82: Detected: 4
Frame 82: FP: 46.0, Misses: 33.0
Frame 83: Detected: 4
Frame 83: FP: 46.0, Misses: 33.0
Frame 84: Detected: 3
Frame 84: FP: 47.0, Misses: 33.0
Frame 85: Detected: 4
Frame 85: FP: 46.0, Misses: 33.0
Frame 86: Detected: 3
Frame 86: FP: 47.0, Misses: 34.0
Frame 87: Detected: 2
Frame 87: FP: 48.0, Misses: 35.0
Frame 88: Detected: 3
Frame 88: FP: 47.0, Misses: 34.0
Frame 89: Detected: 3
Frame 89: FP: 47.0, Misses: 34.0
Frame 90: Detected: 2
Frame 90: FP: 48.0, Misses: 33.0
Frame 91: Detected: 5
Frame 91: FP: 45.0, Misses: 31.0
Frame 92: Detected: 2
Frame 92: FP: 48.0, Misses: 35.0
Frame 93: Detected: 4
Frame 93: FP: 46.0, Misses: 34.0
Frame 94: Detected: 4
Frame 94: FP: 46.0, Misses: 34.0
Frame 95: Detected: 2
Frame 95: FP: 48.0, Misses: 37.0
Frame 96: Detected: 8
Frame 96: FP: 42.0, Misses: 31.0
Frame 97: Detected: 2
Frame 97: FP: 48.0, Misses: 38.0
Frame 98: Detected: 2
Frame 98: FP: 48.0, Misses: 38.0
Frame 99: Detected: 5
Frame 99: FP: 45.0, Misses: 34.0
Frame 100: Detected: 2
Frame 100: FP: 48.0, Misses: 37.0
Frame 101: Detected: 4
Frame 101: FP: 46.0, Misses: 33.0
Frame 102: Detected: 3
Frame 102: FP: 47.0, Misses: 35.0
Frame 103: Detected: 1
Frame 103: FP: 49.0, Misses: 39.0
Frame 104: Detected: 1
Frame 104: FP: 49.0, Misses: 37.0
Frame 105: Detected: 6
Frame 105: FP: 44.0, Misses: 29.0
Frame 106: Detected: 2
Frame 106: FP: 48.0, Misses: 34.0
Frame 107: Detected: 1
Frame 107: FP: 49.0, Misses: 36.0
Frame 108: Detected: 4
Frame 108: FP: 46.0, Misses: 32.0
Frame 109: Detected: 4
Frame 109: FP: 46.0, Misses: 32.0
Frame 110: Detected: 2
Frame 110: FP: 48.0, Misses: 35.0
Frame 111: Detected: 1
Frame 111: FP: 49.0, Misses: 36.0
Frame 112: Detected: 2
Frame 112: FP: 48.0, Misses: 35.0
Frame 113: Detected: 1
Frame 113: FP: 49.0, Misses: 36.0
Frame 114: Detected: 3
Frame 114: FP: 47.0, Misses: 34.0
Frame 115: Detected: 3
Frame 115: FP: 47.0, Misses: 36.0
Frame 116: Detected: 2
Frame 116: FP: 48.0, Misses: 39.0
Frame 117: Detected: 0
Frame 117: FP: 50.0, Misses: 39.0
Frame 118: Detected: 3
Frame 118: FP: 47.0, Misses: 36.0
Frame 119: Detected: 7
Frame 119: FP: 43.0, Misses: 32.0
Frame 120: Detected: 5
Frame 120: FP: 45.0, Misses: 34.0
Frame 121: Detected: 2
Frame 121: FP: 48.0, Misses: 38.0
Frame 122: Detected: 5
Frame 122: FP: 45.0, Misses: 36.0
Frame 123: Detected: 3
Frame 123: FP: 47.0, Misses: 38.0
Frame 124: Detected: 1
Frame 124: FP: 49.0, Misses: 39.0
Frame 125: Detected: 2
Frame 125: FP: 48.0, Misses: 35.0
Frame 126: Detected: 4
Frame 126: FP: 46.0, Misses: 33.0
Frame 127: Detected: 4
Frame 127: FP: 46.0, Misses: 33.0
Frame 128: Detected: 3
Frame 128: FP: 47.0, Misses: 35.0
Frame 129: Detected: 2
Frame 129: FP: 48.0, Misses: 37.0
Frame 130: Detected: 3
Frame 130: FP: 47.0, Misses: 36.0
Frame 131: Detected: 3
Frame 131: FP: 47.0, Misses: 37.0
Frame 132: Detected: 2
Frame 132: FP: 48.0, Misses: 37.0
Frame 133: Detected: 1
Frame 133: FP: 49.0, Misses: 37.0
Frame 134: Detected: 3
Frame 134: FP: 47.0, Misses: 34.0
Frame 135: Detected: 3
Frame 135: FP: 47.0, Misses: 35.0
Frame 136: Detected: 3
Frame 136: FP: 47.0, Misses: 34.0
Frame 137: Detected: 3
Frame 137: FP: 47.0, Misses: 33.0
Frame 138: Detected: 5
Frame 138: FP: 45.0, Misses: 32.0
Frame 139: Detected: 4
Frame 139: FP: 46.0, Misses: 35.0
Frame 140: Detected: 1
Frame 140: FP: 49.0, Misses: 39.0
Frame 141: Detected: 1
Frame 141: FP: 49.0, Misses: 39.0
Frame 142: Detected: 4
Frame 142: FP: 46.0, Misses: 35.0
Frame 143: Detected: 2
Frame 143: FP: 48.0, Misses: 36.0
Frame 144: Detected: 1
Frame 144: FP: 49.0, Misses: 40.0
Frame 145: Detected: 4
Frame 145: FP: 46.0, Misses: 37.0
Frame 146: Detected: 6
Frame 146: FP: 44.0, Misses: 35.0
Frame 147: Detected: 3
Frame 147: FP: 47.0, Misses: 39.0
Frame 148: Detected: 1
Frame 148: FP: 49.0, Misses: 40.0
Frame 149: Detected: 4
Frame 149: FP: 46.0, Misses: 36.0
Frame 150: Detected: 4
Frame 150: FP: 46.0, Misses: 35.0
Frame 151: Detected: 2
Frame 151: FP: 48.0, Misses: 39.0
Frame 152: Detected: 4
Frame 152: FP: 46.0, Misses: 36.0
Frame 153: Detected: 3
Frame 153: FP: 47.0, Misses: 37.0
Frame 154: Detected: 6
Frame 154: FP: 44.0, Misses: 33.0
Frame 155: Detected: 9
Frame 155: FP: 41.0, Misses: 31.0
Frame 156: Detected: 7
Frame 156: FP: 43.0, Misses: 34.0
Frame 157: Detected: 6
Frame 157: FP: 44.0, Misses: 34.0
Frame 158: Detected: 8
Frame 158: FP: 42.0, Misses: 32.0
Frame 159: Detected: 4
Frame 159: FP: 46.0, Misses: 36.0
Frame 160: Detected: 2
Frame 160: FP: 48.0, Misses: 40.0
Frame 161: Detected: 4
Frame 161: FP: 46.0, Misses: 36.0
Frame 162: Detected: 4
Frame 162: FP: 46.0, Misses: 36.0
Frame 163: Detected: 4
Frame 163: FP: 46.0, Misses: 35.0
Frame 164: Detected: 5
Frame 164: FP: 45.0, Misses: 37.0
Frame 165: Detected: 2
Frame 165: FP: 48.0, Misses: 39.0
Frame 166: Detected: 2
Frame 166: FP: 48.0, Misses: 39.0
Frame 167: Detected: 5
Frame 167: FP: 45.0, Misses: 37.0
Frame 168: Detected: 6
Frame 168: FP: 44.0, Misses: 35.0
Frame 169: Detected: 7
Frame 169: FP: 43.0, Misses: 33.0
Frame 170: Detected: 2
Frame 170: FP: 48.0, Misses: 35.0
Frame 171: Detected: 1
Frame 171: FP: 49.0, Misses: 34.0
Frame 172: Detected: 3
Frame 172: FP: 47.0, Misses: 34.0
Frame 173: Detected: 4
Frame 173: FP: 46.0, Misses: 32.0
Frame 174: Detected: 2
Frame 174: FP: 48.0, Misses: 35.0
Frame 175: Detected: 2
Frame 175: FP: 48.0, Misses: 32.0
Frame 176: Detected: 0
Frame 176: FP: 50.0, Misses: 35.0
Frame 177: Detected: 2
Frame 177: FP: 48.0, Misses: 34.0
Frame 178: Detected: 2
Frame 178: FP: 48.0, Misses: 36.0
Frame 179: Detected: 5
Frame 179: FP: 45.0, Misses: 33.0
Frame 180: Detected: 6
Frame 180: FP: 44.0, Misses: 34.0
Frame 181: Detected: 2
Frame 181: FP: 48.0, Misses: 38.0
Frame 182: Detected: 4
Frame 182: FP: 46.0, Misses: 35.0
Frame 183: Detected: 4
Frame 183: FP: 46.0, Misses: 35.0
Frame 184: Detected: 5
Frame 184: FP: 45.0, Misses: 33.0
Frame 185: Detected: 5
Frame 185: FP: 45.0, Misses: 34.0
Frame 186: Detected: 1
Frame 186: FP: 49.0, Misses: 38.0
Frame 187: Detected: 6
Frame 187: FP: 44.0, Misses: 33.0
Frame 188: Detected: 3
Frame 188: FP: 47.0, Misses: 35.0
Frame 189: Detected: 1
Frame 189: FP: 49.0, Misses: 36.0
Frame 190: Detected: 3
Frame 190: FP: 47.0, Misses: 34.0
Frame 191: Detected: 6
Frame 191: FP: 44.0, Misses: 34.0
Frame 192: Detected: 5
Frame 192: FP: 45.0, Misses: 34.0
Frame 193: Detected: 1
Frame 193: FP: 49.0, Misses: 37.0
Frame 194: Detected: 5
Frame 194: FP: 45.0, Misses: 34.0
Frame 195: Detected: 5
Frame 195: FP: 45.0, Misses: 34.0
Frame 196: Detected: 3
Frame 196: FP: 47.0, Misses: 35.0
Frame 197: Detected: 3
Frame 197: FP: 47.0, Misses: 35.0
Frame 198: Detected: 2
Frame 198: FP: 48.0, Misses: 36.0
Frame 199: Detected: 2
Frame 199: FP: 48.0, Misses: 35.0
Frame 200: Detected: 2
Frame 200: FP: 48.0, Misses: 36.0
Frame 201: Detected: 2
Frame 201: FP: 48.0, Misses: 36.0
Frame 202: Detected: 4
Frame 202: FP: 46.0, Misses: 33.0
Frame 203: Detected: 3
Frame 203: FP: 47.0, Misses: 32.0
Frame 204: Detected: 8
Frame 204: FP: 42.0, Misses: 27.0
Frame 205: Detected: 5
Frame 205: FP: 45.0, Misses: 30.0
Frame 206: Detected: 2
Frame 206: FP: 48.0, Misses: 33.0
Frame 207: Detected: 2
Frame 207: FP: 48.0, Misses: 35.0
Frame 208: Detected: 1
Frame 208: FP: 49.0, Misses: 36.0
Frame 209: Detected: 3
Frame 209: FP: 47.0, Misses: 38.0
Frame 210: Detected: 1
Frame 210: FP: 49.0, Misses: 41.0
Frame 211: Detected: 3
Frame 211: FP: 47.0, Misses: 38.0
Frame 212: Detected: 1
Frame 212: FP: 49.0, Misses: 39.0
Frame 213: Detected: 4
Frame 213: FP: 46.0, Misses: 35.0
Frame 214: Detected: 5
Frame 214: FP: 45.0, Misses: 35.0
Frame 215: Detected: 6
Frame 215: FP: 44.0, Misses: 35.0
Frame 216: Detected: 5
Frame 216: FP: 45.0, Misses: 34.0
Frame 217: Detected: 4
Frame 217: FP: 46.0, Misses: 35.0
Frame 218: Detected: 3
Frame 218: FP: 47.0, Misses: 34.0
Frame 219: Detected: 7
Frame 219: FP: 43.0, Misses: 30.0
Frame 220: Detected: 4
Frame 220: FP: 46.0, Misses: 32.0
Frame 221: Detected: 1
Frame 221: FP: 49.0, Misses: 34.0
Frame 222: Detected: 2
Frame 222: FP: 48.0, Misses: 33.0
Frame 223: Detected: 2
Frame 223: FP: 48.0, Misses: 32.0
Frame 224: Detected: 1
Frame 224: FP: 49.0, Misses: 32.0
Frame 225: Detected: 2
Frame 225: FP: 48.0, Misses: 33.0
Frame 226: Detected: 0
Frame 226: FP: 50.0, Misses: 38.0
Frame 227: Detected: 2
Frame 227: FP: 48.0, Misses: 37.0
Frame 228: Detected: 0
Frame 228: FP: 50.0, Misses: 40.0
Frame 229: Detected: 1
Frame 229: FP: 49.0, Misses: 39.0
Frame 230: Detected: 1
Frame 230: FP: 49.0, Misses: 38.0
Frame 231: Detected: 4
Frame 231: FP: 46.0, Misses: 36.0
Frame 232: Detected: 2
Frame 232: FP: 48.0, Misses: 38.0
Frame 233: Detected: 1
Frame 233: FP: 49.0, Misses: 39.0
Frame 234: Detected: 1
Frame 234: FP: 49.0, Misses: 39.0
Frame 235: Detected: 2
Frame 235: FP: 48.0, Misses: 37.0
Frame 236: Detected: 6
Frame 236: FP: 44.0, Misses: 35.0
Frame 237: Detected: 3
Frame 237: FP: 47.0, Misses: 38.0
Frame 238: Detected: 6
Frame 238: FP: 44.0, Misses: 33.0
Frame 239: Detected: 6
Frame 239: FP: 44.0, Misses: 33.0
Frame 240: Detected: 3
Frame 240: FP: 47.0, Misses: 36.0
Frame 241: Detected: 1
Frame 241: FP: 49.0, Misses: 35.0
Frame 242: Detected: 5
Frame 242: FP: 45.0, Misses: 31.0
Frame 243: Detected: 3
Frame 243: FP: 47.0, Misses: 33.0
Frame 244: Detected: 5
Frame 244: FP: 45.0, Misses: 31.0
Frame 245: Detected: 4
Frame 245: FP: 46.0, Misses: 32.0
Frame 246: Detected: 2
Frame 246: FP: 48.0, Misses: 34.0
Frame 247: Detected: 2
Frame 247: FP: 48.0, Misses: 36.0
Frame 248: Detected: 2
Frame 248: FP: 48.0, Misses: 37.0
Frame 249: Detected: 1
Frame 249: FP: 49.0, Misses: 40.0
Frame 250: Detected: 1
Frame 250: FP: 49.0, Misses: 40.0
Frame 251: Detected: 0
Frame 251: FP: 50.0, Misses: 39.0
Frame 252: Detected: 3
Frame 252: FP: 47.0, Misses: 37.0
Frame 253: Detected: 3
Frame 253: FP: 47.0, Misses: 37.0
Frame 254: Detected: 5
Frame 254: FP: 45.0, Misses: 35.0
Frame 255: Detected: 4
Frame 255: FP: 46.0, Misses: 34.0
Frame 256: Detected: 2
Frame 256: FP: 48.0, Misses: 36.0
Frame 257: Detected: 6
Frame 257: FP: 44.0, Misses: 32.0
Frame 258: Detected: 7
Frame 258: FP: 43.0, Misses: 32.0
Frame 259: Detected: 5
Frame 259: FP: 45.0, Misses: 33.0
Frame 260: Detected: 6
Frame 260: FP: 44.0, Misses: 31.0
Frame 261: Detected: 4
Frame 261: FP: 46.0, Misses: 35.0
Frame 262: Detected: 2
Frame 262: FP: 48.0, Misses: 37.0
Frame 263: Detected: 3
Frame 263: FP: 47.0, Misses: 37.0
Frame 264: Detected: 4
Frame 264: FP: 46.0, Misses: 36.0
Frame 265: Detected: 2
Frame 265: FP: 48.0, Misses: 36.0
Frame 266: Detected: 3
Frame 266: FP: 47.0, Misses: 37.0
Frame 267: Detected: 2
Frame 267: FP: 48.0, Misses: 38.0
Frame 268: Detected: 5
Frame 268: FP: 45.0, Misses: 36.0
Frame 269: Detected: 7
Frame 269: FP: 43.0, Misses: 37.0
Frame 270: Detected: 7
Frame 270: FP: 43.0, Misses: 34.0
Frame 271: Detected: 3
Frame 271: FP: 47.0, Misses: 39.0
Frame 272: Detected: 3
Frame 272: FP: 47.0, Misses: 38.0
Frame 273: Detected: 3
Frame 273: FP: 47.0, Misses: 39.0
Frame 274: Detected: 2
Frame 274: FP: 48.0, Misses: 39.0
Frame 275: Detected: 4
Frame 275: FP: 46.0, Misses: 39.0
Frame 276: Detected: 2
Frame 276: FP: 48.0, Misses: 40.0
Frame 277: Detected: 0
Frame 277: FP: 50.0, Misses: 44.0
Frame 278: Detected: 4
Frame 278: FP: 46.0, Misses: 38.0
Frame 279: Detected: 4
Frame 279: FP: 46.0, Misses: 36.0
Frame 280: Detected: 4
Frame 280: FP: 46.0, Misses: 36.0
Frame 281: Detected: 1
Frame 281: FP: 49.0, Misses: 40.0
Frame 282: Detected: 5
Frame 282: FP: 45.0, Misses: 36.0
Frame 283: Detected: 2
Frame 283: FP: 48.0, Misses: 38.0
Frame 284: Detected: 2
Frame 284: FP: 48.0, Misses: 35.0
Frame 285: Detected: 3
Frame 285: FP: 47.0, Misses: 35.0
Frame 286: Detected: 1
Frame 286: FP: 49.0, Misses: 37.0
Frame 287: Detected: 3
Frame 287: FP: 47.0, Misses: 34.0
Frame 288: Detected: 4
Frame 288: FP: 46.0, Misses: 36.0
Frame 289: Detected: 3
Frame 289: FP: 47.0, Misses: 37.0
Frame 290: Detected: 5
Frame 290: FP: 45.0, Misses: 34.0
Frame 291: Detected: 3
Frame 291: FP: 47.0, Misses: 38.0
Frame 292: Detected: 4
Frame 292: FP: 46.0, Misses: 37.0
Frame 293: Detected: 1
Frame 293: FP: 49.0, Misses: 39.0
Frame 294: Detected: 2
Frame 294: FP: 48.0, Misses: 38.0
Frame 295: Detected: 5
Frame 295: FP: 45.0, Misses: 35.0
Frame 296: Detected: 4
Frame 296: FP: 46.0, Misses: 36.0
Frame 297: Detected: 3
Frame 297: FP: 47.0, Misses: 36.0
Frame 298: Detected: 4
Frame 298: FP: 46.0, Misses: 35.0
Frame 299: Detected: 3
Frame 299: FP: 47.0, Misses: 36.0
Frame 300: Detected: 2
Frame 300: FP: 48.0, Misses: 37.0
Frame 301: Detected: 2
Frame 301: FP: 48.0, Misses: 37.0
Frame 302: Detected: 3
Frame 302: FP: 47.0, Misses: 35.0
Frame 303: Detected: 2
Frame 303: FP: 48.0, Misses: 35.0
Frame 304: Detected: 1
Frame 304: FP: 49.0, Misses: 38.0
Frame 305: Detected: 3
Frame 305: FP: 47.0, Misses: 36.0
Frame 306: Detected: 5
Frame 306: FP: 45.0, Misses: 35.0
Frame 307: Detected: 3
Frame 307: FP: 47.0, Misses: 36.0
Frame 308: Detected: 4
Frame 308: FP: 46.0, Misses: 35.0
Frame 309: Detected: 4
Frame 309: FP: 46.0, Misses: 34.0
Frame 310: Detected: 4
Frame 310: FP: 46.0, Misses: 36.0
Frame 311: Detected: 5
Frame 311: FP: 45.0, Misses: 36.0
Frame 312: Detected: 7
Frame 312: FP: 43.0, Misses: 32.0
Frame 313: Detected: 7
Frame 313: FP: 43.0, Misses: 32.0
Frame 314: Detected: 3
Frame 314: FP: 47.0, Misses: 35.0
Frame 315: Detected: 4
Frame 315: FP: 46.0, Misses: 33.0
Frame 316: Detected: 7
Frame 316: FP: 43.0, Misses: 28.0
Frame 317: Detected: 1
Frame 317: FP: 49.0, Misses: 34.0
Frame 318: Detected: 4
Frame 318: FP: 46.0, Misses: 32.0
Frame 319: Detected: 3
Frame 319: FP: 47.0, Misses: 34.0
Frame 320: Detected: 3
Frame 320: FP: 47.0, Misses: 32.0
Frame 321: Detected: 2
Frame 321: FP: 48.0, Misses: 33.0
Frame 322: Detected: 3
Frame 322: FP: 47.0, Misses: 35.0
Frame 323: Detected: 2
Frame 323: FP: 48.0, Misses: 35.0
Frame 324: Detected: 5
Frame 324: FP: 45.0, Misses: 33.0
Frame 325: Detected: 3
Frame 325: FP: 47.0, Misses: 35.0
Frame 326: Detected: 2
Frame 326: FP: 48.0, Misses: 35.0
Frame 327: Detected: 2
Frame 327: FP: 48.0, Misses: 34.0
Frame 328: Detected: 3
Frame 328: FP: 47.0, Misses: 32.0
Frame 329: Detected: 3
Frame 329: FP: 47.0, Misses: 32.0
Frame 330: Detected: 4
Frame 330: FP: 46.0, Misses: 32.0
Frame 331: Detected: 3
Frame 331: FP: 47.0, Misses: 35.0
Frame 332: Detected: 5
Frame 332: FP: 45.0, Misses: 33.0
Frame 333: Detected: 4
Frame 333: FP: 46.0, Misses: 35.0
Frame 334: Detected: 5
Frame 334: FP: 45.0, Misses: 33.0
Frame 335: Detected: 5
Frame 335: FP: 45.0, Misses: 34.0
Frame 336: Detected: 5
Frame 336: FP: 45.0, Misses: 33.0
Frame 337: Detected: 3
Frame 337: FP: 47.0, Misses: 35.0
Frame 338: Detected: 4
Frame 338: FP: 46.0, Misses: 35.0
Frame 339: Detected: 4
Frame 339: FP: 46.0, Misses: 36.0
Frame 340: Detected: 3
Frame 340: FP: 47.0, Misses: 38.0
Frame 341: Detected: 2
Frame 341: FP: 48.0, Misses: 39.0
Frame 342: Detected: 1
Frame 342: FP: 49.0, Misses: 42.0
Frame 343: Detected: 5
Frame 343: FP: 45.0, Misses: 38.0
Frame 344: Detected: 7
Frame 344: FP: 43.0, Misses: 34.0
Frame 345: Detected: 4
Frame 345: FP: 46.0, Misses: 35.0
Frame 346: Detected: 3
Frame 346: FP: 47.0, Misses: 34.0
Frame 347: Detected: 2
Frame 347: FP: 48.0, Misses: 35.0
Frame 348: Detected: 3
Frame 348: FP: 47.0, Misses: 34.0
Frame 349: Detected: 7
Frame 349: FP: 43.0, Misses: 29.0
Frame 350: Detected: 3
Frame 350: FP: 47.0, Misses: 35.0
Frame 351: Detected: 6
Frame 351: FP: 44.0, Misses: 31.0
Frame 352: Detected: 7
Frame 352: FP: 43.0, Misses: 32.0
Frame 353: Detected: 5
Frame 353: FP: 45.0, Misses: 36.0
Frame 354: Detected: 0
Frame 354: FP: 50.0, Misses: 42.0
Frame 355: Detected: 2
Frame 355: FP: 48.0, Misses: 42.0
Frame 356: Detected: 3
Frame 356: FP: 47.0, Misses: 39.0
Frame 357: Detected: 1
Frame 357: FP: 49.0, Misses: 40.0
Frame 358: Detected: 5
Frame 358: FP: 45.0, Misses: 37.0
Frame 359: Detected: 7
Frame 359: FP: 43.0, Misses: 35.0
Frame 360: Detected: 3
Frame 360: FP: 47.0, Misses: 37.0
moda: 0.0%, modp: 33.0%, prec: 6.5%, recall: 8.4%
Test, loss: 0.000000, Time: 124.410
Training...
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.0548, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.5922, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.4330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(2.3594, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(28.5039, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(14.6476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  38
{'labels': tensor(2.0433, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.1903, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(11.8356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(1.9351, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.1882, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(11.2942, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  37
{'labels': tensor(2.0959, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(19.0448, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.3841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  40
{'labels': tensor(1.9099, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(21.1365, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(11.6630, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  41
{'labels': tensor(1.9123, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(14.1601, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(10.9773, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
dec_spatial_shapes:  tensor([[ 80, 125]], device='cuda:0')
indices0 shape:  35
{'labels': tensor(2.2279, device='cuda:0', grad_fn=<MulBackward0>), 'center': tensor(16.0523, device='cuda:0', grad_fn=<MseLossBackward0>)}
tensor(12.7448, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
gt_cnt:  38
gt_cnt:  41
