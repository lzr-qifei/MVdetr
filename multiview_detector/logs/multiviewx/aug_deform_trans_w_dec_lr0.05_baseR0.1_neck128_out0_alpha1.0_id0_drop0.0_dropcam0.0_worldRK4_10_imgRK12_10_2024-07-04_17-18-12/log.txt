logs/multiviewx/aug_deform_trans_w_dec_lr0.05_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-04_17-18-12
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.05, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
pos_emb size:  [ 80 125]
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(4.7690, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0463, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(4.8154, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.4149, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0481, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4678, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0506, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.4943, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0426, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3466, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3910, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3131, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0431, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3562, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3743, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0508, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4250, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4555, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3229, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0451, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3347, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0370, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3717, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3398, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0479, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3877, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3353, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0417, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3770, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3225, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0482, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3707, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3102, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0486, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3131, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3552, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3178, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3643, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3135, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3578, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3289, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0513, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3802, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3421, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3868, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3290, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0439, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3729, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3135, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0413, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3198, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0460, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3487, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3163, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3237, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0426, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3554, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3172, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3023, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0394, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3148, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0451, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3203, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3643, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2957, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0458, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3414, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3226, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0432, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2947, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0477, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3424, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3103, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3574, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0415, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3593, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3175, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3102, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3483, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3259, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3699, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3148, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3520, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3017, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0437, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3024, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3447, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2964, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3095, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3175, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0533, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3708, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3124, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0443, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3035, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0492, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3162, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0368, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3068, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0471, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0485, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3200, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0437, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3093, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0474, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3566, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2982, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0458, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3188, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0374, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3561, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2927, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0384, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2970, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3447, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3163, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3236, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0429, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2980, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0397, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3376, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0424, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3102, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0392, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3494, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3007, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0498, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3504, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2941, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0447, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3388, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3208, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0433, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3642, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3176, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0376, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3306, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0408, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2991, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0367, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3358, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3226, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0360, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3586, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3101, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3285, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0366, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3178, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0374, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3552, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3252, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0383, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3148, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3527, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3112, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3163, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0399, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3562, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3154, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3535, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3082, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3152, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0368, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3520, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2878, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0417, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3294, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2937, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0329, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3153, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3202, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0352, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3554, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3010, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0407, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3032, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0361, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3156, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3555, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2998, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3388, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0436, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3562, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3283, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0413, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3020, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0363, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3056, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0375, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3431, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3374, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3069, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0397, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3466, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3055, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3483, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2952, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0427, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3379, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3248, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0343, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3592, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3145, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2933, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0375, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3089, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3458, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3098, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0407, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:100, loss: 0.003505, Time: 39.4
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3050, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0371, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3421, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3171, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0376, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0415, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3520, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3137, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2966, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0353, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3319, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2932, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0402, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3334, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3168, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0333, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2921, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0360, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3063, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0411, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3016, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0336, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3352, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3179, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0370, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3549, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2984, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0407, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3391, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3030, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0375, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3244, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0356, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3022, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0378, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3400, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2997, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0411, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3409, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3135, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0383, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0391, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3155, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0362, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3312, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3227, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0404, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3402, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3102, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0377, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3479, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2830, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3220, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3052, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0422, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3474, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3284, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0365, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3649, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0384, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3104, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0333, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3123, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0378, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3081, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0382, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3463, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3121, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0401, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3037, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0426, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3464, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2986, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0397, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2897, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3287, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3237, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3304, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0364, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3668, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3147, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0367, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3514, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3078, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0398, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3215, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3596, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2927, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0357, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2950, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0375, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3300, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3710, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3046, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2950, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0357, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3113, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0325, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2920, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3065, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3153, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3548, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3085, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0334, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3419, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2988, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0328, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3316, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3016, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0379, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3396, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0377, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3380, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3174, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0344, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3519, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3020, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0377, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3397, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3191, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3087, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3456, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2956, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0327, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3064, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3047, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3458, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3215, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0317, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3110, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3099, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0405, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3025, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0384, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3409, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3161, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0337, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3498, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0409, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2937, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0374, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2987, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3052, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0391, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2990, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0334, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3041, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0393, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3434, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3279, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0326, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3605, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2986, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0354, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3340, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3031, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0397, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3429, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2979, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0359, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3235, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3111, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0361, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3473, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2944, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0407, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0404, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3290, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3173, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0345, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3518, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3104, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0399, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3502, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2917, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0378, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3096, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3477, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3153, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0328, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3218, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3599, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3287, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0362, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3115, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0325, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3051, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3420, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3008, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3421, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2986, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0356, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3210, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2863, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0379, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3151, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0348, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3499, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3041, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3431, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3124, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0409, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3016, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0411, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3024, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0426, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2986, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0356, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3341, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:200, loss: 0.001671, Time: 74.6
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3197, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3577, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3194, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0346, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3540, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3082, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0430, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2957, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0366, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0406, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3532, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3196, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0366, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3562, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3116, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2905, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2970, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3159, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3581, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 33])
cost torch.Size([200, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3293, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0367, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3659, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3031, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0352, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3046, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3471, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3007, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0405, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3326, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3010, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0384, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3394, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3108, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0332, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3098, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0383, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2814, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0393, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3020, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0379, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3400, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3096, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2851, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0432, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3346, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0466, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3812, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2962, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3076, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0360, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3437, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3242, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0353, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3594, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3046, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0388, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3435, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2961, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0395, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3356, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3070, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0382, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3453, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2946, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3129, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0329, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3458, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2937, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0393, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2985, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0353, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3207, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0393, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3047, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0365, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3114, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0405, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3518, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0412, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2994, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3196, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3620, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2936, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3098, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3517, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2895, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3323, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2985, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0349, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3334, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3052, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3424, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3028, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0495, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3216, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0424, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3189, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0378, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3050, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0347, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3348, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3054, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3482, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3037, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3427, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3074, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2941, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0368, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3090, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0406, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3496, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3073, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0377, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3129, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0361, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2994, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0392, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3386, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0404, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3417, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3161, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3159, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0362, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3074, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0375, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3069, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0359, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3428, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2970, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0329, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3225, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3136, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0433, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3017, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0365, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3066, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0455, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3283, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0347, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3238, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0351, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3589, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3089, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0381, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3470, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2977, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0433, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3410, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3009, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0425, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3434, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3051, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0451, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3502, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3174, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0379, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3069, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3327, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0350, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3677, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3359, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3728, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3109, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0374, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 43])
cost torch.Size([200, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2909, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0342, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3064, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3504, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3247, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0316, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3563, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0387, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3492, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3142, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0414, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3202, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0377, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3083, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0349, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3432, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2954, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0406, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3162, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0437, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3600, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3253, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0413, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3096, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0388, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3484, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3274, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0350, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3624, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3147, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0340, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3487, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3445, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3064, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0380, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3444, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3177, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3162, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0403, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3565, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3214, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0388, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3265, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0390, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3656, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:300, loss: 0.001219, Time: 109.2
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3191, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3601, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2950, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0330, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3279, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2878, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0397, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3178, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0346, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3125, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3494, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3039, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0383, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3422, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3047, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0369, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3416, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3024, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0504, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3164, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0409, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3573, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3108, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0452, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3560, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0403, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3183, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0399, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3582, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3021, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0437, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3458, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3181, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0340, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3078, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0382, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3460, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2837, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3265, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0406, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3443, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3081, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0431, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3511, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0449, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3451, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3068, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0499, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3567, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0459, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3463, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 44])
cost torch.Size([200, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2814, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0497, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3311, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3228, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0399, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3627, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2962, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0439, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3401, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2990, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0385, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3157, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3118, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0450, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3568, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3050, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0475, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3525, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3006, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0480, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3486, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3142, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0405, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3547, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3226, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0382, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3607, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3068, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3071, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3489, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3071, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3481, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0355, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3011, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0418, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3429, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2994, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0379, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3008, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0423, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3431, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3023, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0392, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3416, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0397, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0442, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3592, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3168, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0403, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3570, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3021, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0391, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3411, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3032, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3072, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0404, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3476, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2938, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0421, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 42])
cost torch.Size([200, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2923, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0415, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3338, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3145, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0392, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3537, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 41])
cost torch.Size([200, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2965, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0388, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0446, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3596, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3009, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3187, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3628, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0436, device='cuda:0', grad_fn=<DivBackward0>)}
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  42
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  42
gt_cnt:  38
gt_cnt:  43
gt_cnt:  39
gt_cnt:  36
gt_cnt:  40
gt_cnt:  41
gt_cnt:  43
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  42
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  36
gt_cnt:  38
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  35
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  44
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  35
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  42
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  35
gt_cnt:  41
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  43
gt_cnt:  35
gt_cnt:  41
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  34
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  44
gt_cnt:  42
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  36
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  38
gt_cnt:  35
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  40
gt_cnt:  36
gt_cnt:  42
gt_cnt:  41
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  41
gt_cnt:  42
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  37
gt_cnt:  42
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  35
gt_cnt:  44
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  43
gt_cnt:  37
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  33
gt_cnt:  35
gt_cnt:  44
gt_cnt:  34
gt_cnt:  38
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  42
gt_cnt:  35
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  42
gt_cnt:  35
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  44
gt_cnt:  41
gt_cnt:  42
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  35
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  35
gt_cnt:  36
gt_cnt:  41
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  36
gt_cnt:  39
gt_cnt:  42
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  43
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  35
gt_cnt:  36
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  43
gt_cnt:  40
gt_cnt:  36
gt_cnt:  42
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  41
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  42
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  43
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
tensor(0.3440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3067, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0448, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3515, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3067, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0367, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3434, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0400, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3436, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3129, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0415, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3215, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0434, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3649, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3223, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0456, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3125, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0428, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3553, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:360, loss: 0.000987, Time: 129.6
Testing...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3116, device='cuda:0'), 'loss_center': tensor(0.0396, device='cuda:0')}
loss: tensor(0.3513, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0382, device='cuda:0')}
loss: tensor(0.3459, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0349, device='cuda:0')}
loss: tensor(0.3426, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0351, device='cuda:0')}
loss: tensor(0.3429, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3157, device='cuda:0'), 'loss_center': tensor(0.0407, device='cuda:0')}
loss: tensor(0.3565, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3157, device='cuda:0'), 'loss_center': tensor(0.0435, device='cuda:0')}
loss: tensor(0.3592, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0474, device='cuda:0')}
loss: tensor(0.3675, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3247, device='cuda:0'), 'loss_center': tensor(0.0420, device='cuda:0')}
loss: tensor(0.3667, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3116, device='cuda:0'), 'loss_center': tensor(0.0472, device='cuda:0')}
loss: tensor(0.3588, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3116, device='cuda:0'), 'loss_center': tensor(0.0419, device='cuda:0')}
loss: tensor(0.3535, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3116, device='cuda:0'), 'loss_center': tensor(0.0427, device='cuda:0')}
loss: tensor(0.3544, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3157, device='cuda:0'), 'loss_center': tensor(0.0408, device='cuda:0')}
loss: tensor(0.3565, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0374, device='cuda:0')}
loss: tensor(0.3451, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0403, device='cuda:0')}
loss: tensor(0.3481, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0387, device='cuda:0')}
loss: tensor(0.3464, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3040, device='cuda:0'), 'loss_center': tensor(0.0419, device='cuda:0')}
loss: tensor(0.3459, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0454, device='cuda:0')}
loss: tensor(0.3531, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0403, device='cuda:0')}
loss: tensor(0.3480, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 38])
cost torch.Size([200, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3116, device='cuda:0'), 'loss_center': tensor(0.0448, device='cuda:0')}
loss: tensor(0.3565, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3040, device='cuda:0'), 'loss_center': tensor(0.0453, device='cuda:0')}
loss: tensor(0.3493, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0473, device='cuda:0')}
loss: tensor(0.3551, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3157, device='cuda:0'), 'loss_center': tensor(0.0416, device='cuda:0')}
loss: tensor(0.3573, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0419, device='cuda:0')}
loss: tensor(0.3620, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 35])
cost torch.Size([200, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3247, device='cuda:0'), 'loss_center': tensor(0.0381, device='cuda:0')}
loss: tensor(0.3627, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0396, device='cuda:0')}
loss: tensor(0.3597, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0429, device='cuda:0')}
loss: tensor(0.3630, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3157, device='cuda:0'), 'loss_center': tensor(0.0423, device='cuda:0')}
loss: tensor(0.3581, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3157, device='cuda:0'), 'loss_center': tensor(0.0409, device='cuda:0')}
loss: tensor(0.3566, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3157, device='cuda:0'), 'loss_center': tensor(0.0434, device='cuda:0')}
loss: tensor(0.3591, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0445, device='cuda:0')}
loss: tensor(0.3646, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3295, device='cuda:0'), 'loss_center': tensor(0.0484, device='cuda:0')}
loss: tensor(0.3779, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0458, device='cuda:0')}
loss: tensor(0.3659, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0387, device='cuda:0')}
loss: tensor(0.3588, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 37])
cost torch.Size([200, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3157, device='cuda:0'), 'loss_center': tensor(0.0403, device='cuda:0')}
loss: tensor(0.3560, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0383, device='cuda:0')}
loss: tensor(0.3583, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  34
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  34
gt_cnt:  36
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  40
torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0380, device='cuda:0')}
loss: tensor(0.3581, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 34])
cost torch.Size([200, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3295, device='cuda:0'), 'loss_center': tensor(0.0400, device='cuda:0')}
loss: tensor(0.3695, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 36])
cost torch.Size([200, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3201, device='cuda:0'), 'loss_center': tensor(0.0415, device='cuda:0')}
loss: tensor(0.3616, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 39])
cost torch.Size([200, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3077, device='cuda:0'), 'loss_center': tensor(0.0391, device='cuda:0')}
loss: tensor(0.3468, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
out_prob shape:  torch.Size([200, 1])
pos_c_cls:  torch.Size([200, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([200, 1])
cost_pts shape:  torch.Size([200, 40])
cost torch.Size([200, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([200, 1])
src_logit shape:  torch.Size([200, 1])
tgt_cls shape:  torch.Size([200])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3040, device='cuda:0'), 'loss_center': tensor(0.0416, device='cuda:0')}
loss: tensor(0.3456, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([200, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
moda: 0.0%, modp: 34.6%, prec: 8.1%, recall: 10.8%
Test, loss: 0.356114, Time: 14.473
