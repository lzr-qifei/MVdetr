logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-03_18-02-12
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(116.4541, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.6981, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(114.4169, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(219.5243, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(117.9715, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.3533, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(114.4872, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.3252, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(109.3327, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.9955, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(108.9953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.6016, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(105.9509, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.4093, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(114.8191, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.5753, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(118.2905, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(214.4191, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(119.4991, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.6097, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(105.7113, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.9190, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(121.7280, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.3440, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(114.2695, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.4996, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(114.6046, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.0022, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(114.3244, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.9956, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(111.1729, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.3730, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(112.4760, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.0190, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(116.3423, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.1620, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(116.4001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.1485, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(116.0741, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.8736, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(120.2701, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.1790, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(111.0452, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.3863, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(113.0837, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.3560, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(117.1345, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.3165, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(120.0463, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.1419, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(114.1345, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(198.4410, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(119.8866, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.3683, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(117.8857, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.9591, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(115.4196, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.6452, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(129.1751, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.2358, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(114.3787, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.8838, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(111.4994, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.0494, device='cuda:0', grad_fn=<DivBackward0>)}
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 200, 128])
ref pts dec:  torch.Size([1, 200, 2])
cost_class shape:  torch.Size([200, 100])
cost_pts shape:  torch.Size([200, 100])
cost torch.Size([200, 100])
sizes:  100
outlabel_shape:  torch.Size([200, 2])
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
mask:  tensor([[ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
          True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False,
         False, False, False, False, False, False, False, False, False, False]],
       device='cuda:0')
{'loss_ce': tensor(121.2722, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.6524, device='cuda:0', grad_fn=<DivBackward0>)}
