logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-03_11-04-31
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
Training...
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.6630e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.1009, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.2415, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.9357e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.6169, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.9581e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.8036, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.3691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.1035e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.8990, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.3503e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.3712, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.7359e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.0878, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.8191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.8170e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.7441, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.0272, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.5816e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.3285, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.6167e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(214.2802, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.6426, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.5968, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.4089, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.7735, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.6156, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.6468e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.4631, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.8094e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.7650, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.5648e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.7431, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.2746e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.8576, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.6136, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.8547, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.5576e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(219.8941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.7691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.4017, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(197.2987, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.7269e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.5656, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.3727e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.2691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.7376e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.7691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.0015, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.7230e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.3788, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.7899, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.0629e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.4162, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3280e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.9928, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(217.2797, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.9773e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.9382, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.4051, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.1859e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.6963, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.5656, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.6045e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.0358, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.0896e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.8129, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.2661, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(215.1440, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(219.5440, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.6156, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.3102e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.1156, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.7070e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.7766, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.7558, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.4191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.0163e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.6415, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.2191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.5543e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(219.9691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(214.4748, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.3370e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.8847, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.4500e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(214.8375, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.7844, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.5771e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.6678, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.6144, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.2233e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.6419, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.9826e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(216.0015, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.4504, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.7998, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.0178e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.9941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.8358, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.4504, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.0465e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.0114, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.0326e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.8701, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.3691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.5246e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.6969, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.8577e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.9007, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(215.7495, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.3262, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.2998, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.4887, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.0395, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.7958e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.2422, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.8891e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.9928, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.7735, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.6414, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.6136, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.6551, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.6937e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.8036, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.5367, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.6412e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.8477, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.1492e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.4631, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.7998, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.6708, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.0994, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.2553, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.9840, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.0997e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.4118, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.8274e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.3524, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.7721e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.3861, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.0441, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.4748, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.0198, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.7917e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.7187, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.4261, device='cuda:0', grad_fn=<DivBackward0>)}
Train Epoch: 1, Batch:100, loss: 0.000000, Time: 52.2
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.0234e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.3605, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.5038e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.1297, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3768e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.2735, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.1032e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.5941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.5680e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.0468, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.6470, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.5333, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(217.0941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(198.8990, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.2817e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.5191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.3437e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(197.5191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.9236, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.7050e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(197.0272, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.4609e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.7844, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.6918e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.8137, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.3861, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.6866e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.1441, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.6855e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.3041, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.6414, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.8847, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.8385e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.6544, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.8261, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.9724e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.6488, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.8368e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.1119, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.5779e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.8987, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.2323, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.9191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.1061e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.5144, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.6685, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.7191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.8791e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.7525, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.3143e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(194.4577, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(198.3844, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.4566, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.0739, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.3177e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(193.4598, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.0739, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.2885e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.6144, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(198.2209, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.0601e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.9840, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.1125e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.3041, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.0015, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.3714e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.4748, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(214.3358, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.1945, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.5691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.4998e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.6938, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.5015e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.4107, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.9657, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3579e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.1191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.4322e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.2579, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.3376e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.5480, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.6104e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.3605, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.8289e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.0739, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.8095e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(194.5273, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0005, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.2065, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.4145e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.3773, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.5941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.2941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.4941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.7085e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.2309, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.9117, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.6089e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.3475, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.3826e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(214.2691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(2.2130e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(194.5063, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.7184, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.3981e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.9246, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.8163, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.6239e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.0941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(219.5912, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.9103e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(195.1279, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.4760e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.3080, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.2637e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(218.4314, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.9370e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.4261, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.8087e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.6156, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.2655e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.4887, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.4631, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.4374, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.2182e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.3232, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.1682, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.2592e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.1441, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(193.8566, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.6682, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.8373e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.4504, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.4691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.2725e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.0272, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.9299e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.5390, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(214.1191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.0893, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.5397e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.6169, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.7171e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.6939, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.3801e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.2067, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.9577, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(2.9242e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.5005, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.1009, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.8733, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.7766, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.7456e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.6191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.4024e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(198.3442, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.5874e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.5303, device='cuda:0', grad_fn=<DivBackward0>)}
Train Epoch: 1, Batch:200, loss: 0.000000, Time: 103.1
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.0271e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.4191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.7708, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.8211e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.9626, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.9996e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.7330, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.2090, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.8469e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(194.3691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.0968e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.1558, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.7243e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.1578, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.6419, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.1082e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.7675, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.8940e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.9955, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.9696e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.5994, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.7433e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.3041, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.8191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.9916e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.1297, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(2.0468e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.1041, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3893e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.3556, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(194.7603, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.9062, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.6144, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.9282e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.7872, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.8788, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.7850e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.7964, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.9377e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.5025, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.2373e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.7225, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.3415e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(195.7365, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(195.0785, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.0042, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.8609e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(196.8477, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.8837e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.4260, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.2797, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(2.4958e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.6425, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(218.4941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(1.6492e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(217.2323, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.6415, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.6561e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.9191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.8407, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.9887e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.5756, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.7614e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.8576, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.5874, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.4941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.4941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.6426, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.0016, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.1155e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.3909, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.9607e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.9657, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.1156, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.7675, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.4827e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.6488, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.3052e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.8813, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.8231e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.2065, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.6941, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.8895, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.0858, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.9387, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.3021e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.8163, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.6016e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.1041, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.8530e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.0739, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.9346e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.1945, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.5691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.6943, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.3646e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.6682, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.3115e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.6156, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.9072e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.9558, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.5568e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.9191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.0980e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.0469, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.5367, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.2836, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.8846, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.0206e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.4314, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.1575e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.2735, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.2901, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.1441, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.4887, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.4740e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.5400, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(2.9110e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.3272, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.4887, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.6309e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.3441, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.7708, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.8312, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.8481e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.0739, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.7793, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.4792, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.4848e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.1691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.3517e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.4992, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.5333, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.3052e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(217.6699, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.9352e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.1682, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.1279, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.9704e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(198.8358, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.5726e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(214.5691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.9287e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.1041, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.4400e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.0280, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(216.5372, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.5042, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.0846, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3166e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.9441, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.5913, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.5025, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.7525, device='cuda:0', grad_fn=<DivBackward0>)}
Train Epoch: 1, Batch:300, loss: 0.000000, Time: 149.8
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.4912e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.1297, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(198.0191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.9993e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.0812, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.6470, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.2090, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.8163, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.9771e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.1414, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.1307e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.3375, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.9388, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.5191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.1405e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.7883, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.9747, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.6054, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3876e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.3171, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(4.5669e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(195.3862, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.9184e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.8990, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(202.6419, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(3.4562e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.9314, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.5006e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.0015, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.5473, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3193e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.1090, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.1820e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(198.8847, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3724e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(217.3788, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.1821, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.0191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.9840, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.6419, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.3041e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(210.0015, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.6390e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(200.4840, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.2782e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.0528, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.8306, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.2193e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(211.1156, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.4118, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.0755e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.0994, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.8599e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.2653, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.2579, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(212.0367, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.9631e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.1550, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.0056, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.5103, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.0441, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.1691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.3351e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.7788, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(199.9747, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.9272, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(207.6191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(204.8137, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(209.7964, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(6.7609e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.1009, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.1016e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.3191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.5748e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.4191, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.4129, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0006, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.2090, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.9536e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(205.0691, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.2735, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(0.0002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(213.9246, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(8.5135e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(203.4051, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(7.7425e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(208.7431, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(5.2001e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(201.1156, device='cuda:0', grad_fn=<DivBackward0>)}
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
cost torch.Size([1, 100, 100])
sizes:  100
outlabel_shape:  torch.Size([100, 1])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
idx:  (tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0]), tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
        90, 91, 92, 93, 94, 95, 96, 97, 98, 99]))
tgt_pts_shape:  torch.Size([100, 2])
cuda:0 cpu cpu cuda:0
cuda:0 cuda:0 cuda:0 cuda:0
{'loss_ce': tensor(9.3736e-05, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(206.0941, device='cuda:0', grad_fn=<DivBackward0>)}
Train Epoch: 1, Batch:360, loss: 0.000000, Time: 177.8
Testing...
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
input_flatten:  torch.Size([1, 60000, 128])
o:  torch.Size([1, 60000, 8, 6, 4, 2])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
input_flatten:  torch.Size([1, 10000, 128])
o:  torch.Size([1, 100, 8, 1, 4, 2])
pos shape: torch.Size([100, 2])
scores shape:  torch.Size([100, 1])
