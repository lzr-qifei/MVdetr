logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-04_19-18-47
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
pos_emb size:  [ 80 125]
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(2.0331, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0670, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.8574, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0687, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0662, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.8866, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0758, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0949, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.6633, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0772, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.7803, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0813, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0527, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.9294, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0732, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.7028, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0728, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9969, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(2.0050, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0740, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.8048, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0734, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0491, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.5244, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0714, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.8724, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0660, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.6971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0593, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9672, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.7962, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0828, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.5637, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0753, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.2209, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0693, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7490, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.9565, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1070, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.5864, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0710, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.4821, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0808, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4280, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0774, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8688, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.4971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0653, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8791, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4621, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0862, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.5637, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0687, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9192, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.2023, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0605, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7222, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.7451, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0653, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.4480, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0662, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.5291, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0691, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.4665, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0651, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.5133, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0636, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8839, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.3789, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0729, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8353, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.4379, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0706, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8602, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.2610, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7681, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.5153, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.2670, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0784, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.6027, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0687, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9387, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.4348, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0738, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.0499, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6346, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.1201, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0694, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6989, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.1883, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7234, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.4411, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0661, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8528, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.3475, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0650, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.3984, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0598, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.3939, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0826, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8621, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.4035, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0756, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.3033, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0591, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7700, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.4268, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0775, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8683, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.3192, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0694, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.0924, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0740, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6942, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.9619, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0786, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.3958, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8260, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.1086, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0710, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.1415, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0648, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.1085, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0691, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6926, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.2268, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0637, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7408, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.1042, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0859, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.4003, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0759, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.2445, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7520, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1028, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0820, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7154, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.9514, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0743, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6243, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.1139, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0769, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.9168, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0755, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.9226, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0728, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.0092, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0704, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6454, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.9842, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0650, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6221, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8716, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0660, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5678, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8127, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5303, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7333, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0736, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5139, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8566, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0582, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5446, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.2258, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0666, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7461, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.2489, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0562, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7368, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.2424, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.0279, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0673, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6485, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.9812, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.9714, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0747, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7440, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0686, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.0126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0642, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6347, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.1668, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7132, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7830, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0749, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5413, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.1452, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0642, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7010, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8563, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0632, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5546, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7716, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0699, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.9916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0661, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6281, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8777, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5755, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8502, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0719, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5689, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8388, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.9264, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0785, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6599, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0741, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4781, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7313, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0776, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5208, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8258, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5421, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7349, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0723, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8388, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.5982, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0758, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4506, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.5962, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0652, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4284, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8319, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5344, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6008, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0692, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4387, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4905, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0702, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3856, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7757, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7169, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0680, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4945, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.4972, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0675, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3835, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6996, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0697, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4893, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.5714, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0756, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:100, loss: 0.004369, Time: 38.7
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.5485, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0710, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.5266, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0814, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.5563, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0672, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7598, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0648, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5094, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.5111, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3894, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.4834, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3794, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.4687, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0774, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3891, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.4045, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3389, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.5455, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0682, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4565, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0805, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3893, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.4764, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0695, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3771, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3878, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.5239, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0692, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4511, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0664, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3583, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3441, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0728, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.5632, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0665, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4147, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.4584, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0706, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3285, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0715, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.4143, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0691, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3453, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.3180, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0750, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.4801, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0676, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.5620, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0685, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4181, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4376, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3406, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3834, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0904, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3725, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3800, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0570, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4569, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0733, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3750, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3503, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0670, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3092, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.4721, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3727, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2489, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0807, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2858, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3417, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0770, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3250, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.3207, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0743, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4374, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0723, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3632, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.5133, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0723, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2847, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0577, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2578, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3477, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0619, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2976, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3569, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0695, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3134, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0736, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4263, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0492, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3197, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0704, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3091, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0679, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3237, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0748, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2822, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0639, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2690, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2205, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0823, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2748, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3568, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0695, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3175, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3731, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2955, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0755, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2988, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1887, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0813, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2569, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2369, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0583, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2351, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3516, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0645, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1856, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2195, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2592, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2612, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3248, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0720, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3063, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3651, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0673, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2712, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0603, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2562, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2694, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0690, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2728, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  44
gt_cnt:  41
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  35
gt_cnt:  37
gt_cnt:  38
gt_cnt:  36
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  41
gt_cnt:  43
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  42
gt_cnt:  37
gt_cnt:  37
gt_cnt:  42
gt_cnt:  38
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  36
gt_cnt:  36
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  38
gt_cnt:  35
gt_cnt:  39
gt_cnt:  36
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  35
gt_cnt:  38
gt_cnt:  35
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  44
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  42
gt_cnt:  38
gt_cnt:  35
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  35
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  39
gt_cnt:  43
gt_cnt:  41
gt_cnt:  43
gt_cnt:  42
gt_cnt:  37
gt_cnt:  42
gt_cnt:  37
gt_cnt:  41
gt_cnt:  43
gt_cnt:  35
gt_cnt:  41
gt_cnt:  42
gt_cnt:  44
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  36
gt_cnt:  42
gt_cnt:  36
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2332, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0754, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1878, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0888, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2269, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0772, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2679, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0705, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2501, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
