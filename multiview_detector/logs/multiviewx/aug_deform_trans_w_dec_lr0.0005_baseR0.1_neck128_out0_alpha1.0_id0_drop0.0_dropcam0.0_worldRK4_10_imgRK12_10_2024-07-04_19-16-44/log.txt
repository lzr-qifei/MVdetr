logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-04_19-16-44
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
pos_emb size:  [ 80 125]
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.8568, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0695, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0674, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.9663, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0612, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.8215, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0523, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.8381, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0820, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0832, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(2.0766, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0731, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1846, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.8029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0747, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.9916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0828, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.1614, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4762, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0697, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8775, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.6945, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0745, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.5817, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0682, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9272, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.6558, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0785, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9848, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.5617, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0812, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9433, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4927, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0707, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8877, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.6967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0706, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.5185, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0754, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.6840, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9696, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.5363, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.4186, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8431, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.4713, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0770, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.4036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0675, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.6665, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0653, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.5741, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0622, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.2422, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0752, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7715, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4085, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0664, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8371, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.5482, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0652, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.4259, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0744, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.5624, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0661, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.4106, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0722, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8497, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1353, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0777, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7232, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.4842, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0612, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8646, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.3711, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0666, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.5078, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0758, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.9056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.2338, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0713, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7595, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.2534, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.3295, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0706, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.0380, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.0452, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0742, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6709, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.3467, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0712, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1797, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0609, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1278, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0811, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.0362, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0901, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6982, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.1541, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7087, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1355, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0676, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.4527, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0731, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8726, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.2677, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0781, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7901, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.1601, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0757, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.2361, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0726, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7631, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.0317, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0773, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6703, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(1.1247, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0763, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7150, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.4157, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8394, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.1415, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0767, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.1991, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0597, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.0247, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0719, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6562, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.3698, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0742, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8334, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.0924, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6801, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.9594, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0685, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.4873, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0657, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8750, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.3091, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7719, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.3996, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0670, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8337, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.0594, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0617, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7793, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0659, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.0467, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0639, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6512, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.0258, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6410, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.0693, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6625, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7080, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0696, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4933, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.9283, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0737, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7605, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0622, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.1592, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0736, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7267, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(1.2719, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0715, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7789, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.9947, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6339, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.9829, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0605, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8420, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0799, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5807, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.2100, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0545, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(1.0174, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0781, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6650, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8418, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0687, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5584, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8212, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5352, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8716, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0672, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5702, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.3069, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0672, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8660, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0766, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5862, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7353, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0721, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.8608, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0722, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5748, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.9320, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0689, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8479, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0682, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.9562, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0637, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6055, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.9781, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0735, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6360, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6857, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0705, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8440, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0723, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5666, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0698, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4449, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7067, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0704, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4941, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.5601, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4046, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6516, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4534, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.5005, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0662, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3826, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8674, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0736, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5810, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6387, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0693, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8225, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5478, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.5590, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0707, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.5871, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0632, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4199, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7364, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0676, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7840, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0665, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5250, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.5877, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0651, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4240, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:100, loss: 0.004240, Time: 39.0
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6331, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0667, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4500, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8387, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0711, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5616, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6453, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4603, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6399, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0704, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4609, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7260, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0700, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5030, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 33])
cost torch.Size([100, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7517, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7319, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0738, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.4665, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0666, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3665, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6340, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0675, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4520, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4330, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0662, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3488, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.5529, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4180, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.5795, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0631, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4160, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.5646, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0681, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4186, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6072, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0671, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4378, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2845, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0650, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2723, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4879, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0708, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3855, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.5150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0624, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3823, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.5364, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0580, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3841, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3622, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4409, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0670, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3545, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.4500, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3530, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4753, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0698, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3773, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4764, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0707, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3796, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.4120, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0686, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3431, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0612, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2788, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3512, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0723, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3203, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2557, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0670, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.4868, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0661, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3756, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3947, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0619, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3212, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.5159, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0675, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3929, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3389, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0825, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3344, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.5288, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0617, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3879, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.4680, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0676, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3691, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3873, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0682, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.4034, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0581, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3178, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3807, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0570, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3044, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2442, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2536, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.3422, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2958, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2797, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1974, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0715, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2416, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3890, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0590, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3124, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3204, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0470, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2543, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2455, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0672, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2572, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.3045, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0675, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2872, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2958, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0579, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2637, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2273, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0651, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2295, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0704, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2556, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.3126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0674, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2912, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3356, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0619, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2916, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2123, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2422, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2538, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2133, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0692, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.3082, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0631, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2804, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2762, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0571, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2522, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2487, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0804, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2851, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.3180, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0716, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3022, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 34])
cost torch.Size([100, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2389, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0709, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2613, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1756, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0647, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1820, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0714, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2339, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2099, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0630, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1896, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2325, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2343, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2412, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2070, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0625, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2285, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0674, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1931, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0702, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2078, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0662, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2486, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2511, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2204, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0760, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2622, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2049, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0599, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2223, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2011, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0632, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1837, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0705, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1725, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0659, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2181, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1929, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2277, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2225, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2429, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2015, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0593, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2194, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2229, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0655, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2425, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2108, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0638, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1868, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0647, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1974, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0659, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1920, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0667, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2295, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1966, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0669, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2321, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1869, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0688, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2310, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2071, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0558, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2151, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2403, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2494, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2026, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0610, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2129, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0622, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1871, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0667, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2269, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2027, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0571, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2046, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0605, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1941, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2283, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.2127, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1968, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0700, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2385, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1859, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0706, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2342, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2083, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0698, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2038, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1923, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0655, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2271, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1951, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0691, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2357, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1972, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0661, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2308, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1916, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:200, loss: 0.001114, Time: 72.5
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1979, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0591, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1971, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0552, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0615, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2213, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2025, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0601, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1877, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0596, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2131, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2075, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0631, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.2111, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0771, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2597, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1850, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0747, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2418, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0619, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1781, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0664, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2343, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1854, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0649, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2225, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2197, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0676, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2450, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2229, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1965, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0672, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2327, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1993, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0620, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0665, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2788, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0612, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2618, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1800, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0701, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1843, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2258, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1774, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0710, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2307, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1836, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0651, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2220, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1996, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2245, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1844, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0578, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2078, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1954, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0692, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 43])
cost torch.Size([100, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1796, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0625, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2149, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1918, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2326, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2088, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0590, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1850, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0702, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1931, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0613, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2192, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1737, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0706, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2176, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0600, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2699, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0651, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2651, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1999, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0639, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1785, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0656, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2204, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1862, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0683, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2297, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2180, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0642, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2046, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0642, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1856, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0584, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2095, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2177, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0585, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2259, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0622, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2058, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2256, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2098, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0595, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2017, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0581, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2085, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2331, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1778, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0686, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2261, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1889, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1820, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0604, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2117, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1937, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0679, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2328, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2107, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0721, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2495, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2184, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0606, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2009, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0564, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2132, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2027, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2243, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2028, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0611, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2235, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2517, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0693, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2644, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1932, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0605, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0558, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2122, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2288, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1961, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0676, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2333, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2163, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0586, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2254, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1913, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0574, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2105, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2439, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0684, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2142, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0611, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2293, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2165, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0621, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2324, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 42])
cost torch.Size([100, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.1768, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0646, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 35])
cost torch.Size([100, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2196, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0614, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2326, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2037, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2354, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0631, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2440, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1863, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0635, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2202, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1786, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0621, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2135, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2037, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0625, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2270, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2031, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0610, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2235, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1810, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0666, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2237, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 44])
cost torch.Size([100, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.1698, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0662, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2174, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1999, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0617, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2234, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1911, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0540, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1877, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0509, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1957, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 36])
cost torch.Size([100, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.2113, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0626, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1952, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0606, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2189, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2014, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0626, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2259, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1837, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2165, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1917, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0591, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1903, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0550, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2052, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1929, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0643, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2251, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.2040, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0548, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1906, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0619, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2190, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2022, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0677, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2365, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1906, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 41])
cost torch.Size([100, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.1808, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0639, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2182, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1785, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0561, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0623, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2222, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.1955, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0589, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2155, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1993, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0585, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.2394, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0569, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2335, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1922, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0634, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2228, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1879, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0568, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2076, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 38])
cost torch.Size([100, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.1881, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0551, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.2002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0641, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:300, loss: 0.000761, Time: 105.7
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2252, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  42
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  37
gt_cnt:  39
gt_cnt:  38
gt_cnt:  38
gt_cnt:  35
gt_cnt:  37
gt_cnt:  41
gt_cnt:  43
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  33
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  36
gt_cnt:  42
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  42
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  41
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
gt_cnt:  35
gt_cnt:  44
gt_cnt:  37
gt_cnt:  38
gt_cnt:  43
gt_cnt:  37
gt_cnt:  41
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  42
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  42
gt_cnt:  42
gt_cnt:  42
gt_cnt:  43
gt_cnt:  37
gt_cnt:  42
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  42
gt_cnt:  35
gt_cnt:  40
gt_cnt:  34
gt_cnt:  39
gt_cnt:  42
gt_cnt:  38
gt_cnt:  41
gt_cnt:  35
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  35
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  34
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  36
gt_cnt:  38
gt_cnt:  38
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  36
gt_cnt:  39
gt_cnt:  39
gt_cnt:  35
gt_cnt:  42
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  35
gt_cnt:  44
gt_cnt:  37
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  43
gt_cnt:  36
gt_cnt:  44
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  36
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  40
gt_cnt:  44
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  36
gt_cnt:  35
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  37
gt_cnt:  44
gt_cnt:  36
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  36
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  36
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  43
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  38
gt_cnt:  42
gt_cnt:  42
gt_cnt:  43
gt_cnt:  41
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  42
gt_cnt:  36
gt_cnt:  40
gt_cnt:  42
gt_cnt:  37
gt_cnt:  38
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  40
gt_cnt:  43
gt_cnt:  41
gt_cnt:  37
gt_cnt:  35
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  35
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  40
tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1897, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0605, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 40])
cost torch.Size([100, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.1923, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0684, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2329, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2021, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0483, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.1977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1991, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0640, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2275, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 39])
cost torch.Size([100, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.1879, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0554, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2048, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 100, 128])
ref pts dec:  torch.Size([1, 100, 2])
out_prob shape:  torch.Size([100, 1])
pos_c_cls:  torch.Size([100, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([100, 1])
cost_pts shape:  torch.Size([100, 37])
cost torch.Size([100, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([100, 1])
src_logit shape:  torch.Size([100, 1])
tgt_cls shape:  torch.Size([100])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.2016, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0705, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.2418, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
