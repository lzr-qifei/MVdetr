logs/multiviewx/aug_deform_trans_w_dec_lr0.0005_baseR0.1_neck128_out0_alpha1.0_id0_drop0.0_dropcam0.0_worldRK4_10_imgRK12_10_2024-07-04_19-19-59
Settings:
{'reID': False, 'semi_supervised': 0, 'id_ratio': 0, 'cls_thres': 0.6, 'alpha': 1.0, 'use_mse': False, 'arch': 'resnet18', 'dataset': 'multiviewx', 'num_workers': 4, 'batch_size': 1, 'dropout': 0.0, 'dropcam': 0.0, 'epochs': 10, 'lr': 0.0005, 'base_lr_ratio': 0.1, 'weight_decay': 0.0001, 'resume': None, 'visualize': False, 'seed': 2021, 'deterministic': False, 'augmentation': True, 'world_feat': 'deform_trans_w_dec', 'bottleneck_dim': 128, 'outfeat_dim': 0, 'world_reduce': 4, 'world_kernel_size': 10, 'img_reduce': 12, 'img_kernel_size': 10, 'data': '/root/autodl-tmp/MultiviewX'}
rpts:  torch.Size([60000, 6, 4, 2])
pos_emb size:  [ 80 125]
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(31.1271, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0216, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(15.6067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(31.0783, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(15.5896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(29.4680, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0219, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(14.7778, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(28.7494, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0265, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(14.4278, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(25.4582, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0241, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(12.7772, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(28.6942, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0230, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(14.3932, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(28.9093, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(14.5009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 44])
cost torch.Size([1000, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(24.1196, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0256, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(12.1110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(27.3242, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0189, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(13.6999, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(23.6413, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0220, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(11.8647, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(23.8691, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0229, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(11.9804, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(19.8558, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0226, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(9.9732, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(21.7285, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0211, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(10.9066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(21.1571, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0220, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(10.6226, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(22.3067, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(11.2018, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(17.9835, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0237, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(9.0391, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(18.6527, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0237, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(9.3737, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(14.8272, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0227, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(7.4590, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(12.8258, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0199, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(6.4527, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(15.2578, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0211, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(7.6711, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(14.5023, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(7.3034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(15.0630, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0229, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(7.5773, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(10.9018, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0203, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(5.4915, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(11.1837, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0191, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(5.6300, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(8.9912, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0219, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(4.5393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(14.1375, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0248, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(7.1183, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(6.6236, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0195, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(3.3507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(4.6688, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0203, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.3751, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(5.7388, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0183, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.9060, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(3.7995, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0187, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.9372, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(4.8014, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0199, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(2.4405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(3.5621, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0193, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.8196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.9517, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0209, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(1.0177, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.4294, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0238, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.7623, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8845, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0216, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4855, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(1.5397, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0195, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.8089, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7083, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0198, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3937, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7786, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4359, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7219, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0222, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4053, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6964, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3947, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6811, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3909, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 34])
cost torch.Size([1000, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7433, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0201, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4119, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7669, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0270, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4375, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6606, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0214, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3731, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7186, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4098, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7111, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0305, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4166, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7283, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0273, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4187, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6988, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0249, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 43])
cost torch.Size([1000, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.9214, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0210, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5027, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6795, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3926, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8992, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5028, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7673, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4350, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8703, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0256, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4864, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6798, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0238, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3876, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7947, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0275, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4524, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6862, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6959, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6984, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0269, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7047, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7040, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0226, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3971, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6869, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0262, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8356, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0241, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4661, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6891, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0273, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3992, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7182, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0251, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7059, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0290, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7061, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0251, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4032, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7237, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0259, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4137, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7043, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0209, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3940, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 44])
cost torch.Size([1000, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6908, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3986, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7163, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7082, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0230, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4001, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7007, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0274, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7109, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0250, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4054, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7338, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0262, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4193, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7122, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0247, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4056, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6961, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0260, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7352, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0276, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4227, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7213, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0245, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8119, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0202, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4464, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6907, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0279, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4011, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(1.1001, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0250, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.6000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7266, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0273, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4179, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 44])
cost torch.Size([1000, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6993, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0284, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4064, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 33])
cost torch.Size([1000, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8928, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0339, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5141, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.9548, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0316, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5405, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.9828, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0262, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8983, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0196, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4883, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7378, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0296, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4280, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8051, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0308, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4640, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8711, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0249, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4853, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6874, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0296, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7391, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0302, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4301, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7418, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0253, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8783, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7217, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0278, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6926, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6970, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0246, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7629, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0334, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4482, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0259, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4020, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8025, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4544, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:100, loss: 0.004544, Time: 39.2
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7544, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0301, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4373, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7263, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0245, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4122, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7103, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0293, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4136, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 43])
cost torch.Size([1000, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7744, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0239, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4349, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6940, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0251, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3972, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7919, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0239, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4438, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7397, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0245, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4188, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7374, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0236, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4159, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7955, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0235, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4447, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7120, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8002, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0281, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4564, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8311, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0262, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4680, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7839, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0260, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4439, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8800, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0275, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8336, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0248, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4664, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7199, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0304, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7509, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0289, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4332, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8087, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0211, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4465, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7027, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0276, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7340, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0265, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6964, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0236, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3953, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6976, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0241, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3970, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7362, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0217, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7337, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0283, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4234, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7274, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0246, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4129, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6923, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0250, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7018, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0254, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7141, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0216, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4003, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7146, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0247, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8032, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0302, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4620, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7348, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0251, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4176, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.8413, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0249, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4704, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7651, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0272, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4369, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7040, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6915, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0291, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7220, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0224, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0239, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7193, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0309, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7074, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0297, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7167, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0271, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.9215, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7213, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4116, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7768, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0235, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4354, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7230, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0230, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7087, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0249, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4042, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7338, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4201, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7964, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4505, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7903, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0227, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4406, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7061, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7170, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0223, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4031, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7210, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0276, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4157, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7146, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0250, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 43])
cost torch.Size([1000, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6904, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0260, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3972, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7400, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0236, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4171, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7401, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0263, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4226, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8204, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0281, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4663, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7423, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0249, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4209, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7173, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0279, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7204, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0280, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4163, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7163, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0240, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4061, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7502, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0251, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4253, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7187, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0310, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4214, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8170, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0272, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4629, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7137, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0286, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4140, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7209, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0278, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4160, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8405, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0290, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7716, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0217, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4292, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 43])
cost torch.Size([1000, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7133, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0258, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4083, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7352, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0274, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4224, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7122, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0212, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6919, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0268, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7549, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4302, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(1.0776, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0248, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5884, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0273, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6930, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0249, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6876, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0299, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7366, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4145, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7178, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0256, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4102, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7198, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0234, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7462, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0289, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7999, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7565, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4304, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4049, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7371, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4152, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7191, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0265, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4126, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7241, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8247, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4626, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7625, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0275, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7072, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0269, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4074, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7071, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0287, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4110, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7276, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0260, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4158, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7150, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0272, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4120, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7086, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0300, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4144, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6931, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0245, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3956, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7802, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4363, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8457, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0205, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4639, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6994, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4007, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7451, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0241, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4207, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7370, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4196, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:200, loss: 0.002098, Time: 73.1
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7331, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0267, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4199, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7260, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0227, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7507, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4276, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8353, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0283, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4742, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7977, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0260, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4507, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7203, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7523, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4275, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7310, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0228, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7497, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0279, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4306, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7162, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0282, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4146, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7678, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4305, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7057, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4051, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.8170, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0277, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4638, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6740, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0270, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3910, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7251, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0245, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4115, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7088, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0210, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3964, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7190, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4108, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6924, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3965, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7644, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0217, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7321, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0292, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4244, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.8233, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0275, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4667, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7658, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0253, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4334, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 43])
cost torch.Size([1000, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7209, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0280, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4164, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7181, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0188, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6986, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0228, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7832, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0239, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4393, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6911, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3978, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6743, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3837, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7081, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0232, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7182, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0289, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4170, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8306, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4619, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7726, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0263, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4389, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7442, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0285, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4291, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7007, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0265, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4033, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6993, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0243, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3982, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8262, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0240, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4611, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7013, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0249, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7199, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0310, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4220, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7549, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0256, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4286, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7104, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4037, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7024, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0299, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4111, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7472, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0240, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4215, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7530, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0258, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4282, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7077, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0248, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4035, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7842, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4406, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7741, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0256, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4382, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6870, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0256, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3947, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7137, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4091, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6780, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6926, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0217, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3896, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 43])
cost torch.Size([1000, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7122, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0284, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4130, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0234, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3987, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0258, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7275, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4142, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7292, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0251, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4148, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6963, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3966, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7064, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0217, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3965, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4050, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6998, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7235, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0226, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6869, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3940, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7127, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0224, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7070, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3997, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6839, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0240, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3898, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6893, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3951, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7005, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0219, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3941, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7034, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0283, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7084, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0248, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4038, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7034, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0239, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6923, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0302, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4066, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(1.0263, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0224, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5579, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7419, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0254, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4218, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7227, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0280, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4173, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7559, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0268, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4315, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7220, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0228, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7534, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0234, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4236, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7959, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0277, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4533, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6940, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0244, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3958, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7565, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0258, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4299, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6842, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0229, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6910, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0270, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7570, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6731, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0254, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3873, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7032, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0213, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3941, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7122, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0211, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3983, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7227, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0210, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7014, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0276, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 44])
cost torch.Size([1000, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6702, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0254, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3860, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8818, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0194, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4798, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3986, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6708, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0240, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3833, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6830, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0273, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3961, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6978, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0224, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3938, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7024, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0241, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7148, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4059, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7411, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4239, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7403, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0294, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4289, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7278, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0271, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4181, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7087, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0203, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7117, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4043, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:300, loss: 0.001348, Time: 107.1
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6805, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0212, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3827, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7109, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0268, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4090, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7039, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0283, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6687, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0247, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7073, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0254, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4045, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7029, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0247, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6820, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0219, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3849, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7218, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0238, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4085, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.8116, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4563, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7173, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6802, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0256, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3914, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7008, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0263, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4029, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8787, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0260, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4914, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.8237, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0270, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4658, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 44])
cost torch.Size([1000, 44])
indices0 shape:  44
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([44, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7943, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0317, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4606, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7795, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0312, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6907, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0265, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7399, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0256, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4211, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7192, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0235, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4065, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6869, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0227, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3888, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6954, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0298, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4073, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 34])
cost torch.Size([1000, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7334, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0287, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4242, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6961, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0267, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4014, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7708, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0254, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4362, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6733, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0236, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3838, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7775, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0215, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4318, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7087, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0219, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3982, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7721, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4383, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6966, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0251, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3985, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6944, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3995, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7296, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0254, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4156, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7994, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0296, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4588, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7462, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0193, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4118, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7944, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0275, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4521, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6896, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0283, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4013, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6860, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0267, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3964, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7176, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0263, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7186, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0204, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7741, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0230, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4330, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7105, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0262, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4077, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6879, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0204, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3847, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6951, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0240, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3955, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6772, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0217, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3821, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7088, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0248, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4040, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6967, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0253, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6866, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3899, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6871, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0222, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3880, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6797, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0240, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7234, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0280, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4178, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7455, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0206, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4139, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6953, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7132, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0218, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4002, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7322, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0324, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4309, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6841, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0280, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3981, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6855, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0239, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3906, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6871, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0239, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3913, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7032, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0289, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4093, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6599, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3784, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  42
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  41
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  44
gt_cnt:  39
gt_cnt:  41
gt_cnt:  39
gt_cnt:  42
gt_cnt:  41
gt_cnt:  40
gt_cnt:  40
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  35
gt_cnt:  36
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  36
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  35
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  35
gt_cnt:  43
gt_cnt:  39
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  43
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  37
gt_cnt:  35
gt_cnt:  39
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  38
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  42
gt_cnt:  44
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  41
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  43
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  42
gt_cnt:  36
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  34
gt_cnt:  38
gt_cnt:  40
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  42
gt_cnt:  38
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  36
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  41
gt_cnt:  38
gt_cnt:  42
gt_cnt:  38
gt_cnt:  39
gt_cnt:  41
gt_cnt:  42
gt_cnt:  39
gt_cnt:  39
gt_cnt:  43
gt_cnt:  36
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  41
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  42
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  35
gt_cnt:  35
gt_cnt:  38
gt_cnt:  42
gt_cnt:  37
gt_cnt:  38
gt_cnt:  42
gt_cnt:  37
gt_cnt:  37
gt_cnt:  39
gt_cnt:  34
gt_cnt:  39
gt_cnt:  37
gt_cnt:  39
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  40
gt_cnt:  41
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  38
gt_cnt:  35
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  41
gt_cnt:  40
gt_cnt:  39
gt_cnt:  41
gt_cnt:  43
gt_cnt:  35
gt_cnt:  40
gt_cnt:  41
gt_cnt:  39
gt_cnt:  44
gt_cnt:  38
gt_cnt:  36
gt_cnt:  36
gt_cnt:  40
gt_cnt:  38
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  41
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  41
gt_cnt:  41
gt_cnt:  37
gt_cnt:  42
gt_cnt:  42
gt_cnt:  38
gt_cnt:  36
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  41
gt_cnt:  43
gt_cnt:  37
gt_cnt:  41
gt_cnt:  35
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  35
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  38
gt_cnt:  40
gt_cnt:  42
gt_cnt:  41
gt_cnt:  38
gt_cnt:  35
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  40
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  37
gt_cnt:  40
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  36
gt_cnt:  39
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  44
gt_cnt:  40
gt_cnt:  41
gt_cnt:  36
gt_cnt:  37
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  42
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  39
gt_cnt:  41
gt_cnt:  42
gt_cnt:  41
gt_cnt:  33
gt_cnt:  37
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  43
gt_cnt:  38
gt_cnt:  37
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  36
gt_cnt:  40
gt_cnt:  41
gt_cnt:  36
gt_cnt:  38
gt_cnt:  38
gt_cnt:  40
gt_cnt:  38
gt_cnt:  35
gt_cnt:  36
gt_cnt:  40
gt_cnt:  40
gt_cnt:  39
gt_cnt:  40
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  38
gt_cnt:  37
gt_cnt:  40
gt_cnt:  37
gt_cnt:  37
gt_cnt:  38
gt_cnt:  42
gt_cnt:  39
gt_cnt:  36
gt_cnt:  39
gt_cnt:  39
gt_cnt:  41
gt_cnt:  36
gt_cnt:  39
gt_cnt:  35
gt_cnt:  40
gt_cnt:  39
gt_cnt:  35
gt_cnt:  39
gt_cnt:  41
gt_cnt:  37
gt_cnt:  44
gt_cnt:  38
gt_cnt:  41
gt_cnt:  35
gt_cnt:  41
gt_cnt:  38
gt_cnt:  38
gt_cnt:  41
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  42
gt_cnt:  41
gt_cnt:  39
gt_cnt:  37
gt_cnt:  41
gt_cnt:  38
gt_cnt:  39
gt_cnt:  37
torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 43])
cost torch.Size([1000, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6589, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3827, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7166, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0243, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4069, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
Train Epoch: 1, Batch:360, loss: 0.001130, Time: 127.6
Testing...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6840, device='cuda:0'), 'loss_center': tensor(0.0198, device='cuda:0')}
loss: tensor(0.3817, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6766, device='cuda:0'), 'loss_center': tensor(0.0187, device='cuda:0')}
loss: tensor(0.3758, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6792, device='cuda:0'), 'loss_center': tensor(0.0174, device='cuda:0')}
loss: tensor(0.3745, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6823, device='cuda:0'), 'loss_center': tensor(0.0179, device='cuda:0')}
loss: tensor(0.3769, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6864, device='cuda:0'), 'loss_center': tensor(0.0157, device='cuda:0')}
loss: tensor(0.3746, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6918, device='cuda:0'), 'loss_center': tensor(0.0213, device='cuda:0')}
loss: tensor(0.3886, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7014, device='cuda:0'), 'loss_center': tensor(0.0196, device='cuda:0')}
loss: tensor(0.3899, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6984, device='cuda:0'), 'loss_center': tensor(0.0235, device='cuda:0')}
loss: tensor(0.3962, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6820, device='cuda:0'), 'loss_center': tensor(0.0193, device='cuda:0')}
loss: tensor(0.3796, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6935, device='cuda:0'), 'loss_center': tensor(0.0199, device='cuda:0')}
loss: tensor(0.3865, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6877, device='cuda:0'), 'loss_center': tensor(0.0238, device='cuda:0')}
loss: tensor(0.3914, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6890, device='cuda:0'), 'loss_center': tensor(0.0189, device='cuda:0')}
loss: tensor(0.3823, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6825, device='cuda:0'), 'loss_center': tensor(0.0213, device='cuda:0')}
loss: tensor(0.3839, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6846, device='cuda:0'), 'loss_center': tensor(0.0205, device='cuda:0')}
loss: tensor(0.3833, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6770, device='cuda:0'), 'loss_center': tensor(0.0199, device='cuda:0')}
loss: tensor(0.3784, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6806, device='cuda:0'), 'loss_center': tensor(0.0220, device='cuda:0')}
loss: tensor(0.3842, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6815, device='cuda:0'), 'loss_center': tensor(0.0193, device='cuda:0')}
loss: tensor(0.3794, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6810, device='cuda:0'), 'loss_center': tensor(0.0186, device='cuda:0')}
loss: tensor(0.3777, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6811, device='cuda:0'), 'loss_center': tensor(0.0176, device='cuda:0')}
loss: tensor(0.3758, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6798, device='cuda:0'), 'loss_center': tensor(0.0214, device='cuda:0')}
loss: tensor(0.3827, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6844, device='cuda:0'), 'loss_center': tensor(0.0179, device='cuda:0')}
loss: tensor(0.3780, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6882, device='cuda:0'), 'loss_center': tensor(0.0191, device='cuda:0')}
loss: tensor(0.3823, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6982, device='cuda:0'), 'loss_center': tensor(0.0195, device='cuda:0')}
loss: tensor(0.3880, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6966, device='cuda:0'), 'loss_center': tensor(0.0199, device='cuda:0')}
loss: tensor(0.3880, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6998, device='cuda:0'), 'loss_center': tensor(0.0244, device='cuda:0')}
loss: tensor(0.3987, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6960, device='cuda:0'), 'loss_center': tensor(0.0196, device='cuda:0')}
loss: tensor(0.3871, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6854, device='cuda:0'), 'loss_center': tensor(0.0173, device='cuda:0')}
loss: tensor(0.3772, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6917, device='cuda:0'), 'loss_center': tensor(0.0190, device='cuda:0')}
loss: tensor(0.3839, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6929, device='cuda:0'), 'loss_center': tensor(0.0236, device='cuda:0')}
loss: tensor(0.3937, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6935, device='cuda:0'), 'loss_center': tensor(0.0228, device='cuda:0')}
loss: tensor(0.3923, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 34])
cost torch.Size([1000, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6970, device='cuda:0'), 'loss_center': tensor(0.0202, device='cuda:0')}
loss: tensor(0.3889, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6947, device='cuda:0'), 'loss_center': tensor(0.0190, device='cuda:0')}
loss: tensor(0.3852, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6994, device='cuda:0'), 'loss_center': tensor(0.0179, device='cuda:0')}
loss: tensor(0.3855, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6897, device='cuda:0'), 'loss_center': tensor(0.0213, device='cuda:0')}
loss: tensor(0.3875, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6878, device='cuda:0'), 'loss_center': tensor(0.0176, device='cuda:0')}
loss: tensor(0.3792, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape: gt_cnt:  39
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  40
gt_cnt:  39
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  38
gt_cnt:  36
gt_cnt:  37
gt_cnt:  34
gt_cnt:  36
gt_cnt:  39
gt_cnt:  38
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  39
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
gt_cnt:  34
gt_cnt:  39
gt_cnt:  37
gt_cnt:  38
gt_cnt:  39
gt_cnt:  39
gt_cnt:  37
gt_cnt:  36
gt_cnt:  36
gt_cnt:  37
gt_cnt:  36
 torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.6901, device='cuda:0'), 'loss_center': tensor(0.0192, device='cuda:0')}
loss: tensor(0.3835, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 34])
cost torch.Size([1000, 34])
indices0 shape:  34
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([34, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7072, device='cuda:0'), 'loss_center': tensor(0.0174, device='cuda:0')}
loss: tensor(0.3885, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7008, device='cuda:0'), 'loss_center': tensor(0.0202, device='cuda:0')}
loss: tensor(0.3908, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6840, device='cuda:0'), 'loss_center': tensor(0.0200, device='cuda:0')}
loss: tensor(0.3819, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6780, device='cuda:0'), 'loss_center': tensor(0.0206, device='cuda:0')}
loss: tensor(0.3801, device='cuda:0', dtype=torch.float64)
pos_all shape: torch.Size([1000, 2])
scores shape:  torch.Size([1, 50])
pos shape: torch.Size([50, 2])
frame_idx torch.Size([50, 1])
moda: 0.0%, modp: 34.9%, prec: 7.3%, recall: 9.8%
Test, loss: 0.384095, Time: 15.095
Training...
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7541, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4233, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7142, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0197, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3965, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6981, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0250, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7038, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0297, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4114, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6935, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0237, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3941, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7082, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0223, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3987, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6852, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0279, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7242, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0238, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4096, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7147, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0216, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4006, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6959, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0235, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3950, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7126, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0269, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4100, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6939, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0271, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4012, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7004, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0241, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3984, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8323, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0218, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4598, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6966, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0263, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4009, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7226, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0236, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4084, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7136, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0209, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3987, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7721, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4344, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.7240, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0226, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4072, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6925, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0250, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6864, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0223, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3878, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 43])
cost torch.Size([1000, 43])
indices0 shape:  43
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([43, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7433, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0270, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4257, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 33])
cost torch.Size([1000, 33])
indices0 shape:  33
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([33, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7832, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0253, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4423, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7458, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0215, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4160, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7299, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4159, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7073, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0244, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4025, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6776, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0223, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3834, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6733, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3828, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.6913, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0253, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3962, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6952, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0235, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3945, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7115, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0245, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4047, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6580, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0237, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3765, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.9605, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0230, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.5262, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.8273, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0249, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4635, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6903, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0184, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3820, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6948, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0271, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6755, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3900, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7198, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0263, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4125, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.8088, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4547, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.6690, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0210, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3765, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7108, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0240, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4034, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7408, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0231, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4167, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6898, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3977, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7179, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0239, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4067, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7784, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0237, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4366, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6886, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0244, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3931, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6773, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0261, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3908, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.6834, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0246, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3908, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7142, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0211, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3993, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7284, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0250, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4142, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6849, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3934, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7069, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0235, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4004, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6608, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0235, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3773, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7036, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0236, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3990, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 37])
cost torch.Size([1000, 37])
indices0 shape:  37
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([37, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True]])
{'loss_ce': tensor(0.7081, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0209, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3959, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 42])
cost torch.Size([1000, 42])
indices0 shape:  42
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([42, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True]])
{'loss_ce': tensor(0.7063, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0252, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4036, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6649, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3836, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.7955, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0228, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4434, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7666, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0283, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4399, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.7297, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0232, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4113, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6742, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0266, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3903, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 35])
cost torch.Size([1000, 35])
indices0 shape:  35
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([35, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7106, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0221, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3994, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6946, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0263, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4000, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 40])
cost torch.Size([1000, 40])
indices0 shape:  40
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([40, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True]])
{'loss_ce': tensor(0.6974, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0276, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4039, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 36])
cost torch.Size([1000, 36])
indices0 shape:  36
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([36, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True]])
{'loss_ce': tensor(0.7017, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0220, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3948, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.6936, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0247, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3963, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 39])
cost torch.Size([1000, 39])
indices0 shape:  39
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([39, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True]])
{'loss_ce': tensor(0.8202, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0242, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4585, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 41])
cost torch.Size([1000, 41])
indices0 shape:  41
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([41, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True]])
{'loss_ce': tensor(0.7006, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.4017, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
after merge:  torch.Size([1, 128, 80, 125])
query shape:  torch.Size([1, 1000, 128])
ref pts dec:  torch.Size([1, 1000, 2])
out_prob shape:  torch.Size([1000, 1])
pos_c_cls:  torch.Size([1000, 1])
tgt_ids:  tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
cost_class shape:  torch.Size([1000, 1])
cost_pts shape:  torch.Size([1000, 38])
cost torch.Size([1000, 38])
indices0 shape:  38
outlabel_shape:  torch.Size([1000, 1])
src_logit shape:  torch.Size([1000, 1])
tgt_cls shape:  torch.Size([1000])
tgt_pts_shape:  torch.Size([38, 2])
mask:  tensor([[True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True, True, True, True, True, True, True, True, True, True, True,
         True, True]])
{'loss_ce': tensor(0.6826, device='cuda:0', grad_fn=<MulBackward0>), 'loss_center': tensor(0.0217, device='cuda:0', grad_fn=<DivBackward0>)}
tensor(0.3846, device='cuda:0', dtype=torch.float64, grad_fn=<AddBackward0>)
gt_cnt:  39
gt_cnt:  40
gt_cnt:  35
gt_cnt:  37
gt_cnt:  40
gt_cnt:  33
gt_cnt:  40
gt_cnt:  36
gt_cnt:  38
gt_cnt:  41
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
gt_cnt:  37
gt_cnt:  36
gt_cnt:  38
gt_cnt:  39
gt_cnt:  40
